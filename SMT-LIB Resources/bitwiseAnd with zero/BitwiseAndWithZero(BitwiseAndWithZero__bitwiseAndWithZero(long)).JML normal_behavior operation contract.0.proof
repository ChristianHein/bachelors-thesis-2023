\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 27 10:18:39 CEST 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]Presburger=false
[NewSMT]sqrtSMTTranslation=SMT
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=7000
[Strategy]Timeout=-1
"
}

\javaSource ".";

\include "taclets/intSet.key",  "taclets/binaryAxiomsExtension.key",  "taclets/bitwiseOperations.key";

\proofObligation "#Proof Obligation Settings
#Thu Apr 27 10:18:39 CEST 2023
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
contract=BitwiseAndWithZero[BitwiseAndWithZero\\:\\:bitwiseAndWithZero(long)].JML normal_behavior operation contract.0
name=BitwiseAndWithZero[BitwiseAndWithZero\\:\\:bitwiseAndWithZero(long)].JML normal_behavior operation contract.0
";

\proof {
(keyLog "0" (keyUser "christianhein" ) (keyVersion "208396f69e"))

(autoModeTime "63302")

(branch "dummy ID"
(rule "expand_inLong" (formula "1") (term "1,0,0") (newnames "heapAtPre,o,f"))
(rule "replace_long_MIN" (formula "1") (term "0,1,1,0,0"))
(rule "replace_long_MAX" (formula "1") (term "1,0,1,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "eqSymm" (formula "5") (term "0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_bitwiseAndWithZero,savedHeapBefore_bitwiseAndWithZero"))
 (builtin "One Step Simplification" (formula "5"))
(rule "returnUnfold" (formula "5") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x"))
(rule "assignmentBitwiseAndLong2" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "translateJavaBitwiseAndLong" (formula "5") (term "0,1,0"))
(rule "andJLongDef" (formula "5") (term "0,1,0"))
(rule "methodCallReturn" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1,1"))
(rule "tryEmpty" (formula "5") (term "1,1"))
(rule "emptyModality" (formula "5") (term "1,1"))
(rule "sequentialToParallel2" (formula "5") (userinteraction))
(rule "simplifyUpdate2" (formula "5") (userinteraction))
(rule "applyOnRigidFormula" (formula "5") (userinteraction))
(rule "simplifyUpdate2" (formula "5") (term "1") (userinteraction))
(rule "applyOnSkip" (formula "5") (term "1,0,1") (userinteraction))
(rule "parallelWithSkip2" (formula "5") (term "0,1") (userinteraction))
(rule "applyOnRigidFormula" (formula "5") (term "1") (userinteraction))
(rule "applyOnRigidFormula" (formula "5") (term "0,1") (userinteraction))
(rule "applyOnRigidFormula" (formula "5") (term "0,0,1") (userinteraction))
(rule "simplifyUpdate1" (formula "5") (term "1,0,0,1") (userinteraction))
(rule "applyOnRigidTerm" (formula "5") (term "0,0,0,1") (userinteraction))
(rule "simplifyUpdate1" (formula "5") (term "1,0,0,0,1") (userinteraction))
(rule "simplifyUpdate1" (formula "5") (term "2,0,0,0,1") (userinteraction))
(rule "applyOnPV" (formula "5") (term "0,0,0,0,1") (userinteraction))
(rule "eqClose" (formula "5") (term "0,0,1") (userinteraction))
(rule "all_unused" (formula "5") (term "0,1") (userinteraction))
(rule "all_unused" (formula "5") (term "1") (userinteraction))
(rule "concrete_and_3" (formula "5") (userinteraction))
(rule "simplifyUpdate2" (formula "5") (userinteraction))
(rule "simplifyUpdate3" (formula "5") (term "1,0") (userinteraction))
(rule "applyOnElementary" (formula "5") (term "1,0") (userinteraction))
(rule "applyOnPV" (formula "5") (term "0,1,0") (userinteraction))
(rule "applyOnRigidFormula" (formula "5") (userinteraction))
(rule "simplifyUpdate2" (formula "5") (term "0") (userinteraction))
(rule "applyOnRigidFormula" (formula "5") (term "0") (userinteraction))
(rule "applyOnPV" (formula "5") (term "0,0") (userinteraction))
(rule "simplifyUpdate1" (formula "5") (term "1,0") (userinteraction))
(rule "simplifyUpdate2" (formula "5") (term "1") (userinteraction))
(rule "applyOnRigidFormula" (formula "5") (term "1") (userinteraction))
(rule "applyOnPV" (formula "5") (term "0,1") (userinteraction))
(rule "simplifyUpdate1" (formula "5") (term "1,1") (userinteraction))
(rule "eqClose" (formula "5") (term "1") (userinteraction))
(rule "concrete_and_3" (formula "5") (userinteraction))
(rule "cut" (inst "cutFormula=(\\forall int x;
   (\\forall int y;
      ((   (  inLong(x)<<origin(\"User_Interaction @ node 86 (cut)\",\"[]\")>>
            & inLong(y)<<origin(\"User_Interaction @ node 86 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 86 (cut)\",\"[]\")>>
        -> inLong(binaryAnd(x, y))<<origin(\"User_Interaction @ node 86 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 86 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 86 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 86 (cut)\",\"[]\")>>") (userinteraction))
(branch "CUT: ∀ int x; ∀ int y; (inLong(x) ∧ inLong(y) → inLong(binaryAnd(x, y))) TRUE"
   (rule "instAll" (formula "6") (term "0,0,0") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "7") (term "1,0,0") (ifseqformula "1") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch "Case 1"
      (rule "hide_right" (formula "8") (userinteraction))
      (rule "expand_inLong" (formula "7") (term "0"))
      (rule "expand_inLong" (formula "7") (term "1"))
      (rule "expand_inLong" (formula "2") (term "0,0,0,0"))
      (rule "expand_inLong" (formula "2") (term "1,0,0,0"))
      (rule "expand_inLong" (formula "2") (term "1,0,0"))
      (rule "expand_inLong" (formula "1") (term "0,0,0"))
      (rule "expand_inLong" (formula "1") (term "1,0,0"))
      (rule "expand_inLong" (formula "1") (term "1,0"))
      (rule "replace_long_MIN" (formula "7") (term "0,1,0"))
      (rule "replace_long_MAX" (formula "7") (term "1,0,0"))
      (rule "replace_long_MIN" (formula "7") (term "0,1,1"))
      (rule "replace_long_MAX" (formula "7") (term "1,0,1"))
      (rule "replace_long_MIN" (formula "2") (term "0,1,0,0,0,0"))
      (rule "replace_long_MAX" (formula "2") (term "1,0,0,0,0,0"))
      (rule "replace_long_MIN" (formula "2") (term "0,1,1,0,0,0"))
      (rule "replace_long_MAX" (formula "2") (term "1,0,1,0,0,0"))
      (rule "replace_long_MIN" (formula "2") (term "0,1,1,0,0"))
      (rule "replace_long_MAX" (formula "2") (term "1,0,1,0,0"))
      (rule "replace_long_MIN" (formula "1") (term "0,1,0,0,0"))
      (rule "replace_long_MAX" (formula "1") (term "1,0,0,0,0"))
      (rule "replace_long_MIN" (formula "1") (term "0,1,1,0,0"))
      (rule "replace_long_MAX" (formula "1") (term "1,0,1,0,0"))
      (rule "replace_long_MIN" (formula "1") (term "0,1,1,0"))
      (rule "replace_long_MAX" (formula "1") (term "1,0,1,0"))
      (rule "leq_literals" (formula "7") (term "1,1"))
       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "4")))
      (rule "leq_literals" (formula "7") (term "1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
      (rule "true_left" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "1,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
      (rule "qeq_literals" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "closeFalse" (formula "5"))
   )
   (branch "Case 2"
      (rule "moduloLongFixpoint" (formula "8") (term "0") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "expand_inLong" (formula "1") (userinteraction))
      (rule "replace_long_MAX" (formula "1") (term "1,0") (userinteraction))
      (rule "replace_long_MIN" (formula "1") (term "0,1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
       (opengoal " ")
   )
)
(branch "CUT: ∀ int x; ∀ int y; (inLong(x) ∧ inLong(y) → inLong(binaryAnd(x, y))) FALSE"
   (rule "hide_right" (formula "6") (userinteraction))
   (rule "allRight" (formula "5") (inst "sk=x_0") (userinteraction))
   (rule "allRight" (formula "5") (inst "sk=y_0") (userinteraction))
   (rule "impRight" (formula "5") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "binaryAndLongDef_expanded" (formula "7") (term "0") (userinteraction))
   (branch "Case 1"
      (rule "pullOut" (formula "7") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_0") (userinteraction))
      (rule "pullOut" (formula "8") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_1") (userinteraction))
      (rule "pullOut" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_2") (userinteraction))
      (rule "pullOut" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_3") (userinteraction))
      (rule "pullOut" (formula "11") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_4") (userinteraction))
      (rule "pullOut" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_5") (userinteraction))
      (rule "pullOut" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_6") (userinteraction))
      (rule "pullOut" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_7") (userinteraction))
      (rule "pullOut" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_8") (userinteraction))
      (rule "pullOut" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_9") (userinteraction))
      (rule "pullOut" (formula "17") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_10") (userinteraction))
      (rule "pullOut" (formula "18") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_11") (userinteraction))
      (rule "pullOut" (formula "19") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_12") (userinteraction))
      (rule "pullOut" (formula "20") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_13") (userinteraction))
      (rule "pullOut" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_14") (userinteraction))
      (rule "pullOut" (formula "22") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_15") (userinteraction))
      (rule "pullOut" (formula "23") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_16") (userinteraction))
      (rule "pullOut" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_17") (userinteraction))
      (rule "pullOut" (formula "25") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_18") (userinteraction))
      (rule "pullOut" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_19") (userinteraction))
      (rule "pullOut" (formula "27") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_20") (userinteraction))
      (rule "pullOut" (formula "28") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_21") (userinteraction))
      (rule "pullOut" (formula "29") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_22") (userinteraction))
      (rule "pullOut" (formula "30") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_23") (userinteraction))
      (rule "pullOut" (formula "31") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_24") (userinteraction))
      (rule "pullOut" (formula "32") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_25") (userinteraction))
      (rule "pullOut" (formula "33") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_26") (userinteraction))
      (rule "pullOut" (formula "34") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_27") (userinteraction))
      (rule "pullOut" (formula "35") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_28") (userinteraction))
      (rule "pullOut" (formula "36") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_29") (userinteraction))
      (rule "pullOut" (formula "37") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_30") (userinteraction))
      (rule "pullOut" (formula "38") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_31") (userinteraction))
      (rule "pullOut" (formula "39") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_32") (userinteraction))
      (rule "pullOut" (formula "40") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_33") (userinteraction))
      (rule "pullOut" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_34") (userinteraction))
      (rule "pullOut" (formula "42") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_35") (userinteraction))
      (rule "pullOut" (formula "43") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_36") (userinteraction))
      (rule "pullOut" (formula "44") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_37") (userinteraction))
      (rule "pullOut" (formula "45") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_38") (userinteraction))
      (rule "pullOut" (formula "46") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_39") (userinteraction))
      (rule "pullOut" (formula "47") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_40") (userinteraction))
      (rule "pullOut" (formula "48") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_41") (userinteraction))
      (rule "pullOut" (formula "49") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_42") (userinteraction))
      (rule "pullOut" (formula "50") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_43") (userinteraction))
      (rule "pullOut" (formula "51") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_44") (userinteraction))
      (rule "pullOut" (formula "52") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_45") (userinteraction))
      (rule "pullOut" (formula "53") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_46") (userinteraction))
      (rule "pullOut" (formula "54") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_47") (userinteraction))
      (rule "pullOut" (formula "55") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_48") (userinteraction))
      (rule "pullOut" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_49") (userinteraction))
      (rule "pullOut" (formula "57") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_50") (userinteraction))
      (rule "pullOut" (formula "58") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_51") (userinteraction))
      (rule "pullOut" (formula "59") (term "1,0,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_52") (userinteraction))
      (rule "pullOut" (formula "60") (term "1,0,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_53") (userinteraction))
      (rule "pullOut" (formula "61") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "sk=mul_54") (userinteraction))
      (rule "pullOut" (formula "62") (term "1,0,0,0,0,0,0,0,0,0") (inst "sk=mul_55") (userinteraction))
      (rule "pullOut" (formula "63") (term "1,0,0,0,0,0,0,0,0") (inst "sk=mul_56") (userinteraction))
      (rule "pullOut" (formula "64") (term "1,0,0,0,0,0,0,0") (inst "sk=mul_57") (userinteraction))
      (rule "pullOut" (formula "65") (term "1,0,0,0,0,0,0") (inst "sk=mul_58") (userinteraction))
      (rule "pullOut" (formula "66") (term "1,0,0,0,0,0") (inst "sk=mul_59") (userinteraction))
      (rule "pullOut" (formula "67") (term "1,0,0,0,0") (inst "sk=mul_60") (userinteraction))
      (rule "pullOut" (formula "68") (term "1,0,0,0") (inst "sk=mul_61") (userinteraction))
      (rule "pullOut" (formula "69") (term "1,0,0") (inst "sk=mul_62") (userinteraction))
      (rule "cut" (inst "cutFormula=(  (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((  (  mul_0
                                                                     = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
                                                                  | (  mul_0
                                                                     = pow(Z(2(#)),
                                                                           Z(0(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)
 & ((  (mul_1 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_1 = pow(Z(2(#)), Z(1(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_2 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_2 = pow(Z(2(#)), Z(2(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_3 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_3 = pow(Z(2(#)), Z(3(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_4 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_4 = pow(Z(2(#)), Z(4(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_5 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_5 = pow(Z(2(#)), Z(5(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_6 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_6 = pow(Z(2(#)), Z(6(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_7 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_7 = pow(Z(2(#)), Z(7(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_8 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_8 = pow(Z(2(#)), Z(8(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_9 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_9 = pow(Z(2(#)), Z(9(#))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_10 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_10 = pow(Z(2(#)), Z(0(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_11 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_11 = pow(Z(2(#)), Z(1(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_12 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_12 = pow(Z(2(#)), Z(2(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_13 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_13 = pow(Z(2(#)), Z(3(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_14 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_14 = pow(Z(2(#)), Z(4(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_15 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_15 = pow(Z(2(#)), Z(5(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_16 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_16 = pow(Z(2(#)), Z(6(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_17 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_17 = pow(Z(2(#)), Z(7(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_18 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_18 = pow(Z(2(#)), Z(8(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_19 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_19 = pow(Z(2(#)), Z(9(1(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_20 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_20 = pow(Z(2(#)), Z(0(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_21 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_21 = pow(Z(2(#)), Z(1(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_22 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_22 = pow(Z(2(#)), Z(2(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_23 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_23 = pow(Z(2(#)), Z(3(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_24 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_24 = pow(Z(2(#)), Z(4(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_25 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_25 = pow(Z(2(#)), Z(5(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_26 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_26 = pow(Z(2(#)), Z(6(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_27 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_27 = pow(Z(2(#)), Z(7(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_28 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_28 = pow(Z(2(#)), Z(8(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_29 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_29 = pow(Z(2(#)), Z(9(2(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_30 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_30 = pow(Z(2(#)), Z(0(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_31 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_31 = pow(Z(2(#)), Z(1(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_32 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_32 = pow(Z(2(#)), Z(2(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_33 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_33 = pow(Z(2(#)), Z(3(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_34 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_34 = pow(Z(2(#)), Z(4(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_35 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_35 = pow(Z(2(#)), Z(5(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_36 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_36 = pow(Z(2(#)), Z(6(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_37 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_37 = pow(Z(2(#)), Z(7(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_38 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_38 = pow(Z(2(#)), Z(8(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_39 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_39 = pow(Z(2(#)), Z(9(3(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_40 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_40 = pow(Z(2(#)), Z(0(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_41 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_41 = pow(Z(2(#)), Z(1(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_42 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_42 = pow(Z(2(#)), Z(2(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_43 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_43 = pow(Z(2(#)), Z(3(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_44 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_44 = pow(Z(2(#)), Z(4(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_45 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_45 = pow(Z(2(#)), Z(5(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_46 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_46 = pow(Z(2(#)), Z(6(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_47 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_47 = pow(Z(2(#)), Z(7(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_48 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_48 = pow(Z(2(#)), Z(8(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_49 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_49 = pow(Z(2(#)), Z(9(4(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_50 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_50 = pow(Z(2(#)), Z(0(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_51 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_51 = pow(Z(2(#)), Z(1(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_52 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_52 = pow(Z(2(#)), Z(2(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_53 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_53 = pow(Z(2(#)), Z(3(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_54 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_54 = pow(Z(2(#)), Z(4(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_55 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_55 = pow(Z(2(#)), Z(5(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_56 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_56 = pow(Z(2(#)), Z(6(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_57 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_57 = pow(Z(2(#)), Z(7(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_58 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_58 = pow(Z(2(#)), Z(8(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_59 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_59 = pow(Z(2(#)), Z(9(5(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_60 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_60 = pow(Z(2(#)), Z(0(6(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_61 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_61 = pow(Z(2(#)), Z(1(6(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
 & ((  (mul_62 = Z(0(#)))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>
     | (mul_62 = pow(Z(2(#)), Z(2(6(#)))))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>))<<origin(\"User_Interaction @ node 4056 (cut)\",\"[]\")>>") (userinteraction))
      (branch "CUT: (mul_0 = 0 ∨ mul_0 = pow(2, 0)) ∧ (mul_1 = 0 ∨ mul_1 = pow(2, 1)) ∧ (mul_2 = 0 ∨ mul_2 = pow(2, 2)) ∧ (mul_3 = 0 ∨ mul_3 = pow(2, 3)) ∧ (mul_4 = 0 ∨ mul_4 = pow(2, 4)) ∧ (mul_5 = 0 ∨ mul_5 = pow(2, 5)) ∧ (mul_6 = 0 ∨ mul_6 = pow(2, 6)) ∧ (mul_7 = 0 ∨ mul_7 = pow(2, 7)) ∧ (mul_8 = 0 ∨ mul_8 = pow(2, 8)) ∧ (mul_9 = 0 ∨ mul_9 = pow(2, 9)) ∧ (mul_10 = 0 ∨ mul_10 = pow(2, 10)) ∧ (mul_11 = 0 ∨ mul_11 = pow(2, 11)) ∧ (mul_12 = 0 ∨ mul_12 = pow(2, 12)) ∧ (mul_13 = 0 ∨ mul_13 = pow(2, 13)) ∧ (mul_14 = 0 ∨ mul_14 = pow(2, 14)) ∧ (mul_15 = 0 ∨ mul_15 = pow(2, 15)) ∧ (mul_16 = 0 ∨ mul_16 = pow(2, 16)) ∧ (mul_17 = 0 ∨ mul_17 = pow(2, 17)) ∧ (mul_18 = 0 ∨ mul_18 = pow(2, 18)) ∧ (mul_19 = 0 ∨ mul_19 = pow(2, 19)) ∧ (mul_20 = 0 ∨ mul_20 = pow(2, 20)) ∧ (mul_21 = 0 ∨ mul_21 = pow(2, 21)) ∧ (mul_22 = 0 ∨ mul_22 = pow(2, 22)) ∧ (mul_23 = 0 ∨ mul_23 = pow(2, 23)) ∧ (mul_24 = 0 ∨ mul_24 = pow(2, 24)) ∧ (mul_25 = 0 ∨ mul_25 = pow(2, 25)) ∧ (mul_26 = 0 ∨ mul_26 = pow(2, 26)) ∧ (mul_27 = 0 ∨ mul_27 = pow(2, 27)) ∧ (mul_28 = 0 ∨ mul_28 = pow(2, 28)) ∧ (mul_29 = 0 ∨ mul_29 = pow(2, 29)) ∧ (mul_30 = 0 ∨ mul_30 = pow(2, 30)) ∧ (mul_31 = 0 ∨ mul_31 = pow(2, 31)) ∧ (mul_32 = 0 ∨ mul_32 = pow(2, 32)) ∧ (mul_33 = 0 ∨ mul_33 = pow(2, 33)) ∧ (mul_34 = 0 ∨ mul_34 = pow(2, 34)) ∧ (mul_35 = 0 ∨ mul_35 = pow(2, 35)) ∧ (mul_36 = 0 ∨ mul_36 = pow(2, 36)) ∧ (mul_37 = 0 ∨ mul_37 = pow(2, 37)) ∧ (mul_38 = 0 ∨ mul_38 = pow(2, 38)) ∧ (mul_39 = 0 ∨ mul_39 = pow(2, 39)) ∧ (mul_40 = 0 ∨ mul_40 = pow(2, 40)) ∧ (mul_41 = 0 ∨ mul_41 = pow(2, 41)) ∧ (mul_42 = 0 ∨ mul_42 = pow(2, 42)) ∧ (mul_43 = 0 ∨ mul_43 = pow(2, 43)) ∧ (mul_44 = 0 ∨ mul_44 = pow(2, 44)) ∧ (mul_45 = 0 ∨ mul_45 = pow(2, 45)) ∧ (mul_46 = 0 ∨ mul_46 = pow(2, 46)) ∧ (mul_47 = 0 ∨ mul_47 = pow(2, 47)) ∧ (mul_48 = 0 ∨ mul_48 = pow(2, 48)) ∧ (mul_49 = 0 ∨ mul_49 = pow(2, 49)) ∧ (mul_50 = 0 ∨ mul_50 = pow(2, 50)) ∧ (mul_51 = 0 ∨ mul_51 = pow(2, 51)) ∧ (mul_52 = 0 ∨ mul_52 = pow(2, 52)) ∧ (mul_53 = 0 ∨ mul_53 = pow(2, 53)) ∧ (mul_54 = 0 ∨ mul_54 = pow(2, 54)) ∧ (mul_55 = 0 ∨ mul_55 = pow(2, 55)) ∧ (mul_56 = 0 ∨ mul_56 = pow(2, 56)) ∧ (mul_57 = 0 ∨ mul_57 = pow(2, 57)) ∧ (mul_58 = 0 ∨ mul_58 = pow(2, 58)) ∧ (mul_59 = 0 ∨ mul_59 = pow(2, 59)) ∧ (mul_60 = 0 ∨ mul_60 = pow(2, 60)) ∧ (mul_61 = 0 ∨ mul_61 = pow(2, 61)) ∧ (mul_62 = 0 ∨ mul_62 = pow(2, 62)) TRUE"
          (opengoal " ")
      )
      (branch "CUT: (mul_0 = 0 ∨ mul_0 = pow(2, 0)) ∧ (mul_1 = 0 ∨ mul_1 = pow(2, 1)) ∧ (mul_2 = 0 ∨ mul_2 = pow(2, 2)) ∧ (mul_3 = 0 ∨ mul_3 = pow(2, 3)) ∧ (mul_4 = 0 ∨ mul_4 = pow(2, 4)) ∧ (mul_5 = 0 ∨ mul_5 = pow(2, 5)) ∧ (mul_6 = 0 ∨ mul_6 = pow(2, 6)) ∧ (mul_7 = 0 ∨ mul_7 = pow(2, 7)) ∧ (mul_8 = 0 ∨ mul_8 = pow(2, 8)) ∧ (mul_9 = 0 ∨ mul_9 = pow(2, 9)) ∧ (mul_10 = 0 ∨ mul_10 = pow(2, 10)) ∧ (mul_11 = 0 ∨ mul_11 = pow(2, 11)) ∧ (mul_12 = 0 ∨ mul_12 = pow(2, 12)) ∧ (mul_13 = 0 ∨ mul_13 = pow(2, 13)) ∧ (mul_14 = 0 ∨ mul_14 = pow(2, 14)) ∧ (mul_15 = 0 ∨ mul_15 = pow(2, 15)) ∧ (mul_16 = 0 ∨ mul_16 = pow(2, 16)) ∧ (mul_17 = 0 ∨ mul_17 = pow(2, 17)) ∧ (mul_18 = 0 ∨ mul_18 = pow(2, 18)) ∧ (mul_19 = 0 ∨ mul_19 = pow(2, 19)) ∧ (mul_20 = 0 ∨ mul_20 = pow(2, 20)) ∧ (mul_21 = 0 ∨ mul_21 = pow(2, 21)) ∧ (mul_22 = 0 ∨ mul_22 = pow(2, 22)) ∧ (mul_23 = 0 ∨ mul_23 = pow(2, 23)) ∧ (mul_24 = 0 ∨ mul_24 = pow(2, 24)) ∧ (mul_25 = 0 ∨ mul_25 = pow(2, 25)) ∧ (mul_26 = 0 ∨ mul_26 = pow(2, 26)) ∧ (mul_27 = 0 ∨ mul_27 = pow(2, 27)) ∧ (mul_28 = 0 ∨ mul_28 = pow(2, 28)) ∧ (mul_29 = 0 ∨ mul_29 = pow(2, 29)) ∧ (mul_30 = 0 ∨ mul_30 = pow(2, 30)) ∧ (mul_31 = 0 ∨ mul_31 = pow(2, 31)) ∧ (mul_32 = 0 ∨ mul_32 = pow(2, 32)) ∧ (mul_33 = 0 ∨ mul_33 = pow(2, 33)) ∧ (mul_34 = 0 ∨ mul_34 = pow(2, 34)) ∧ (mul_35 = 0 ∨ mul_35 = pow(2, 35)) ∧ (mul_36 = 0 ∨ mul_36 = pow(2, 36)) ∧ (mul_37 = 0 ∨ mul_37 = pow(2, 37)) ∧ (mul_38 = 0 ∨ mul_38 = pow(2, 38)) ∧ (mul_39 = 0 ∨ mul_39 = pow(2, 39)) ∧ (mul_40 = 0 ∨ mul_40 = pow(2, 40)) ∧ (mul_41 = 0 ∨ mul_41 = pow(2, 41)) ∧ (mul_42 = 0 ∨ mul_42 = pow(2, 42)) ∧ (mul_43 = 0 ∨ mul_43 = pow(2, 43)) ∧ (mul_44 = 0 ∨ mul_44 = pow(2, 44)) ∧ (mul_45 = 0 ∨ mul_45 = pow(2, 45)) ∧ (mul_46 = 0 ∨ mul_46 = pow(2, 46)) ∧ (mul_47 = 0 ∨ mul_47 = pow(2, 47)) ∧ (mul_48 = 0 ∨ mul_48 = pow(2, 48)) ∧ (mul_49 = 0 ∨ mul_49 = pow(2, 49)) ∧ (mul_50 = 0 ∨ mul_50 = pow(2, 50)) ∧ (mul_51 = 0 ∨ mul_51 = pow(2, 51)) ∧ (mul_52 = 0 ∨ mul_52 = pow(2, 52)) ∧ (mul_53 = 0 ∨ mul_53 = pow(2, 53)) ∧ (mul_54 = 0 ∨ mul_54 = pow(2, 54)) ∧ (mul_55 = 0 ∨ mul_55 = pow(2, 55)) ∧ (mul_56 = 0 ∨ mul_56 = pow(2, 56)) ∧ (mul_57 = 0 ∨ mul_57 = pow(2, 57)) ∧ (mul_58 = 0 ∨ mul_58 = pow(2, 58)) ∧ (mul_59 = 0 ∨ mul_59 = pow(2, 59)) ∧ (mul_60 = 0 ∨ mul_60 = pow(2, 60)) ∧ (mul_61 = 0 ∨ mul_61 = pow(2, 61)) ∧ (mul_62 = 0 ∨ mul_62 = pow(2, 62)) FALSE"
         (rule "bitAtDef" (formula "1") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "1") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "2") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "2") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "3") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "3") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "4") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "4") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "5") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "5") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "6") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "6") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "7") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "7") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "8") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "8") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "9") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "9") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "10") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "10") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "11") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "11") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "12") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "12") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "13") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "13") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "14") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "14") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "15") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "15") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "16") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "16") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "17") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "17") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "18") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "18") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "19") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "19") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "20") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "20") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "21") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "21") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "22") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "22") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "23") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "23") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "24") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "24") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "25") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "25") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "26") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "26") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "27") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "27") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "28") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "28") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "29") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "29") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "30") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "30") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "31") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "31") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "32") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "32") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "33") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "33") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "34") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "34") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "35") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "35") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "36") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "36") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "37") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "37") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "38") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "38") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "39") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "39") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "40") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "40") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "41") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "41") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "42") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "42") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "43") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "43") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "44") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "44") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "45") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "45") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "46") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "46") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "47") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "47") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "48") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "48") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "49") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "49") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "50") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "50") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "51") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "51") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "52") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "52") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "53") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "53") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "54") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "54") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "55") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "55") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "56") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "56") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "57") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "57") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "58") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "58") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "59") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "59") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "60") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "60") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "61") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "61") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "62") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "62") (term "1,0") (proofscript))
         (rule "bitAtDef" (formula "63") (term "1,0,0") (proofscript))
         (rule "bitAtDef" (formula "63") (term "1,0") (proofscript))
         (rule "leq_literals" (formula "1") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "1") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "2") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "2") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "3") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "3") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "4") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "4") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "5") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "5") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "6") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "6") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "7") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "7") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "8") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "8") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "9") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "9") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "10") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "10") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "11") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "11") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "12") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "12") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "13") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "13") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "14") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "14") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "15") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "15") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "16") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "16") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "17") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "17") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "18") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "18") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "19") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "19") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "20") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "20") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "21") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "21") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "22") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "22") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "23") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "23") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "24") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "24") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "25") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "25") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "26") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "26") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "27") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "27") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "28") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "28") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "29") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "29") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "30") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "30") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "31") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "31") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "32") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "32") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "33") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "33") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "34") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "34") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "35") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "35") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "36") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "36") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "37") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "37") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "38") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "38") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "39") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "39") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "40") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "40") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "41") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "41") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "42") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "42") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "43") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "43") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "44") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "44") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "45") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "45") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "46") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "46") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "47") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "47") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "48") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "48") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "49") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "49") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "50") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "50") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "51") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "51") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "52") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "52") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "53") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "53") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "54") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "54") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "55") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "55") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "56") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "56") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "57") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "57") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "58") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "58") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "59") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "59") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "60") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "60") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "61") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "61") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "62") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "62") (term "0,1,0") (proofscript))
         (rule "leq_literals" (formula "63") (term "0,1,0,0") (proofscript))
         (rule "leq_literals" (formula "63") (term "0,1,0") (proofscript))
         (rule "ifthenelse_true" (formula "1") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "1") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "2") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "2") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "3") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "3") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "4") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "4") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "5") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "5") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "6") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "6") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "7") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "7") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "8") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "8") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "9") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "9") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "10") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "10") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "11") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "11") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "12") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "12") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "13") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "13") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "14") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "14") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "15") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "15") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "16") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "16") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "17") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "17") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "18") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "18") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "19") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "19") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "20") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "20") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "21") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "21") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "22") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "22") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "23") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "23") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "24") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "24") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "25") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "25") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "26") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "26") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "27") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "27") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "28") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "28") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "29") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "29") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "30") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "30") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "31") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "31") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "32") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "32") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "33") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "33") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "34") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "34") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "35") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "35") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "36") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "36") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "37") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "37") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "38") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "38") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "39") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "39") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "40") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "40") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "41") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "41") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "42") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "42") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "43") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "43") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "44") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "44") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "45") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "45") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "46") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "46") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "47") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "47") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "48") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "48") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "49") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "49") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "50") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "50") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "51") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "51") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "52") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "52") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "53") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "53") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "54") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "54") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "55") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "55") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "56") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "56") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "57") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "57") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "58") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "58") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "59") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "59") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "60") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "60") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "61") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "61") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "62") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "62") (term "1,0") (proofscript))
         (rule "ifthenelse_true" (formula "63") (term "1,0,0") (proofscript))
         (rule "ifthenelse_true" (formula "63") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "1") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "1") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "2") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "2") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "3") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "3") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "4") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "4") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "5") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "5") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "6") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "6") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "7") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "7") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "8") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "8") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "9") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "9") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "10") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "10") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "11") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "11") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "12") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "12") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "13") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "13") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "14") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "14") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "15") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "15") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "16") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "16") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "17") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "17") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "18") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "18") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "19") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "19") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "20") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "20") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "21") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "21") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "22") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "22") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "23") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "23") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "24") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "24") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "25") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "25") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "26") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "26") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "27") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "27") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "28") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "28") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "29") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "29") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "30") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "30") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "31") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "31") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "32") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "32") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "33") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "33") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "34") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "34") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "35") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "35") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "36") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "36") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "37") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "37") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "38") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "38") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "39") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "39") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "40") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "40") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "41") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "41") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "42") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "42") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "43") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "43") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "44") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "44") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "45") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "45") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "46") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "46") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "47") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "47") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "48") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "48") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "49") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "49") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "50") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "50") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "51") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "51") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "52") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "52") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "53") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "53") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "54") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "54") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "55") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "55") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "56") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "56") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "57") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "57") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "58") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "58") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "59") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "59") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "60") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "60") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "61") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "61") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "62") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "62") (term "1,0") (proofscript))
         (rule "mod_axiom" (formula "63") (term "1,0,0") (proofscript))
         (rule "mod_axiom" (formula "63") (term "1,0") (proofscript))
         (rule "hide_right" (formula "71") (userinteraction))
         (rule "pow_literals" (formula "1") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "1") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "1") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "1") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "1") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "2") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "2") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "2") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "2") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "2") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "3") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "3") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "3") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "3") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "3") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "4") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "4") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "4") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "4") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "4") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "5") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "5") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "5") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "5") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "5") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "6") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "6") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "6") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "6") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "6") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "7") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "7") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "7") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "7") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "7") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "8") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "8") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "8") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "8") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "8") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "9") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "9") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "9") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "9") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "9") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "10") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "10") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "10") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "10") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "10") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "11") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "11") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "11") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "11") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "11") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "12") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "12") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "12") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "12") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "12") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "13") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "13") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "13") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "13") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "13") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "14") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "14") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "14") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "14") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "14") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "15") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "15") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "15") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "15") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "15") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "16") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "16") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "16") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "16") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "16") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "17") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "17") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "17") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "17") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "17") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "18") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "18") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "18") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "18") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "18") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "19") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "19") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "19") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "19") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "19") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "20") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "20") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "20") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "20") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "20") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "21") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "21") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "21") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "21") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "21") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "22") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "22") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "22") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "22") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "22") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "23") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "23") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "23") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "23") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "23") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "24") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "24") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "24") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "24") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "24") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "25") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "25") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "25") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "25") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "25") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "26") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "26") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "26") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "26") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "26") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "27") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "27") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "27") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "27") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "27") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "28") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "28") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "28") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "28") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "28") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "29") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "29") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "29") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "29") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "29") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "30") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "30") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "30") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "30") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "30") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "31") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "31") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "31") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "31") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "31") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "32") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "32") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "32") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "32") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "32") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "33") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "33") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "33") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "33") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "33") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "34") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "34") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "34") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "34") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "34") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "35") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "35") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "35") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "35") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "35") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "36") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "36") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "36") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "36") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "36") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "37") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "37") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "37") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "37") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "37") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "38") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "38") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "38") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "38") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "38") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "39") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "39") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "39") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "39") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "39") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "40") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "40") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "40") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "40") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "40") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "41") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "41") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "41") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "41") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "41") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "42") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "42") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "42") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "42") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "42") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "43") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "43") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "43") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "43") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "43") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "44") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "44") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "44") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "44") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "44") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "45") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "45") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "45") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "45") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "45") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "46") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "46") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "46") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "46") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "46") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "47") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "47") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "47") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "47") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "47") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "48") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "48") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "48") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "48") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "48") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "49") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "49") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "49") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "49") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "49") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "50") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "50") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "50") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "50") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "50") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "51") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "51") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "51") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "51") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "51") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "52") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "52") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "52") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "52") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "52") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "53") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "53") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "53") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "53") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "53") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "54") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "54") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "54") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "54") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "54") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "55") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "55") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "55") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "55") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "55") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "56") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "56") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "56") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "56") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "56") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "57") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "57") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "57") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "57") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "57") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "58") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "58") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "58") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "58") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "58") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "59") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "59") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "59") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "59") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "59") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "60") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "60") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "60") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "60") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "60") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "61") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "61") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "61") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "61") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "61") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "62") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "62") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "62") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "62") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "62") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "63") (term "0,0,0") (proofscript))
         (rule "pow_literals" (formula "63") (term "1,0,1,0,0") (proofscript))
         (rule "pow_literals" (formula "63") (term "1,0,0,0,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "63") (term "1,0,1,0") (proofscript))
         (rule "pow_literals" (formula "63") (term "1,0,0,0,1,1,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1,0") (proofscript))
         (rule "pow_literals" (formula "70") (term "1,1,1") (proofscript))
          (opengoal " ")
      )
   )
   (branch "Case 2"
      (rule "close" (formula "7") (ifseqformula "1"))
   )
)
)
}
