// "Long" variants of rules that are missing in binaryAxioms.key

\rules {
    unsignedShiftRightJlongDef {
        \schemaVar \term int left, right;
        \find(unsignedshiftrightJlong(left, right))
        \replacewith(\if(left >= 0) \then(shiftrightJlong(left, right))
                \else(addJlong(shiftrightJlong(left, right), shiftleftJlong(2, 63 - mod(right, 64)))))
        \heuristics(simplify_enlarging)
    };

    xorJLongDef {
        \schemaVar \term int left, right;
        \find(xorJlong(left, right))
        \replacewith(moduloLong(binaryXOr(left, right)))
        \heuristics(simplify)
    };

    orJLongDef {
        \schemaVar \term int left, right;
        \find(orJlong(left, right))
        \replacewith(moduloLong(binaryOr(left, right)))
        \heuristics(simplify)
    };

    andJLongDef {
        \schemaVar \term int left, right;
        \find(andJlong(left, right))
        \replacewith(moduloLong(binaryAnd(left, right)))
        \heuristics(simplify)
    };
}
