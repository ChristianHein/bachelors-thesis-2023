\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Mar 28 00:23:11 CEST 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]Presburger=false
[NewSMT]sqrtSMTTranslation=SMT
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=7000
[Strategy]Timeout=-1
"
}

\javaSource "..";

\include "../taclets/intSet.key",  "../taclets/binaryAxiomsExtension.key",  "../taclets/bitwiseOperations.key";

\proofObligation "#Proof Obligation Settings
#Tue Mar 28 00:23:11 CEST 2023
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
contract=BitSet[BitSet\\:\\:BitSet()].JML normal_behavior operation contract.0
name=BitSet[BitSet\\:\\:BitSet()].JML normal_behavior operation contract.0
";

\proof {
(keyLog "0" (keyUser "christianhein" ) (keyVersion "208396f69e"))

(autoModeTime "5528")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "1,0,0,1,0,1"))
(rule "translateJavaAddInt" (formula "3") (term "1,0,0,0,0,1"))
(rule "translateJavaSubInt" (formula "3") (term "1,0,1,0,0,0,0,1"))
(rule "setEquality" (formula "3") (term "0,1,1,1,0,0,0,1") (inst "n=n"))
 (builtin "One Step Simplification" (formula "3"))
(rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "assignment" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "self_1"))
(rule "expand_subJint" (formula "3") (term "1,0,1,0,0,0,0,1"))
(rule "sub_literals" (formula "3") (term "0,1,0,1,0,0,0,0,1"))
(rule "expand_moduloInteger" (formula "3") (term "1,0,1,0,0,0,0,1"))
(rule "replace_int_RANGE" (formula "3") (term "1,1,1,0,1,0,0,0,0,1"))
(rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0,1,0,0,0,0,1"))
(rule "replace_int_MIN" (formula "3") (term "0,1,0,1,0,0,0,0,1"))
(rule "add_literals" (formula "3") (term "0,1,1,0,1,0,0,0,0,1"))
(rule "expand_addJint" (formula "3") (term "1,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "3") (term "0,1,0,0,0,0,1"))
(rule "expand_moduloInteger" (formula "3") (term "1,0,0,0,0,1"))
(rule "replace_int_RANGE" (formula "3") (term "1,1,1,0,0,0,0,1"))
(rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0,0,0,0,1"))
(rule "replace_int_MIN" (formula "3") (term "0,1,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0,0,0,0,1"))
(rule "add_literals" (formula "3") (term "0,0,1,1,0,0,0,0,1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=b"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "b"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "3"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=b_1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "b_1"))
(rule "allocateInstance" (formula "3"))
 (builtin "One Step Simplification" (formula "4"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallWithinClass" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "6") (term "1"))
(rule "methodCallReturn" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
 (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_initWords,exc_0,heapAfter_initWords,anon_heap_initWords") (contract "BitSet[BitSet::initWords(int)].JML normal_behavior operation contract.0"))
(branch "Post (initWords)"
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "expand_inInt" (formula "5") (term "1,0,0,0,1,1,0,1,1"))
   (rule "replace_int_MAX" (formula "5") (term "1,0,1,0,0,0,1,1,0,1,1"))
   (rule "replace_int_MIN" (formula "5") (term "0,1,1,0,0,0,1,1,0,1,1"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "translateJavaAddInt" (formula "7") (term "1"))
   (rule "translateJavaSubInt" (formula "7") (term "1,0,1"))
   (rule "setEquality" (formula "9") (inst "n=n"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
   (rule "assignment_write_attribute_this" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "Query_axiom_for_wordIndex_int__in_BitSet" (formula "7") (term "0,1") (inst "wordIndex_sk=wordIndex_sk_0") (inst "#p0=x_1") (inst "#res=x"))
   (rule "expand_inInt" (formula "7") (term "0,0,1"))
   (rule "replace_int_MIN" (formula "7") (term "0,1,0,0,1"))
   (rule "replace_int_MAX" (formula "7") (term "1,0,0,0,1"))
   (rule "eqSymm" (formula "7") (term "1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,1"))
   (rule "pullOutSelect" (formula "8") (term "0,0") (inst "selectSK=BitSet_words_0"))
   (rule "applyEq" (formula "10") (term "0,1,1,0,0,0") (ifseqformula "8"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "8"))
   (rule "applyEq" (formula "10") (term "1,0,1,0") (ifseqformula "8"))
   (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")))
   (rule "dismissNonSelectedField" (formula "8") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "8") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
   (rule "applyEqRigid" (formula "10") (term "1,1,0,0,0") (ifseqformula "9"))
   (rule "elementOfUnion" (formula "8") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "8") (term "1,0,0,0"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "8"))
   (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "8"))
   (rule "applyEqReverse" (formula "10") (term "1,0,1,0") (ifseqformula "8"))
   (rule "hideAuxiliaryEq" (formula "8"))
   (rule "pullOutSelect" (formula "10") (term "1,0,0") (inst "selectSK=BitSet_iSet_0"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")))
   (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "setEquality" (formula "10") (inst "n=n"))
   (rule "elementOfUnion" (formula "10") (term "0,0,1,0,0"))
   (rule "elementOfSingleton" (formula "10") (term "0,0,0,1,0,0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "elementOfSingleton" (formula "10") (term "0,0,1,0,0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "boxToDiamond" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "commuteUnion" (formula "5") (term "1,0"))
   (rule "expand_addJint" (formula "7") (term "1"))
   (rule "polySimp_addComm0" (formula "7") (term "0,1"))
   (rule "expand_addJint" (formula "8") (term "1,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "8") (term "0,1,1,0,0,0"))
   (rule "expand_subJint" (formula "11") (term "0,1,0"))
   (rule "sub_literals" (formula "11") (term "0,0,1,0"))
   (rule "expand_moduloInteger" (formula "7") (term "1"))
   (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,1"))
   (rule "replace_int_RANGE" (formula "7") (term "1,1,1"))
   (rule "replace_int_MIN" (formula "7") (term "0,1"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,1,1"))
   (rule "add_literals" (formula "7") (term "0,0,1,1"))
   (rule "expand_moduloInteger" (formula "8") (term "1,1,0,0,0"))
   (rule "replace_int_RANGE" (formula "8") (term "1,1,1,1,0,0,0"))
   (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,1,1,0,0,0"))
   (rule "replace_int_MIN" (formula "8") (term "0,1,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,1,1,1,0,0,0"))
   (rule "expand_moduloInteger" (formula "11") (term "0,1,0"))
   (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "11") (term "0,0,1,0"))
   (rule "add_literals" (formula "11") (term "0,1,0,1,0"))
   (rule "commute_and" (formula "8") (term "1,0,0"))
   (rule "methodCallEmpty" (formula "15") (term "1"))
   (rule "blockEmpty" (formula "15") (term "1"))
   (rule "assignment_write_attribute" (formula "15") (term "1"))
   (branch "Normal Execution (self_1 != null)"
       (builtin "One Step Simplification" (formula "16"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
      (rule "false_right" (formula "15"))
      (rule "commute_and" (formula "8") (term "0,0,0"))
      (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_wordIndex,savedHeapBefore_wordIndex"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "shift_paren_and" (formula "8") (term "0,0"))
      (rule "commute_and_2" (formula "8") (term "0,0,0"))
      (rule "tryEmpty" (formula "15") (term "1"))
      (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=x_2"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
      (rule "emptyModality" (formula "15") (term "1"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "eqSymm" (formula "15") (term "1,0,0,1"))
      (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,1,1,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "0,1,1,0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "15") (term "0,1,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,1,1,1,0"))
      (rule "replaceKnownSelect_taclet0_2" (formula "15") (term "1,0,0,0,1,1,1,0"))
      (rule "replace_known_left" (formula "15") (term "0,1,1,1,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "1,0,1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "15") (term "1,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "15") (term "0,0,0,0"))
      (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,1,0"))
      (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "15") (term "1,1,0,0,0,0,1,0") (ifseqformula "7"))
      (rule "Query_axiom_for_wordIndex_int__in_BitSet" (formula "15") (term "1,0,1,1,0,0") (inst "wordIndex_sk=wordIndex_sk_1") (inst "#p0=x_1") (inst "#res=x"))
      (rule "expand_inInt" (formula "1") (term "0,0,1"))
      (rule "replace_int_MAX" (formula "1") (term "1,0,0,0,1"))
      (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,1"))
      (rule "eqSymm" (formula "1") (term "1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1"))
      (rule "pullOutSelect" (formula "16") (term "0,0,0,1,1,0") (inst "selectSK=BitSet_sizeIsSticky_0"))
      (rule "simplifySelectOfStore" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "17") (term "0,0,0,1,1,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "assignmentShiftRightInt" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "translateJavaShiftRightInt" (formula "12") (term "0,1,0"))
      (rule "javaShiftRightIntDef" (formula "12") (term "0,1,0"))
      (rule "shiftRightDef" (formula "12") (term "0,0,1,0"))
      (rule "polySimp_elimNeg" (formula "12") (term "1,1,0,0,1,0"))
      (rule "shiftRightPositiveShiftDef" (formula "12") (term "2,0,0,1,0"))
      (rule "shiftLeftPositiveShiftDef" (formula "12") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
      (rule "expand_moduloInteger" (formula "12") (term "0,1,0"))
      (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "12") (term "0,0,1,0"))
      (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_wordIndex_0,savedHeapBefore_wordIndex_0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallReturn" (formula "12") (term "1"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=x_2"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_3"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "assignmentShiftRightInt" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "translateJavaShiftRightInt" (formula "11") (term "0,1,0"))
      (rule "javaShiftRightIntDef" (formula "11") (term "0,1,0"))
      (rule "shiftRightDef" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_elimNeg" (formula "11") (term "1,1,0,0,1,0"))
      (rule "shiftRightPositiveShiftDef" (formula "11") (term "2,0,0,1,0"))
      (rule "shiftLeftPositiveShiftDef" (formula "11") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0"))
      (rule "expand_moduloInteger" (formula "11") (term "0,1,0"))
      (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "11") (term "0,0,1,0"))
      (rule "emptyModality" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "notRight" (formula "12"))
      (rule "commute_and" (formula "1") (term "0"))
      (rule "methodCallReturn" (formula "12") (term "1"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "emptyModality" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "notRight" (formula "12"))
      (rule "polySimp_homoEq" (formula "16") (term "0,0"))
      (rule "polySimp_homoEq" (formula "2") (term "1"))
      (rule "polySimp_homoEq" (formula "1") (term "1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
      (rule "mul_literals" (formula "2") (term "0,1,0,1"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
      (rule "mul_literals" (formula "1") (term "0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
      (rule "polySimp_addComm0" (formula "2") (term "0,0,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0,1,0,1,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0,1,0,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0,1,0,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,0,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,1,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0,0,1,0,1"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0,0,1,0,1"))
      (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,0,1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0,1,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
      (rule "add_literals" (formula "2") (term "0,0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "2") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,1,0"))
      (rule "add_zero_left" (formula "1") (term "0,1,0"))
      (rule "mod_axiom" (formula "2") (term "1,0,2,1,0,0,1,0,1"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,0,2,1,0,0,1,0,1"))
      (rule "times_zero_2" (formula "2") (term "0,1,1,0,2,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "2") (term "1,1,0,2,1,0,0,1,0,1"))
      (rule "add_literals" (formula "2") (term "1,0,2,1,0,0,1,0,1"))
      (rule "add_literals" (formula "2") (term "0,2,1,0,0,1,0,1"))
      (rule "mod_axiom" (formula "2") (term "1,1,2,1,0,0,1,0,1"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,1,2,1,0,0,1,0,1"))
      (rule "times_zero_2" (formula "2") (term "0,1,1,1,2,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "2") (term "1,1,1,2,1,0,0,1,0,1"))
      (rule "add_zero_right" (formula "2") (term "1,1,2,1,0,0,1,0,1"))
      (rule "pow_literals" (formula "2") (term "1,2,1,0,0,1,0,1"))
      (rule "div_literals" (formula "2") (term "2,1,0,0,1,0,1"))
      (rule "mod_axiom" (formula "2") (term "1,1,1,1,0,0,1,0,1"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,1,1,1,0,0,1,0,1"))
      (rule "times_zero_2" (formula "2") (term "0,1,1,1,1,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "2") (term "1,1,1,1,1,0,0,1,0,1"))
      (rule "add_literals" (formula "2") (term "1,1,1,1,0,0,1,0,1"))
      (rule "polySimp_pullOutFactor0" (formula "2") (term "1,1,0,0,1,0,1"))
      (rule "add_literals" (formula "2") (term "1,1,1,0,0,1,0,1"))
      (rule "mod_axiom" (formula "1") (term "1,1,1,1,0,0,1,0,1"))
      (rule "div_literals" (formula "1") (term "0,0,1,1,1,1,1,0,0,1,0,1"))
      (rule "times_zero_2" (formula "1") (term "0,1,1,1,1,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "1") (term "1,1,1,1,1,0,0,1,0,1"))
      (rule "add_literals" (formula "1") (term "1,1,1,1,0,0,1,0,1"))
      (rule "polySimp_pullOutFactor0" (formula "1") (term "1,1,0,0,1,0,1"))
      (rule "add_literals" (formula "1") (term "1,1,1,0,0,1,0,1"))
      (rule "mod_axiom" (formula "1") (term "1,0,2,1,0,0,1,0,1"))
      (rule "div_literals" (formula "1") (term "0,0,1,1,0,2,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,2,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "1") (term "1,1,0,2,1,0,0,1,0,1"))
      (rule "add_literals" (formula "1") (term "1,0,2,1,0,0,1,0,1"))
      (rule "add_literals" (formula "1") (term "0,2,1,0,0,1,0,1"))
      (rule "mod_axiom" (formula "1") (term "1,1,2,1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,2,1,0,0,1,0,1"))
      (rule "div_literals" (formula "1") (term "0,1,1,1,2,1,0,0,1,0,1"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,2,1,0,0,1,0,1"))
      (rule "add_zero_right" (formula "1") (term "1,1,2,1,0,0,1,0,1"))
      (rule "pow_literals" (formula "1") (term "1,2,1,0,0,1,0,1"))
      (rule "div_literals" (formula "1") (term "2,1,0,0,1,0,1"))
      (rule "mod_axiom" (formula "2") (term "1,0,0,1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,1,0,1"))
      (rule "div_literals" (formula "2") (term "0,1,1,0,0,1,0,0,1,0,1"))
      (rule "times_zero_2" (formula "2") (term "1,1,0,0,1,0,0,1,0,1"))
      (rule "add_zero_right" (formula "2") (term "1,0,0,1,0,0,1,0,1"))
      (rule "add_literals" (formula "2") (term "0,0,1,0,0,1,0,1"))
      (rule "leq_literals" (formula "2") (term "0,1,0,0,1,0,1"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "add_zero_right" (formula "2") (term "0,0,1,0,1"))
      (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,1,0,1"))
      (rule "div_literals" (formula "1") (term "0,1,1,0,0,1,0,0,1,0,1"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,0,1,0,0,1,0,1"))
      (rule "add_zero_right" (formula "1") (term "1,0,0,1,0,0,1,0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1,0,0,1,0,1"))
      (rule "leq_literals" (formula "1") (term "0,1,0,0,1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,1"))
      (rule "mod_axiom" (formula "2") (term "1,0,2,1,0,0,0,0,0"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,0,2,1,0,0,0,0,0"))
      (rule "times_zero_2" (formula "2") (term "0,1,1,0,2,1,0,0,0,0,0"))
      (rule "times_zero_2" (formula "2") (term "1,1,0,2,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "2") (term "1,0,2,1,0,0,0,0,0"))
      (rule "add_literals" (formula "2") (term "0,2,1,0,0,0,0,0"))
      (rule "mod_axiom" (formula "2") (term "1,1,2,1,0,0,0,0,0"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,1,2,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,1,0,0,0,0,0"))
      (rule "times_zero_2" (formula "2") (term "1,1,1,2,1,0,0,0,0,0"))
      (rule "add_literals" (formula "2") (term "1,1,2,1,0,0,0,0,0"))
      (rule "pow_literals" (formula "2") (term "1,2,1,0,0,0,0,0"))
      (rule "div_literals" (formula "2") (term "2,1,0,0,0,0,0"))
      (rule "mod_axiom" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0,0,0,0"))
      (rule "times_zero_2" (formula "2") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,1,0,0,0,0,0"))
      (rule "leq_literals" (formula "2") (term "0,1,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
      (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,1,0,0,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,0,0,1,0,0,1,0,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,0,1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "1") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,1,0,0,1,0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "mod_axiom" (formula "2") (term "1,0,2,1,0,0,1,0,1,0"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,0,2,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,1,0,2,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "2") (term "1,1,0,2,1,0,0,1,0,1,0"))
      (rule "add_literals" (formula "2") (term "1,0,2,1,0,0,1,0,1,0"))
      (rule "add_literals" (formula "2") (term "0,2,1,0,0,1,0,1,0"))
      (rule "mod_axiom" (formula "2") (term "1,0,0,1,0,0,1,0,1,0"))
      (rule "div_literals" (formula "2") (term "0,0,1,1,0,0,1,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "2") (term "1,1,0,0,1,0,0,1,0,1,0"))
      (rule "add_zero_right" (formula "2") (term "1,0,0,1,0,0,1,0,1,0"))
      (rule "add_literals" (formula "2") (term "0,0,1,0,0,1,0,1,0"))
      (rule "leq_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "mod_axiom" (formula "1") (term "1,1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1,0,0,0,1,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,1,1,1,0,0,0,1,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor0" (formula "1") (term "1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0,0,0,1,0"))
      (rule "mod_axiom" (formula "1") (term "1,1,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,0,0,1,0,0,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,1,1,0,0,1,0,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,1,1,0,0,1,0,0,0"))
      (rule "pow_literals" (formula "1") (term "1,1,0,0,1,0,0,0"))
      (rule "mod_axiom" (formula "1") (term "0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1"))
      (rule "div_literals" (formula "1") (term "0,1,0,1,0,1"))
      (rule "times_zero_2" (formula "1") (term "1,0,1,0,1"))
      (rule "add_literals" (formula "1") (term "0,1,0,1"))
      (rule "mul_literals" (formula "1") (term "1,0,1"))
      (rule "polySimp_addComm1" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "add_zero_left" (formula "1") (term "0,1"))
      (rule "mod_axiom" (formula "1") (term "1,1,2,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,2,1,0,0,0,1,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,1,2,1,0,0,0,1,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,2,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,1,2,1,0,0,0,1,0"))
      (rule "pow_literals" (formula "1") (term "1,2,1,0,0,0,1,0"))
      (rule "mod_axiom" (formula "1") (term "1,0,2,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,1,0,0,0,1,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,0,2,1,0,0,0,1,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,2,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,2,1,0,0,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,2,1,0,0,0,1,0"))
      (rule "div_literals" (formula "1") (term "2,1,0,0,0,1,0"))
      (rule "mod_axiom" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0,1,0,0,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,0,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,1,0,1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
      (rule "div_literals" (formula "1") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0"))
      (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,0,1,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,0,0,1,0,0,0,1,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,0,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,1,0,0,0,1,0"))
      (rule "leq_literals" (formula "1") (term "0,1,0,0,0,1,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
      (rule "mod_axiom" (formula "2") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
      (rule "div_literals" (formula "2") (term "0,1,0,0,0,0"))
      (rule "times_zero_2" (formula "2") (term "1,0,0,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,0"))
      (rule "mul_literals" (formula "2") (term "0,0,0"))
      (rule "leq_literals" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "mod_axiom" (formula "1") (term "0,1,0,0,0"))
      (rule "div_literals" (formula "1") (term "0,0,1,0,1,0,0,0"))
      (rule "times_zero_2" (formula "1") (term "0,1,0,1,0,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,0,1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "qeq_literals" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "mod_axiom" (formula "2") (term "0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1"))
      (rule "div_literals" (formula "2") (term "0,1,0,1,0,1"))
      (rule "times_zero_2" (formula "2") (term "1,0,1,0,1"))
      (rule "add_literals" (formula "2") (term "0,1,0,1"))
      (rule "mul_literals" (formula "2") (term "1,0,1"))
      (rule "polySimp_addComm1" (formula "2") (term "0,1"))
      (rule "add_literals" (formula "2") (term "0,0,1"))
      (rule "add_zero_left" (formula "2") (term "0,1"))
      (rule "mod_axiom" (formula "2") (term "1,1,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1,0,0,1,0,0"))
      (rule "div_literals" (formula "2") (term "0,1,1,1,1,0,0,1,0,0"))
      (rule "times_zero_2" (formula "2") (term "1,1,1,1,0,0,1,0,0"))
      (rule "add_literals" (formula "2") (term "1,1,1,0,0,1,0,0"))
      (rule "pow_literals" (formula "2") (term "1,1,0,0,1,0,0"))
      (rule "div_literals" (formula "2") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
      (rule "mod_axiom" (formula "1") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
      (rule "div_literals" (formula "1") (term "0,1,0,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0"))
      (rule "leq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "mod_axiom" (formula "2") (term "0,1,0,0"))
      (rule "div_literals" (formula "2") (term "0,0,1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
      (rule "times_zero_2" (formula "2") (term "1,0,1,0,0"))
      (rule "add_literals" (formula "2") (term "0,1,0,0"))
      (rule "mul_literals" (formula "2") (term "1,0,0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "qeq_literals" (formula "2") (term "0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "applyEqRigid" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "1"))
      (rule "add_zero_right" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
      (rule "mod_axiom" (formula "16") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
      (rule "div_literals" (formula "16") (term "0,1,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0"))
      (rule "applyEqRigid" (formula "16") (term "1,0,0,1,0,0,0") (ifseqformula "2"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
      (rule "applyEqRigid" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
      (rule "applyEqRigid" (formula "16") (term "1,0,0,1,0,0,1,0,0,0,0,1,0") (ifseqformula "2"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,1,0,0,0,0,1,0"))
      (rule "applyEq" (formula "9") (term "1,0,1,1") (ifseqformula "2"))
      (rule "add_zero_right" (formula "9") (term "0,1,1"))
      (rule "mod_axiom" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0"))
      (rule "div_literals" (formula "16") (term "0,1,0,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,1,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "mod_axiom" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,0,0,0"))
      (rule "div_literals" (formula "10") (term "0,1,0,1,0,0,0,0,0,0,0"))
      (rule "times_zero_2" (formula "10") (term "1,0,1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
      (rule "mod_axiom" (formula "9") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
      (rule "div_literals" (formula "9") (term "0,1,1,1"))
      (rule "times_zero_2" (formula "9") (term "1,1,1"))
      (rule "add_zero_right" (formula "9") (term "1,1"))
      (rule "add_literals" (formula "9") (term "1"))
      (rule "mod_axiom" (formula "16") (term "0,1,0,0,1,0,0,0,0,0"))
      (rule "div_literals" (formula "16") (term "0,0,1,0,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,1,0,0,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
      (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_and_antiSymm0" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "leq_literals" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")))
      (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
      (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
      (rule "ifEqualsInteger" (formula "10"))
      (rule "elementOfUnion" (formula "10") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfSingleton" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfUnion" (formula "10") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfSingleton" (formula "10") (term "0,0,0,1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "10") (term "0,1,1") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfCreate" (formula "10"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "17")))
      (rule "applyEqReverse" (formula "11") (term "0,1,1") (ifseqformula "10"))
      (rule "hideAuxiliaryEq" (formula "10"))
      (rule "pullOutSelect" (formula "10") (term "0,0,1") (inst "selectSK=java_lang_Object_created__0"))
      (rule "applyEq" (formula "11") (term "0,0,0,0") (ifseqformula "10"))
      (rule "simplifySelectOfCreate" (formula "10"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "17")))
      (rule "castDel" (formula "10") (term "1,0"))
      (rule "eqSymm" (formula "10") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "10") (term "0,0"))
      (rule "replace_known_right" (formula "10") (term "1,0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")))
      (rule "applyEqReverse" (formula "11") (term "0,0,0,0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "11") (term "0,0,1") (ifseqformula "10"))
      (rule "hideAuxiliaryEq" (formula "10"))
      (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
      (rule "cnf_eqv" (formula "12") (term "0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,1,1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_or_antiSymm0" (formula "17") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,0,0,0,0,0,0"))
      (rule "distr_forallAnd" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (rule "expand_inInt" (formula "9"))
      (rule "replace_int_MIN" (formula "9") (term "0,1"))
      (rule "replace_int_MAX" (formula "9") (term "1,0"))
      (rule "andLeft" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "qeq_literals" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "leq_literals" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "Class_invariant_axiom_for_BitSet" (formula "18") (term "1,0") (inst "x=x") (inst "x_0=x_0") (inst "i=i") (ifseqformula "3"))
      (rule "expand_inInt" (formula "18") (term "1,0,0,1,0,1,0"))
      (rule "expand_inInt" (formula "18") (term "1,0,0,1,0,0,1,0"))
      (rule "expand_inInt" (formula "18") (term "1,0,0,1,1,0"))
      (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,1,0,1,0"))
      (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,1,1,0"))
      (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,1,1,0"))
      (rule "translateJavaSubInt" (formula "18") (term "0,2,0,0,1,1,0,0,0,1,0"))
      (rule "eqSymm" (formula "18") (term "1,0,1,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0,1,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,2,0,0,1,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0,1,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,1,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "18") (term "1,0,0,1,1,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "18") (term "1,0,0,1,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0,1,1,0"))
      (rule "replaceKnownSelect_taclet0_2" (formula "18") (term "1,0,0,0,1,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0,0,1,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "18") (term "0,1,1,0,0,0,1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "18") (term "0,1,1,0,0,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,1,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "18") (term "1,0,1,0,1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "18") (term "1,0,1,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
      (rule "replace_known_right" (formula "18") (term "0,0,0,0,0,0,1,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,2,0,0,1,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "18") (term "0,1,1,0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "18") (term "0,1,1,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet0_2" (formula "18") (term "1,0,0,1,0,1,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
      (rule "applyEq" (formula "18") (term "1,1,0,0,0,0,1,0") (ifseqformula "9"))
      (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "9"))
      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "18") (term "0,1,0,0,0,1,0,0,1,0"))
      (rule "pullOutSelect" (formula "18") (term "0,1,0,0,0,0,1,0") (inst "selectSK=BitSet_wordsInUse_0"))
      (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "19") (term "0,0,2,0,0,1,1,0,0,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "19") (term "0,0,0,0,0,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "19") (term "1,0,0,0,0,1,0,0,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "19") (term "0,0,1,1,0,0,0,1,0") (inst "selectSK=arr_2"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0,0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=BitSet_wordsInUse_1"))
      (rule "simplifySelectOfStore" (formula "2"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "castDel" (formula "2") (term "0"))
      (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
      (rule "simplifySelectOfCreate" (formula "2"))
       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
      (rule "castDel" (formula "2") (term "0"))
      (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "applyEqReverse" (formula "1") (term "0,0,2,2,0") (ifseqformula "3"))
      (rule "applyEqReverse" (formula "1") (term "0,0,2,1,0") (ifseqformula "3"))
      (rule "applyEqReverse" (formula "21") (term "1,0,0,0,0,1,0,0,1,0") (ifseqformula "3"))
      (rule "applyEqReverse" (formula "21") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "3"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "applyEqReverse" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
      (rule "leq_literals" (formula "21") (term "1,0,0,0,1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "applyEqReverse" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "3"))
      (rule "qeq_literals" (formula "21") (term "0,0,0,1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_3"))
      (rule "simplifySelectOfCreate" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "expand_subJint" (formula "1") (term "0,2,2,0"))
      (rule "sub_literals" (formula "1") (term "0,0,2,2,0"))
      (rule "expand_subJint" (formula "1") (term "0,2,1,0"))
      (rule "sub_literals" (formula "1") (term "0,0,2,1,0"))
      (rule "expand_moduloInteger" (formula "1") (term "0,2,2,0"))
      (rule "replace_int_RANGE" (formula "1") (term "1,1,0,2,2,0"))
      (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,2,2,0"))
      (rule "replace_int_MIN" (formula "1") (term "0,0,2,2,0"))
      (rule "add_literals" (formula "1") (term "0,1,0,2,2,0"))
      (rule "mod_axiom" (formula "1") (term "1,0,2,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,2,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,0,2,2,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,2,2,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,2,2,0"))
      (rule "add_literals" (formula "1") (term "0,2,2,0"))
      (rule "expand_moduloInteger" (formula "1") (term "0,2,1,0"))
      (rule "replace_int_MIN" (formula "1") (term "0,0,2,1,0"))
      (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,2,1,0"))
      (rule "replace_int_RANGE" (formula "1") (term "1,1,0,2,1,0"))
      (rule "add_literals" (formula "1") (term "0,1,0,2,1,0"))
      (rule "mod_axiom" (formula "1") (term "1,0,2,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,1,0"))
      (rule "div_literals" (formula "1") (term "0,1,1,0,2,1,0"))
      (rule "mul_literals" (formula "1") (term "1,1,0,2,1,0"))
      (rule "add_literals" (formula "1") (term "1,0,2,1,0"))
      (rule "add_literals" (formula "1") (term "0,2,1,0"))
      (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
      (rule "nnf_imp2or" (formula "19") (term "0,0,0,1,0"))
      (rule "nnf_imp2or" (formula "19") (term "0,1,0,1,0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,0,1,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
      (rule "nnf_notAnd" (formula "19") (term "1,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "add_literals" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,1,0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "19") (term "1,1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_or_antiSymm0" (formula "19") (term "0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "19") (term "1,0,1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,0,1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "commute_or" (formula "13") (term "0"))
      (rule "commute_or" (formula "14") (term "0"))
      (rule "cnf_rightDist" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "nnf_notAnd" (formula "20") (term "1,0,0,1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "1,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,1,1,0,0,1,0,1,0"))
      (rule "add_literals" (formula "20") (term "0,0,1,1,0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,1,1,0,0,1,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "0,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0,1,0,1,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,1,0,0,1,0,1,0"))
      (rule "nnf_notAnd" (formula "20") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "1,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,1,1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "20") (term "0,0,1,1,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,1,1,0,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "0,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,1,0,0,0,0,1,0"))
      (rule "commute_or" (formula "11"))
      (rule "cnf_rightDist" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "commute_or" (formula "13"))
      (rule "commute_or" (formula "12"))
      (rule "cnf_rightDist" (formula "11"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "commute_or" (formula "11"))
      (rule "andRight" (formula "21"))
      (branch "Case 1"
         (rule "andRight" (formula "21"))
         (branch "Case 1"
            (rule "allRight" (formula "21") (inst "sk=i_0"))
            (rule "orRight" (formula "21"))
            (rule "orRight" (formula "21"))
            (rule "notRight" (formula "21"))
            (rule "orRight" (formula "22"))
            (rule "inEqSimp_geqRight" (formula "22"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "applyEq" (formula "24") (term "0,2,0") (ifseqformula "3"))
            (rule "replaceKnownSelect_taclet00_5" (formula "24") (term "0"))
            (rule "close" (formula "24") (ifseqformula "17"))
         )
         (branch "Case 2"
            (rule "andRight" (formula "21"))
            (branch "Case 1"
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "allRight" (formula "21") (inst "sk=i_0"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "notRight" (formula "21"))
                  (rule "orRight" (formula "22"))
                  (rule "inEqSimp_leqRight" (formula "23"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "23"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "2"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "1"))
                  (rule "replaceKnownSelect_taclet00_5" (formula "22") (term "0"))
                  (rule "close" (formula "22") (ifseqformula "15"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "21") (inst "sk=x_0_0"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "22"))
                  (rule "inEqSimp_leqRight" (formula "21"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "23"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "23"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "Query_axiom_for_get_int__in_BitSet" (formula "24") (term "1") (inst "get_sk=get_sk_0") (inst "#p0=x_1") (inst "#self=b") (inst "#res=x") (ifseqformula "7"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                  (rule "leq_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "boxToDiamond" (formula "1") (term "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "9"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_get,savedHeapBefore_get"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "ifUnfold" (formula "21") (term "1") (inst "#boolv=x_2"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_4"))
                  (rule "less_than_comparison_simple" (formula "21") (term "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,1,0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "21") (term "0,0,0,1,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "allLeft" (formula "20") (inst "t=x_0_0"))
                  (rule "notLeft" (formula "20"))
                  (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "eqSymm" (formula "26"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "notRight" (formula "26"))
                  (rule "applyEqRigid" (formula "23") (term "1,0,0,1") (ifseqformula "1"))
                  (rule "allLeft" (formula "20") (inst "t=x_0_0"))
                  (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "ifSplit" (formula "24"))
                  (branch "if x_4 true"
                      (builtin "One Step Simplification" (formula "25"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_4 false"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "1"))
                      (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_checkInvariants,exc_1,heapAfter_checkInvariants,anon_heap_checkInvariants") (contract "BitSet[BitSet::checkInvariants()].JML exceptional_behavior operation contract.0#BitSet[BitSet::checkInvariants()].JML normal_behavior operation contract.0"))
                     (branch "Post (checkInvariants)"
                         (builtin "One Step Simplification" (formula "23"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "andLeft" (formula "23"))
                        (rule "andLeft" (formula "24"))
                        (rule "typeEqDerived" (formula "25") (term "0,0,0,1,1,0") (ifseqformula "24"))
                        (rule "typeEqDerived" (formula "25") (term "0,0,1,1,1,0") (ifseqformula "24"))
                        (rule "typeEqDerived" (formula "25") (term "0,1,1,1,1,0") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                        (rule "notLeft" (formula "25"))
                        (rule "translateJavaSubInt" (formula "25") (term "0,2,0,0,1,0,1,0,0,1"))
                        (rule "eqSymm" (formula "25") (term "0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,2,0,1,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,2,0,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "1,0,0,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "1,0,0,0,0,0,1"))
                        (rule "leq_literals" (formula "25") (term "0,0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,0,0,1,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,0,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,0,0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,0,0,0,1,1"))
                        (rule "eqSymm" (formula "25") (term "0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,1,1,0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,1,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,1,0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,0,0"))
                        (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "orRight" (formula "25"))
                        (rule "notRight" (formula "26"))
                        (rule "orRight" (formula "26"))
                        (rule "notRight" (formula "27"))
                        (rule "notRight" (formula "27"))
                        (rule "andLeft" (formula "2"))
                        (rule "dismissNonSelectedField" (formula "4") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "4") (term "0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "4") (term "0,0"))
                        (rule "eqSymm" (formula "4") (term "0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "1") (term "0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,2,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "2") (term "0,2,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "2") (term "0,2,0,1"))
                        (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "2") (term "1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "2") (term "1,0,1"))
                        (rule "replaceKnownSelect_taclet00_5" (formula "2") (term "0,1"))
                        (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "28") (term "1"))
                        (rule "variableDeclaration" (formula "28") (term "1") (newnames "wordIndex"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                         (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_wordIndex_1,result_wordIndex,exc_2") (contract "BitSet[BitSet::wordIndex(int)].JML normal_behavior operation contract.0"))
                        (branch "Post (wordIndex)"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "expand_inInt" (formula "25") (term "1,0"))
                           (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                           (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "25"))
                           (rule "translateJavaDivInt" (formula "28") (term "1,1"))
                           (rule "eqSymm" (formula "28") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "26"))
                           (rule "assignment" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_contradEq7" (formula "27") (term "0") (ifseqformula "4"))
                           (rule "add_zero_left" (formula "27") (term "0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "leq_literals" (formula "27") (term "0,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_contradEq7" (formula "27") (term "0,0") (ifseqformula "4"))
                           (rule "add_zero_left" (formula "27") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "27") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "expand_divJint" (formula "27") (term "0"))
                           (rule "expand_moduloInteger" (formula "27") (term "0"))
                           (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,0"))
                           (rule "replace_int_MIN" (formula "27") (term "0,0"))
                           (rule "replace_int_RANGE" (formula "27") (term "1,1,0"))
                           (rule "polySimp_homoEq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "returnUnfold" (formula "31") (term "1") (inst "#v0=x_2"))
                           (rule "variableDeclarationAssign" (formula "31") (term "1"))
                           (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_5"))
                           (rule "compound_assignment_3_nonsimple" (formula "31") (term "1"))
                           (rule "jdiv_axiom" (formula "27") (term "1,0,0"))
                           (rule "eqSymm" (formula "27"))
                           (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "27"))
                           (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=x_6"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_6"))
                           (rule "compound_assignment_2" (formula "32") (term "1") (inst "#v=x_7"))
                           (rule "variableDeclarationAssign" (formula "32") (term "1"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_7"))
                           (rule "remove_parentheses_right" (formula "32") (term "1"))
                           (rule "compound_less_than_comparison_2" (formula "32") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
                           (rule "variableDeclarationAssign" (formula "32") (term "1"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_8"))
                           (rule "assignment" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "variableDeclarationAssign" (formula "32") (term "1"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_9"))
                           (rule "assignment_read_attribute_this" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "pullOutSelect" (formula "32") (term "0,1,0") (inst "selectSK=BitSet_wordsInUse_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "replaceKnownSelect_taclet00_10" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "replaceKnownSelect_taclet00_14" (formula "1") (term "1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00_15" (formula "1") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "replaceKnownSelect_taclet00_14" (formula "1") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00_15" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "34") (term "0,1,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "less_than_comparison_simple" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "compound_assignment_1_new" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "div_axiom" (formula "27") (term "1") (inst "quotient=quotient_0"))
                           (rule "mul_literals" (formula "27") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "27") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "equal_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "andLeft" (formula "27"))
                           (rule "andLeft" (formula "27"))
                           (rule "polySimp_addComm1" (formula "29") (term "1"))
                           (rule "add_literals" (formula "29") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "27"))
                           (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "27"))
                           (rule "mod_axiom" (formula "31") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,1,0"))
                           (rule "mul_literals" (formula "31") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "31") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "0,1"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "applyEq" (formula "35") (term "0,0,0,1,0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0"))
                           (rule "applyEq" (formula "35") (term "0,1,0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1"))
                           (rule "mul_literals" (formula "29") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1"))
                           (rule "mul_literals" (formula "26") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                           (rule "mul_literals" (formula "25") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "29"))
                           (rule "mul_literals" (formula "4") (term "0,0"))
                           (rule "add_zero_left" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(4(6(#)))"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "3"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(1(3(4(4(5(5(3(3(#)))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(4(6(#)))"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "29") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "29") (term "0,0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0"))
                           (rule "qeq_literals" (formula "29") (term "0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "div_axiom" (formula "33") (term "0,1,1") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "33") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "33") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "equal_literals" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                           (rule "add_literals" (formula "35") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "35") (term "1"))
                           (rule "add_literals" (formula "35") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "34"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "35"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0"))
                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "33"))
                           (rule "inEqSimp_homoInEq0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "applyEq" (formula "39") (term "0,1,0,1,0,0") (ifseqformula "32"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,1,0,0"))
                           (rule "applyEqRigid" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                           (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "31"))
                           (rule "polySimp_addComm0" (formula "34") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                           (rule "mul_literals" (formula "32") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1"))
                           (rule "polySimp_rightDist" (formula "33") (term "1"))
                           (rule "mul_literals" (formula "33") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "33"))
                           (rule "times_zero_1" (formula "4") (term "0,0"))
                           (rule "add_zero_left" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0"))
                           (rule "add_literals" (formula "33") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "33") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "33") (term "0,0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "neg_literal" (formula "33") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "33"))
                           (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "4"))
                           (rule "mul_literals" (formula "35") (term "1,1"))
                           (rule "add_literals" (formula "35") (term "1"))
                           (rule "applyEq" (formula "41") (term "0,1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "mul_literals" (formula "41") (term "1,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "41") (term "1,0,0,1,0"))
                           (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "4"))
                           (rule "leq_literals" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "4"))
                           (rule "times_zero_2" (formula "35") (term "1,1"))
                           (rule "add_literals" (formula "35") (term "1"))
                           (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "applyEq" (formula "32") (term "1") (ifseqformula "4"))
                           (rule "applyEq" (formula "39") (term "0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "mul_literals" (formula "39") (term "0,0,1,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,1,0,0"))
                           (rule "applyEqRigid" (formula "35") (term "0,0,1") (ifseqformula "4"))
                           (rule "mul_literals" (formula "35") (term "0,1"))
                           (rule "add_zero_left" (formula "35") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "5"))
                           (rule "leq_literals" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "28"))
                           (rule "leq_literals" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,1,0") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "37") (term "0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "ifElseSplit" (formula "37"))
                           (branch "if x_6 true"
                               (builtin "One Step Simplification" (formula "38"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "37") (term "1"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "methodCallReturn" (formula "37") (term "1"))
                              (rule "assignment" (formula "37") (term "1"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "methodCallEmpty" (formula "37") (term "1"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "emptyModality" (formula "37") (term "1"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "closeTrue" (formula "37"))
                           )
                           (branch "if x_6 false"
                               (builtin "One Step Simplification" (formula "38"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Exceptional Post (wordIndex)"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "27"))
                           (rule "notLeft" (formula "25"))
                           (rule "close" (formula "29") (ifseqformula "28"))
                        )
                        (branch "Pre (wordIndex)"
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "wellFormedAnonEQ" (formula "27") (term "0,1") (ifseqformula "23"))
                           (rule "wellFormedStorePrimitive" (formula "27") (term "0,0,1"))
                           (rule "wellFormedStorePrimitive" (formula "27") (term "0,0,1"))
                           (rule "wellFormedAnonEQ" (formula "27") (term "0,0,1") (ifseqformula "12"))
                           (rule "wellFormedStorePrimitive" (formula "27") (term "0,0,0,1"))
                           (rule "wellFormedStorePrimitive" (formula "27") (term "0,0,0,1"))
                           (rule "expand_inInt" (formula "27") (term "1,1"))
                           (rule "replace_int_MIN" (formula "27") (term "0,1,1,1"))
                           (rule "replace_int_MAX" (formula "27") (term "1,0,1,1"))
                           (rule "replace_known_left" (formula "27") (term "1,0,0,1") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "22")) (ifInst ""  (formula "3")))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "27") (term "0") (ifseqformula "4"))
                           (rule "leq_literals" (formula "27") (term "0,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_subsumption1" (formula "27") (term "1") (ifseqformula "4"))
                           (rule "leq_literals" (formula "27") (term "0,1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "wellFormedStoreObject" (formula "27"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "wellFormedStorePrimitive" (formula "27"))
                           (rule "wellFormedStorePrimitive" (formula "27"))
                           (rule "wellFormedCreate" (formula "27"))
                           (rule "close" (formula "27") (ifseqformula "9"))
                        )
                     )
                     (branch "Exceptional Post (checkInvariants)"
                         (builtin "One Step Simplification" (formula "26"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "andLeft" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "andLeft" (formula "26"))
                        (rule "notLeft" (formula "24"))
                        (rule "translateJavaSubInt" (formula "25") (term "0,2,0,0,1,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "26") (term "0,1,1,1,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "0,2,0,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "25") (term "0,0,1,1,0"))
                        (rule "replace_known_right" (formula "25") (term "0,0,1") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "notLeft" (formula "26"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,2,0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "26") (term "1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "1,0,1,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,2,0,1,1,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "1,0,1,1,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,1,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "26") (term "1,0,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "26") (term "1,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "26") (term "1,0,0,1"))
                        (rule "leq_literals" (formula "26") (term "0,0,1"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "qeq_literals" (formula "25") (term "0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,1,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "26") (term "0,0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "26") (term "0,0,0,1,1"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,0,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "25") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "1,0,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "25") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0,1,1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "0,1,1,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "0,1,1,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "0,0,0"))
                        (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,0,0,1,0"))
                        (rule "eqSymm" (formula "25") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,0,0,1,0,0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,1,1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "0,0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "0,0,0,1,1"))
                        (rule "eqSymm" (formula "26") (term "0,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "26") (term "0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "26") (term "0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,2,0,1,1,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "26") (term "0,2,0,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "26") (term "0,2,0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "26") (term "0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "26") (term "0,0,0,1"))
                        (rule "qeq_literals" (formula "26") (term "0,0,1"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "26") (term "1,0,1,1,1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "1,0,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "1,0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,1"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "26") (term "0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "26") (term "0,0,1,1"))
                        (rule "eqSymm" (formula "26") (term "0,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "26") (term "0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "26") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,2,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "25") (term "0,2,0,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "25") (term "0,2,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet00_5" (formula "25") (term "0,1,0,1,0"))
                        (rule "replace_known_left" (formula "25") (term "1,0,1,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,1"))
                        (rule "replaceKnownSelect_taclet00_5" (formula "26") (term "0,1,1,1"))
                        (rule "replace_known_left" (formula "26") (term "1,1,1") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "andLeft" (formula "25"))
                        (rule "inEqSimp_leqRight" (formula "27"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,1"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1"))
                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                        (rule "mul_literals" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Pre (checkInvariants)"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "1"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "1"))
                        (rule "wellFormedAnonEQ" (formula "24") (term "1") (ifseqformula "12"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "0,1"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "0,1"))
                        (rule "translateJavaSubInt" (formula "24") (term "0,2,0,0,1,0,1,1,1,0"))
                        (rule "eqSymm" (formula "24") (term "0,1,1,1,1,1,0"))
                        (rule "translateJavaSubInt" (formula "24") (term "0,2,0,0,1,0,1,0,0,1,0,0"))
                        (rule "eqSymm" (formula "24") (term "0,0,1,1,0,0"))
                        (rule "replace_known_left" (formula "24") (term "1,1") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,0,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,0,1,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,1,1,0,0"))
                        (rule "eqSymm" (formula "24") (term "0,0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,1,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,1,1,1,1,0"))
                        (rule "eqSymm" (formula "24") (term "0,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,1,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,0,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,0,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,2,0,1,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,0,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,1,1,0,0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,1,1,0,0,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,0,1,0,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,2,0,0,1,0,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,2,0,0,1,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,1,0,0"))
                        (rule "eqSymm" (formula "24") (term "0,0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,1,1,1,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "1,0,1,1,1,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "1,0,1,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "1,0,0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "1,0,0,0,0,1,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,2,0,1,0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,1,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,1,0,1,1,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,1,0,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,1,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,0,1,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,0,1,1,1,1,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0,1,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,2,0,1,0,1,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,2,0,1,0,1,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,2,0,1,0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,0,1,0,1,0,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0,1,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,0,0,0,0"))
                        (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,1,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,2,0,1,1,1,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,2,0,1,1,1,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,2,0,1,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,1,1,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,1,1,1,1,1,0"))
                        (rule "eqSymm" (formula "24") (term "0,1,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,0,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,0,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,1,0,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,1,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,0,0,0,1,0,0"))
                        (rule "eqSymm" (formula "24") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,0,0,1,0"))
                        (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "eqSymm" (formula "24") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0"))
                        (rule "replaceKnownSelect_taclet00_10" (formula "24") (term "0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "24") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_5" (formula "24") (term "0,1,1,1,1,0"))
                        (rule "replace_known_left" (formula "24") (term "1,1,1,1,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "1,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "1,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "1,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_5" (formula "24") (term "0,1,0,1,0,0"))
                        (rule "replace_known_left" (formula "24") (term "1,0,1,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "wellFormedStoreObject" (formula "24"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "wellFormedStorePrimitive" (formula "24"))
                        (rule "wellFormedStorePrimitive" (formula "24"))
                        (rule "wellFormedCreate" (formula "24"))
                        (rule "close" (formula "24") (ifseqformula "9"))
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "21") (inst "sk=x_0"))
               (rule "orRight" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "orRight" (formula "22"))
               (rule "notRight" (formula "21"))
               (rule "inEqSimp_geqRight" (formula "24"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "24"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "24"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "3"))
               (rule "leq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "ifthenelse_split" (formula "5") (term "0"))
               (branch " (b_1.words@anon_heap_initWords«anonHeapFunction»).<created> = TRUE TRUE"
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "allLeft" (formula "19") (inst "t=x_0"))
                  (rule "notLeft" (formula "19"))
                  (rule "close" (formula "20") (ifseqformula "4"))
               )
               (branch " (b_1.words@anon_heap_initWords«anonHeapFunction»).<created> = TRUE FALSE"
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "allLeft" (formula "18") (inst "t=x_0"))
                  (rule "notLeft" (formula "18"))
                  (rule "close" (formula "19") (ifseqformula "4"))
               )
            )
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "21") (inst "sk=f_0"))
         (rule "allRight" (formula "21") (inst "sk=o_0"))
         (rule "orRight" (formula "21"))
         (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "23"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__2"))
         (rule "simplifySelectOfCreate" (formula "2"))
          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
         (rule "castDel" (formula "2") (term "1,0"))
         (rule "eqSymm" (formula "2") (term "0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and" (formula "10") (term "0,0"))
         (rule "commute_and" (formula "9") (term "0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,0") (ifseqformula "17"))
         (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "29"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "commute_and" (formula "6") (term "0,0"))
         (rule "commute_and" (formula "5") (term "0,0"))
         (rule "commute_and" (formula "4") (term "0,0"))
         (rule "commute_and" (formula "8") (term "1,0,0"))
         (rule "commute_and" (formula "3") (term "0,0"))
         (rule "commute_and" (formula "2") (term "0,0"))
         (rule "commute_and" (formula "1") (term "0,0"))
         (rule "commute_and" (formula "8") (term "1,0,0,0,0"))
         (rule "commute_and" (formula "8") (term "0,0,0,0,0"))
         (rule "ifthenelse_split" (formula "11") (term "0"))
         (branch " (b_1.words@anon_heap_initWords«anonHeapFunction»).<created> = TRUE TRUE"
            (rule "hideAuxiliaryEq" (formula "12"))
            (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "cnf_rightDist" (formula "8") (term "0,0,0,0"))
            (rule "commute_or" (formula "8") (term "0,0,0,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "commute_or" (formula "8") (term "0,1,0,0,0,0"))
            (rule "commute_and" (formula "8") (term "1,0,0,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "0,0,0,0,0"))
            (rule "commute_or" (formula "8") (term "1,0,0,0,0,0"))
            (rule "commute_or" (formula "8") (term "0,0,0,0,0,0"))
            (rule "commute_and_2" (formula "8") (term "0,0,0,0"))
            (rule "ifthenelse_split" (formula "7") (term "0"))
            (branch "o_0 = b_1 TRUE"
               (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
               (rule "hideAuxiliaryEq" (formula "8"))
               (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "7"))
               (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "7"))
               (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "notRight" (formula "30"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
               (rule "close" (formula "29") (ifseqformula "1"))
            )
            (branch "o_0 = b_1 FALSE"
               (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0") (ifseqformula "7"))
               (rule "hideAuxiliaryEq" (formula "7"))
               (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "25"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "4") (term "0,1,0,0,0,0,0") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
               (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch " (b_1.words@anon_heap_initWords«anonHeapFunction»).<created> = TRUE FALSE"
            (rule "hideAuxiliaryEq" (formula "11"))
            (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "cnf_rightDist" (formula "8") (term "0,0,0,0"))
            (rule "commute_or" (formula "8") (term "0,0,0,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "commute_or" (formula "8") (term "0,1,0,0,0,0"))
            (rule "commute_and" (formula "8") (term "1,0,0,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "0,0,0,0,0"))
            (rule "commute_or" (formula "8") (term "1,0,0,0,0,0"))
            (rule "commute_or" (formula "8") (term "0,0,0,0,0,0"))
            (rule "commute_and_2" (formula "8") (term "0,0,0,0"))
            (rule "ifthenelse_split" (formula "7") (term "0"))
            (branch "o_0 = b_1 TRUE"
               (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
               (rule "hideAuxiliaryEq" (formula "8"))
               (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "notRight" (formula "30"))
               (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "8"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
               (rule "eqSymm" (formula "8"))
               (rule "close" (formula "30") (ifseqformula "8"))
            )
            (branch "o_0 = b_1 FALSE"
               (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0") (ifseqformula "7"))
               (rule "hideAuxiliaryEq" (formula "7"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "6") (term "1,1,1,0,0,0,0,0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
               (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "8"))
               (rule "hideAuxiliaryEq" (formula "8"))
               (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch "Null Reference (self_1 = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (initWords)"
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "expand_inInt" (formula "5") (term "1,0,0,0,1,1,0,1,1"))
   (rule "replace_int_MIN" (formula "5") (term "0,1,1,0,0,0,1,1,0,1,1"))
   (rule "replace_int_MAX" (formula "5") (term "1,0,1,0,0,0,1,1,0,1,1"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "10") (ifseqformula "9"))
)
(branch "Pre (initWords)"
    (builtin "One Step Simplification" (formula "6"))
   (rule "wellFormedStorePrimitive" (formula "6") (term "0,1"))
   (rule "wellFormedStorePrimitive" (formula "6") (term "0,1"))
   (rule "leq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "expand_inInt" (formula "6") (term "1"))
   (rule "replace_int_MIN" (formula "6") (term "0,1,1"))
   (rule "replace_int_MAX" (formula "6") (term "1,0,1"))
   (rule "leq_literals" (formula "6") (term "1,1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "leq_literals" (formula "6") (term "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "wellFormedStoreObject" (formula "6"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "wellFormedStorePrimitive" (formula "6"))
   (rule "wellFormedStorePrimitive" (formula "6"))
   (rule "wellFormedCreate" (formula "6"))
   (rule "close" (formula "6") (ifseqformula "2"))
)
)
}
