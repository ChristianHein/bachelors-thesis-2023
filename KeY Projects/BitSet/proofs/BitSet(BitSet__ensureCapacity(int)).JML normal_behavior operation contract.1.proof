\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Mar 14 18:57:13 CET 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]Presburger=false
[NewSMT]sqrtSMTTranslation=SMT
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=7000
[Strategy]Timeout=-1
"
}

\javaSource "..";

\include "../taclets/intSet.key",  "../taclets/binaryAxiomsExtension.key",  "../taclets/bitwiseOperations.key";

\proofObligation "#Proof Obligation Settings
#Tue Mar 14 18:57:13 CET 2023
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
contract=BitSet[BitSet\\:\\:ensureCapacity(int)].JML normal_behavior operation contract.1
name=BitSet[BitSet\\:\\:ensureCapacity(int)].JML normal_behavior operation contract.1
";

\proof {
(keyLog "0" (keyUser "christianhein" ) (keyVersion "208396f69e"))

(autoModeTime "5691")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,1,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "inEqSimp_sepPosMonomial0" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1"))
(rule "polySimp_rightDist" (formula "7") (term "1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
(rule "mul_literals" (formula "7") (term "0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "10") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "10") (term "0,0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_ensureCapacity,savedHeapBefore_ensureCapacity"))
 (builtin "One Step Simplification" (formula "10"))
(rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
(rule "compound_less_than_comparison_1" (formula "10") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
(rule "eval_order_access2" (formula "10") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr"))
(rule "assignment_read_attribute_this" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "assignment_read_length" (formula "10") (term "1"))
(branch "Normal Execution (x_arr != null)"
    (builtin "One Step Simplification" (formula "11"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
   (rule "false_right" (formula "10"))
   (rule "less_than_comparison_simple" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0"))
   (rule "replace_known_left" (formula "10") (term "0,0,1,0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
   (rule "expand_inInt" (formula "7"))
   (rule "replace_int_MAX" (formula "7") (term "1,0"))
   (rule "replace_int_MIN" (formula "7") (term "0,1"))
   (rule "andLeft" (formula "7"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
   (rule "mul_literals" (formula "8") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0"))
   (rule "add_literals" (formula "8") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
   (rule "mul_literals" (formula "8") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
   (rule "leq_literals" (formula "5") (term "0"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "arrayLengthNotNegative" (formula "9") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
   (rule "leq_literals" (formula "8") (term "0"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
   (rule "times_zero_1" (formula "8") (term "0,0"))
   (rule "add_zero_left" (formula "8") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
   (rule "mul_literals" (formula "8") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
   (rule "leq_literals" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "ifSplit" (formula "12"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "request"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "var"))
      (rule "compound_multiplication_2" (formula "12") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_2"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
      (rule "eval_order_array_access6" (formula "12") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_1"))
      (rule "assignment_read_attribute_this" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "assignment_read_length" (formula "12") (term "1"))
      (branch "Normal Execution (x_arr_1 != null)"
          (builtin "One Step Simplification" (formula "13"))
          (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
         (rule "false_right" (formula "12"))
         (rule "assignmentMultiplicationInt" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "translateJavaMulInt" (formula "12") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_1"))
         (rule "assignment" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "expand_mulJint" (formula "12") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0"))
         (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0"))
         (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0"))
         (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0"))
         (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0"))
          (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_max,result_max,exc_0") (contract "BitSet.Math[BitSet.Math::max(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (max)"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "expand_inInt" (formula "10") (term "1,0"))
            (rule "replace_int_MIN" (formula "10") (term "0,1,1,0"))
            (rule "replace_int_MAX" (formula "10") (term "1,0,1,0"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "13"))
            (rule "eqSymm" (formula "12") (term "1"))
            (rule "polySimp_homoEq" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_commuteGeq" (formula "14"))
            (rule "inEqSimp_homoInEq1" (formula "13"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "eval_order_access4" (formula "18") (term "1") (inst "#v1=x_arr") (inst "#v0=b"))
            (rule "variableDeclarationAssign" (formula "18") (term "1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "b"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "variableDeclarationAssign" (formula "18") (term "1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr_2"))
            (rule "mod_axiom" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
            (rule "mod_axiom" (formula "13") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "12") (term "0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "14"))
            (rule "mul_literals" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "7"))
            (rule "leq_literals" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "commute_or" (formula "12"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_2"))
            (rule "assignment_read_attribute_this" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_3"))
            (rule "assignment" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "div_axiom" (formula "14") (term "0,0") (inst "quotient=quotient_0"))
            (rule "equal_literals" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "qeq_literals" (formula "14") (term "0,1"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1,1,1"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
            (rule "add_literals" (formula "16") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "16") (term "1"))
            (rule "add_literals" (formula "16") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "14"))
            (rule "polySimp_homoEq" (formula "13") (term "1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
            (rule "polySimp_addComm1" (formula "13") (term "0,1"))
            (rule "polySimp_addComm0" (formula "13") (term "0,0,1"))
            (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "polySimp_addComm0" (formula "17") (term "0,0"))
            (rule "polySimp_sepPosMonomial" (formula "13") (term "1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1"))
            (rule "polySimp_rightDist" (formula "15") (term "1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
            (rule "mul_literals" (formula "15") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1"))
            (rule "polySimp_rightDist" (formula "16") (term "1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
            (rule "mul_literals" (formula "16") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1"))
            (rule "polySimp_rightDist" (formula "17") (term "1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
            (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=length(long[]::select(heap, self, BitSet::$words))") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "16") (term "0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=length(long[]::select(heap, self, BitSet::$words))") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "15") (term "0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0"))
            (rule "leq_literals" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "17"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
            (rule "greater_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "times_zero_1" (formula "10") (term "0,0"))
            (rule "add_zero_left" (formula "10") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
            (rule "neg_literal" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "12"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1"))
            (rule "polySimp_rightDist" (formula "17") (term "1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
            (rule "mul_literals" (formula "17") (term "0,1"))
            (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "20"))
            (rule "greater_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "mul_literals" (formula "18") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "8"))
            (rule "leq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "19"))
            (rule "times_zero_1" (formula "11") (term "0,0"))
            (rule "add_zero_left" (formula "11") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
            (rule "leq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
            (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "leq_literals" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
            (rule "mul_literals" (formula "10") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "12"))
            (rule "times_zero_1" (formula "10") (term "1,1,0"))
            (rule "greater_literals" (formula "10") (term "0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "leq_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "22"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1"))
            (rule "polySimp_rightDist" (formula "18") (term "1"))
            (rule "mul_literals" (formula "18") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
            (rule "polySimp_rightDist" (formula "19") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "add_literals" (formula "19") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "17"))
            (rule "greater_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "mul_literals" (formula "19") (term "0,0"))
            (rule "leq_literals" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "14"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "17"))
            (rule "mul_literals" (formula "18") (term "0,1,0"))
            (rule "greater_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "leq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
             (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_copyOf,result_copyOf,exc_1,heapAfter_copyOf,anon_heap_copyOf") (contract "BitSet.Arrays[BitSet.Arrays::copyOf([J,int)].JML exceptional_behavior operation contract.0#BitSet.Arrays[BitSet.Arrays::copyOf([J,int)].JML normal_behavior operation contract.0"))
            (branch "Post (copyOf)"
                (builtin "One Step Simplification" (formula "29"))
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
               (rule "expand_inInt" (formula "26") (term "1,0,0,0,1,0,1,1,1,1"))
               (rule "expand_inInt" (formula "26") (term "1,0,0,0,1,1,0,1,1,1,1"))
               (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,0,1,0,1,1,1,1"))
               (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,0,1,0,1,1,1,1"))
               (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,0,1,1,0,1,1,1,1"))
               (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,0,1,1,0,1,1,1,1"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "typeEqDerived" (formula "29") (term "0,0,1,1,1,0") (ifseqformula "27"))
               (rule "typeEqDerived" (formula "29") (term "0,1,1,1,1,0") (ifseqformula "27"))
               (rule "typeEqDerived" (formula "29") (term "0,0,1,0,1,1,0") (ifseqformula "27"))
               (rule "typeEqDerived" (formula "29") (term "0,0,0,0,1,1,0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "eqSymm" (formula "29") (term "1,0,0,1,1"))
               (rule "inEqSimp_ltRight" (formula "30"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
               (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "notLeft" (formula "33"))
               (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
               (rule "assignment" (formula "36") (term "1"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "blockEmpty" (formula "36") (term "1"))
               (rule "assignment_write_attribute" (formula "36") (term "1"))
               (branch "Normal Execution (b != null)"
                   (builtin "One Step Simplification" (formula "37"))
                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                  (rule "false_right" (formula "36"))
                  (rule "assignment_write_attribute_this" (formula "36") (term "1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "30"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
                  (rule "leq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                  (rule "ifthenelse_negated" (formula "28") (term "0"))
                  (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                  (rule "ifEqualsTRUE" (formula "28"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "nnf_imp2or" (formula "31") (term "0"))
                  (rule "hideAuxiliaryEqConcrete" (formula "29"))
                  (rule "nnf_imp2or" (formula "31") (term "0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "31") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "28"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "commute_or" (formula "28"))
                  (rule "commute_or_2" (formula "30") (term "0,0"))
                  (rule "commute_or_2" (formula "31") (term "0,0"))
                  (rule "commute_or" (formula "31") (term "0,0,0"))
                  (rule "commute_or_2" (formula "31") (term "0,0"))
                  (rule "methodCallEmpty" (formula "35") (term "1"))
                  (rule "commute_or" (formula "30") (term "1,0,0,0"))
                  (rule "commute_or" (formula "31") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                  (rule "commute_or" (formula "30") (term "0,0,0,0"))
                  (rule "inEqSimp_or_subsumption0" (formula "30") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "tryEmpty" (formula "35") (term "1"))
                  (rule "emptyModality" (formula "35") (term "1"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "eqSymm" (formula "35") (term "1,0,0,1,1,1,0"))
                  (rule "eqSymm" (formula "35") (term "1,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,0,1,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,1,1,0,0,0,0,1,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,1,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,0,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "1,0,1,0,0,1,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,0,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,0,1,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "35") (term "1,0,1,0,0,1,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "35") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,0"))
                  (rule "pullOutSelect" (formula "35") (term "0,0,1,1,1,1,1,0") (inst "selectSK=BitSet_sizeIsSticky_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,1,1,1,1,1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "35") (term "0,0,0,0") (inst "selectSK=BitSet_words_0"))
                  (rule "applyEq" (formula "36") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "36") (term "0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "36") (term "0,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "36") (term "1,0,1,0,1,1,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "36") (term "0,1,1,0,0,0,1,1,1,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "36") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "36") (term "1,0,1,0,1,1,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "36") (term "0,1,1,0,0,0,1,1,1,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                  (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "29"))
                  (rule "inEqSimp_commuteGeq" (formula "35") (term "0,1,0"))
                  (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "applyEq" (formula "35") (term "1,1,0,0,0,1,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "35") (term "0,1,0,0,0,0") (ifseqformula "29"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                  (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                  (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
                  (rule "leq_literals" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "arrayLengthIsAnInt" (formula "29") (term "0"))
                  (rule "expand_inInt" (formula "29"))
                  (rule "replace_int_MAX" (formula "29") (term "1,0"))
                  (rule "replace_int_MIN" (formula "29") (term "0,1"))
                  (rule "andLeft" (formula "29"))
                  (rule "inEqSimp_commuteLeq" (formula "30"))
                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                  (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
                  (rule "leq_literals" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "cut_direct" (formula "15") (term "0"))
                  (branch "CUT: wordsRequired = result_max TRUE"
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "15"))
                     (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "22"))
                     (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "1,0"))
                     (rule "times_zero_1" (formula "22") (term "0"))
                     (rule "qeq_literals" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                     (rule "mul_literals" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1"))
                     (rule "polySimp_rightDist" (formula "17") (term "1"))
                     (rule "mul_literals" (formula "17") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                     (rule "andRight" (formula "31"))
                     (branch "Case 1"
                        (rule "andRight" (formula "31"))
                        (branch "Case 1"
                           (rule "allRight" (formula "31") (inst "sk=i_0"))
                           (rule "orRight" (formula "31"))
                           (rule "cutUpperBound" (formula "31") (ifseqformula "26"))
                           (branch "Case 1"
                              (rule "crossInst" (formula "27") (inst "sk=i_1") (ifseqformula "32"))
                              (rule "orRight" (formula "33"))
                              (rule "andLeft" (formula "27"))
                              (rule "orRight" (formula "34"))
                              (rule "orRight" (formula "36"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_geqRight" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "35"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "36"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "31"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "16"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "32") (term "0,0,0,0") (ifseqformula "31"))
                              (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_literals" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "Case 2"
                              (rule "crossInst" (formula "27") (inst "sk=i_1") (ifseqformula "32"))
                              (rule "orRight" (formula "33"))
                              (rule "notLeft" (formula "1"))
                              (rule "andLeft" (formula "26"))
                              (rule "orRight" (formula "35"))
                              (rule "orRight" (formula "34"))
                              (rule "eqSymm" (formula "30"))
                              (rule "inEqSimp_geqRight" (formula "36"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                              (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "31") (term "0,2,0,1") (ifseqformula "30"))
                              (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "31") (term "0,0,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "31") (term "0,2,1,1") (ifseqformula "30"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0"))
                              (rule "leq_literals" (formula "34") (term "0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "false_right" (formula "34"))
                              (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "31") (term "0,1,0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_0"))
                              (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                              (rule "eqSymm" (formula "37"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "31") (term "0,1") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")) (ifInst ""  (formula "5")))
                              (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "23"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "25"))
                              (rule "greater_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                              (rule "mul_literals" (formula "6") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "19"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
                              (rule "greater_literals" (formula "6") (term "0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "17"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "cut_direct" (formula "31") (term "0"))
                              (branch "CUT: result_copyOf.<created> = TRUE TRUE"
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "35") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet1000000000_6" (formula "35") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_9" (formula "35") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "applyEq" (formula "40") (term "1") (ifseqformula "35"))
                                  (builtin "Evaluate Query" (formula "36") (term "1,1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery01000000000_10" (formula "34") (term "0"))
                                 (rule "replaceKnownQuery01000000000_10" (formula "35") (term "1,1,0,0"))
                                 (rule "replaceKnownQuery01000000000_10" (formula "37") (term "1,1,1,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "37") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "37") (term "1") (newnames "queryResult"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                  (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "eqSymm" (formula "40") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "inEqSimp_commuteLeq" (formula "41"))
                                    (rule "assignment" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "42"))
                                    (rule "mul_literals" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_exactShadow2" (formula "41") (ifseqformula "25"))
                                    (rule "greater_literals" (formula "41") (term "0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "41") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "42") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "42") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "40") (term "1") (ifseqformula "42"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "40") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "37"))
                                    (rule "inEqSimp_homoInEq1" (formula "40"))
                                    (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                    (rule "add_literals" (formula "40") (term "1,0"))
                                    (rule "times_zero_1" (formula "40") (term "0"))
                                    (rule "leq_literals" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "36") (term "0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "38"))
                                    (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0"))
                                    (rule "qeq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "38"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "38"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_exactShadow2" (formula "21") (ifseqformula "37"))
                                    (rule "greater_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "37"))
                                    (rule "greater_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                    (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "37"))
                                    (rule "greater_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "35"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "38"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "35"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "methodCallEmpty" (formula "39") (term "1"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "div_axiom" (formula "18") (term "0") (inst "quotient=quotient_1"))
                                    (rule "equal_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1,1,1,1"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1"))
                                    (rule "add_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "18"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "40") (term "0,0,1") (ifseqformula "21"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1"))
                                    (rule "mul_literals" (formula "19") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "mul_literals" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "greater_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "39"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "15"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0"))
                                    (rule "greater_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_exactShadow2" (formula "22") (ifseqformula "38"))
                                    (rule "greater_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "23"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "38"))
                                    (rule "greater_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "4"))
                                    (rule "greater_literals" (formula "5") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "15"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0"))
                                    (rule "greater_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "38"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "22") (ifseqformula "20"))
                                    (rule "greater_literals" (formula "22") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "emptyModality" (formula "40") (term "1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "notRight" (formula "40"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "40"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "applyEq" (formula "38") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1"))
                                    (rule "mul_literals" (formula "40") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "39") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "7"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "32"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0"))
                                    (rule "add_literals" (formula "32") (term "0"))
                                    (rule "leq_literals" (formula "32"))
                                    (rule "closeFalse" (formula "32"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "close" (formula "41") (ifseqformula "40"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "wellFormedAnonEQ" (formula "37") (term "0,0") (ifseqformula "28"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "expand_inInt" (formula "37") (term "1"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "27")) (ifInst ""  (formula "12")) (ifInst ""  (formula "18")))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "37") (term "0") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_geqRight" (formula "37"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "closeFalse" (formula "14"))
                                 )
                              )
                              (branch "CUT: result_copyOf.<created> = TRUE FALSE"
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "allLeft" (formula "35") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet1000000000_6" (formula "35") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11000000000_9" (formula "35") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "35") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "35"))
                                 (rule "eqSymm" (formula "41"))
                                  (builtin "Evaluate Query" (formula "36") (term "1,1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery11000000000_10" (formula "34") (term "0"))
                                 (rule "replaceKnownQuery11000000000_10" (formula "35") (term "1,1,0,0"))
                                 (rule "replaceKnownQuery11000000000_10" (formula "37") (term "1,1,1,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "37") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "37") (term "1") (newnames "queryResult"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                  (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "38"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "eqSymm" (formula "40") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "inEqSimp_commuteLeq" (formula "41"))
                                    (rule "assignment" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "40") (term "1") (ifseqformula "41"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "40") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "38"))
                                    (rule "inEqSimp_homoInEq1" (formula "40"))
                                    (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                    (rule "add_literals" (formula "40") (term "1,0"))
                                    (rule "times_zero_1" (formula "40") (term "0"))
                                    (rule "leq_literals" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "38"))
                                    (rule "inEqSimp_subsumption0" (formula "40") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0"))
                                    (rule "qeq_literals" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "23"))
                                    (rule "greater_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "38"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_exactShadow2" (formula "21") (ifseqformula "23"))
                                    (rule "greater_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "23"))
                                    (rule "greater_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "38"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "38"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "methodCallEmpty" (formula "39") (term "1"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "div_axiom" (formula "18") (term "0") (inst "quotient=quotient_1"))
                                    (rule "mul_literals" (formula "18") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "equal_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1"))
                                    (rule "add_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "18"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "21"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "greater_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "15"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0"))
                                    (rule "greater_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "24"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                    (rule "inEqSimp_exactShadow2" (formula "22") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "39"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "mul_literals" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "15"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0"))
                                    (rule "greater_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "23"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "37"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "22") (ifseqformula "20"))
                                    (rule "greater_literals" (formula "22") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "4"))
                                    (rule "greater_literals" (formula "5") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "emptyModality" (formula "40") (term "1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "notRight" (formula "40"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "40"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "39") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "7"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "33"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0"))
                                    (rule "add_literals" (formula "33") (term "0"))
                                    (rule "leq_literals" (formula "33"))
                                    (rule "closeFalse" (formula "33"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "38"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "close" (formula "41") (ifseqformula "40"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "wellFormedAnonEQ" (formula "37") (term "0,0") (ifseqformula "28"))
                                    (rule "expand_inInt" (formula "37") (term "1"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "18")))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "37") (term "0") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_geqRight" (formula "37"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "31") (inst "sk=i_0"))
                           (rule "orRight" (formula "31"))
                           (rule "orRight" (formula "31"))
                           (rule "orRight" (formula "31"))
                           (rule "orRight" (formula "33"))
                           (rule "inEqSimp_leqRight" (formula "31"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "33"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "34"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                           (rule "mul_literals" (formula "22") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "5"))
                           (rule "mul_literals" (formula "15") (term "0,0"))
                           (rule "add_zero_left" (formula "15") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "inEqSimp_subsumption4" (formula "22") (ifseqformula "20"))
                           (rule "mul_literals" (formula "22") (term "0,1,0"))
                           (rule "greater_literals" (formula "22") (term "0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "cut_direct" (formula "30") (term "0"))
                           (branch "CUT: result_copyOf.<created> = TRUE TRUE"
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "allLeft" (formula "31") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet100000000_6" (formula "31") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0100000000_7" (formula "31") (term "1,1"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "31") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq0" (formula "31") (term "0,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "31") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0,1") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "commute_or" (formula "31"))
                              (rule "cut_direct" (formula "31") (term "1"))
                              (branch "CUT: BitSet.Math.min(self.words.length, result_max) @heapAfter_copyOf <= i_0 TRUE"
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet100000000_6" (formula "33") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100000000_7" (formula "33") (term "0,1"))
                                 (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "38"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "33") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                 (rule "leq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                 (rule "leq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "33"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "32"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "CUT: BitSet.Math.min(self.words.length, result_max) @heapAfter_copyOf <= i_0 FALSE"
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_leqRight" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                  (builtin "Evaluate Query" (formula "34") (term "1,1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery10100000000_10" (formula "2") (term "0"))
                                 (rule "replaceKnownQuery10100000000_10" (formula "34") (term "1,1,0,0"))
                                 (rule "replaceKnownQuery10100000000_10" (formula "35") (term "1,1,1,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "35") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "35") (term "1") (newnames "queryResult"))
                                 (rule "commute_or_2" (formula "34") (term "0,0"))
                                  (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "35"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "expand_inInt" (formula "35") (term "1,0"))
                                    (rule "replace_int_MAX" (formula "35") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,1,0"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "eqSymm" (formula "38") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "assignment" (formula "41") (term "1"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "4"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "38") (term "1") (ifseqformula "40"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "38") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "39"))
                                    (rule "polySimp_pullOutFactor1" (formula "39") (term "0"))
                                    (rule "add_literals" (formula "39") (term "1,0"))
                                    (rule "times_zero_1" (formula "39") (term "0"))
                                    (rule "leq_literals" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "34") (term "0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "qeq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
                                    (rule "times_zero_1" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "11"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0"))
                                    (rule "greater_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "35"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "36"))
                                    (rule "times_zero_1" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "33"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "20") (ifseqformula "17"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "greater_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "35"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_exactShadow2" (formula "20") (ifseqformula "22"))
                                    (rule "greater_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "methodCallEmpty" (formula "37") (term "1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_1"))
                                    (rule "equal_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1,1"))
                                    (rule "qeq_literals" (formula "16") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "1"))
                                    (rule "add_literals" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "22"))
                                    (rule "greater_literals" (formula "17") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "20") (ifseqformula "18"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "greater_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "23"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "18"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "mul_literals" (formula "19") (term "0,0"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_exactShadow2" (formula "21") (ifseqformula "23"))
                                    (rule "greater_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "34"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "18"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "greater_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "37"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0"))
                                    (rule "greater_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "11"))
                                    (rule "times_zero_1" (formula "13") (term "1,1,0"))
                                    (rule "greater_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "emptyModality" (formula "38") (term "1"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "notRight" (formula "38"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "38"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "applyEq" (formula "36") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                    (rule "mul_literals" (formula "38") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "37"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_literals" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "35"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "close" (formula "39") (ifseqformula "38"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "wellFormedAnonEQ" (formula "35") (term "0,0") (ifseqformula "28"))
                                    (rule "expand_inInt" (formula "35") (term "1,0"))
                                    (rule "expand_inInt" (formula "35") (term "1"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "35") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "35") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "6")) (ifInst ""  (formula "10")) (ifInst ""  (formula "17")))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "35") (term "1") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_geqRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "CUT: result_copyOf.<created> = TRUE FALSE"
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "34"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "allLeft" (formula "31") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet100000000_6" (formula "31") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100000000_7" (formula "31") (term "1,1"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "31") (term "0,1,0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "31") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0,1") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "38")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "eqSymm" (formula "31") (term "1"))
                              (rule "commute_or" (formula "31"))
                              (rule "cut_direct" (formula "31") (term "1"))
                              (branch "CUT: BitSet.Math.min(self.words.length, result_max) @heapAfter_copyOf <= i_0 TRUE"
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet100000000_6" (formula "33") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1100000000_7" (formula "33") (term "0,1"))
                                 (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "33") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                 (rule "leq_literals" (formula "33") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "33"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "31"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0"))
                                 (rule "add_literals" (formula "31") (term "0"))
                                 (rule "leq_literals" (formula "31"))
                                 (rule "closeFalse" (formula "31"))
                              )
                              (branch "CUT: BitSet.Math.min(self.words.length, result_max) @heapAfter_copyOf <= i_0 FALSE"
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_leqRight" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "32"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                  (builtin "Evaluate Query" (formula "34") (term "1,1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery11100000000_10" (formula "2") (term "0"))
                                 (rule "replaceKnownQuery11100000000_10" (formula "34") (term "1,1,0,0"))
                                 (rule "replaceKnownQuery11100000000_10" (formula "35") (term "1,1,1,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "35") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "35") (term "1") (newnames "queryResult"))
                                 (rule "commute_or_2" (formula "34") (term "0,0"))
                                  (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "35"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "expand_inInt" (formula "35") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "35") (term "1,0,1,0"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "eqSymm" (formula "38") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "assignment" (formula "41") (term "1"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_exactShadow2" (formula "39") (ifseqformula "25"))
                                    (rule "greater_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "39") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "41"))
                                    (rule "mul_literals" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                    (rule "mul_literals" (formula "37") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "4"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "38") (term "1") (ifseqformula "41"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "38") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "40"))
                                    (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                    (rule "add_literals" (formula "40") (term "1,0"))
                                    (rule "times_zero_1" (formula "40") (term "0"))
                                    (rule "leq_literals" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "33") (term "0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "qeq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "36"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "32"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "20") (ifseqformula "17"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "greater_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "11"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0"))
                                    (rule "greater_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "34"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "35"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_exactShadow2" (formula "20") (ifseqformula "34"))
                                    (rule "greater_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "35"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "methodCallEmpty" (formula "37") (term "1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_1"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "16") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "equal_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "1"))
                                    (rule "add_literals" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "37") (term "0,0,1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "19") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                    (rule "mul_literals" (formula "17") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "24"))
                                    (rule "greater_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "22"))
                                    (rule "greater_literals" (formula "17") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0"))
                                    (rule "greater_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "18"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "mul_literals" (formula "19") (term "0,0"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "35"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "37"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_exactShadow2" (formula "21") (ifseqformula "35"))
                                    (rule "greater_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "33"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "18"))
                                    (rule "greater_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "20") (ifseqformula "18"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "greater_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "11"))
                                    (rule "greater_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,0"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "emptyModality" (formula "38") (term "1"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "notRight" (formula "38"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "38"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "applyEq" (formula "35") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                    (rule "mul_literals" (formula "38") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "36") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "2"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "inEqSimp_homoInEq1" (formula "37"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0"))
                                    (rule "add_literals" (formula "37") (term "0"))
                                    (rule "leq_literals" (formula "37"))
                                    (rule "closeFalse" (formula "37"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "35"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "close" (formula "39") (ifseqformula "38"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "wellFormedAnonEQ" (formula "35") (term "0,0") (ifseqformula "28"))
                                    (rule "expand_inInt" (formula "35") (term "1"))
                                    (rule "expand_inInt" (formula "35") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "35") (term "1,0,1"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "35") (term "1,0,1,0"))
                                    (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "27")) (ifInst ""  (formula "10")) (ifInst ""  (formula "17")))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "35") (term "0") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "35") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_geqRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "31") (inst "sk=f_0"))
                        (rule "allRight" (formula "31") (inst "sk=o_0"))
                        (rule "orRight" (formula "31"))
                        (rule "orRight" (formula "31"))
                        (rule "orRight" (formula "31"))
                        (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "35"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "CUT: wordsRequired = result_max FALSE"
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "15"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "22"))
                     (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "1,0"))
                     (rule "times_zero_1" (formula "22") (term "0"))
                     (rule "qeq_literals" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_strengthen0" (formula "22") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "22"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=quotient_0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "16") (term "0,0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "polySimp_homoEq" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1,1,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "0,0"))
                     (rule "add_zero_left" (formula "16") (term "0"))
                     (rule "polySimp_invertEq" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "newSym_eq" (formula "15") (inst "l=l_0") (inst "newSymDef=add(mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
    mul(result_max, Z(0(#))))"))
                     (rule "times_zero_1" (formula "15") (term "1,1,1"))
                     (rule "add_zero_right" (formula "15") (term "1,1"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "35") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                     (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0,0,1,1,0"))
                     (rule "applyEq" (formula "35") (term "1,1,0,0,0,0,1,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                     (rule "add_literals" (formula "21") (term "1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0"))
                     (rule "add_zero_right" (formula "21") (term "0"))
                     (rule "applyEq" (formula "31") (term "1,1,1,1,0,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                     (rule "polySimp_homoEq" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                     (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "1,1,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0"))
                     (rule "add_zero_right" (formula "22") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                     (rule "applyEq" (formula "30") (term "2,1,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "31") (term "1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "16"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                     (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_commuteGeq" (formula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "16"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "applyEq" (formula "31") (term "2,1,1,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "35") (term "1,1,0,0,0,1,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                     (rule "mul_literals" (formula "13") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1"))
                     (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "22"))
                     (rule "mul_literals" (formula "14") (term "0,1,0"))
                     (rule "greater_literals" (formula "14") (term "0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "leq_literals" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_subsumption5" (formula "10") (ifseqformula "12"))
                     (rule "greater_literals" (formula "10") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "greater_literals" (formula "10") (term "0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcdRightDiv=add(Z(1(1(9(0(7(8(6(3(5(#)))))))))), l_0)") (inst "elimGcdLeftDiv=mul(quotient_0, Z(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,0"))
                     (rule "leq_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "qeq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "8"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "17"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                     (rule "inEqSimp_subsumption2" (formula "17") (ifseqformula "18"))
                     (rule "greater_literals" (formula "17") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "greater_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "0,0"))
                     (rule "qeq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcdRightDiv=add(Z(1(1(9(0(7(8(6(3(5(#)))))))))), l_0)") (inst "elimGcdLeftDiv=mul(quotient_0, Z(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "qeq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "inEqSimp_subsumption2" (formula "7") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "greater_literals" (formula "7") (term "0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "20"))
                     (rule "mul_literals" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "7"))
                     (rule "mul_literals" (formula "8") (term "1,1,0"))
                     (rule "greater_literals" (formula "8") (term "0,0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "leq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "33") (term "0,0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                     (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "33") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "inEqSimp_exactShadow1" (formula "10") (ifseqformula "17"))
                     (rule "mul_literals" (formula "10") (term "1,0,1"))
                     (rule "greater_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "7"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "greater_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "7"))
                     (rule "greater_literals" (formula "10") (term "0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "18"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "11"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "21"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "18"))
                     (rule "greater_literals" (formula "10") (term "1,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "greater_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "7"))
                     (rule "greater_literals" (formula "10") (term "0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "12"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                     (rule "leq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "cut_direct" (formula "26") (term "0"))
                     (branch "CUT: result_copyOf.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_1"))
                        (rule "mul_literals" (formula "16") (term "1,1,1,1,1"))
                        (rule "equal_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "qeq_literals" (formula "16") (term "0,1"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                        (rule "add_literals" (formula "18") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "18") (term "1"))
                        (rule "add_literals" (formula "18") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEqRigid" (formula "18") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "mul_literals" (formula "18") (term "1,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "mul_literals" (formula "17") (term "1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "23"))
                        (rule "greater_literals" (formula "18") (term "0,0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "0,0"))
                        (rule "leq_literals" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "8"))
                        (rule "greater_literals" (formula "17") (term "0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1,0"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "andRight" (formula "34"))
                        (branch "Case 1"
                           (rule "andRight" (formula "34"))
                           (branch "Case 1"
                              (rule "allRight" (formula "34") (inst "sk=i_0"))
                              (rule "orRight" (formula "34"))
                              (rule "cutUpperBound" (formula "34") (ifseqformula "29"))
                              (branch "Case 1"
                                 (rule "crossInst" (formula "30") (inst "sk=i_1") (ifseqformula "35"))
                                 (rule "orRight" (formula "36"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "orRight" (formula "38"))
                                 (rule "orRight" (formula "37"))
                                 (rule "inEqSimp_geqRight" (formula "39"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "40"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_geqRight" (formula "40"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "40"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                 (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "35") (term "0,2,0,1") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "Case 2"
                                 (rule "crossInst" (formula "30") (inst "sk=i_1") (ifseqformula "35"))
                                 (rule "orRight" (formula "36"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "orRight" (formula "37"))
                                 (rule "orRight" (formula "39"))
                                 (rule "inEqSimp_leqRight" (formula "37"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "40"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_geqRight" (formula "40"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                 (rule "applyEqRigid" (formula "34") (term "0,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "applyEqRigid" (formula "34") (term "1,1,0") (ifseqformula "33"))
                                 (rule "applyEqRigid" (formula "34") (term "0,2,0,1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "34") (term "0,2,1,1") (ifseqformula "33"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "37") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "qeq_literals" (formula "37") (term "0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "false_right" (formula "37"))
                                 (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "34") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_0"))
                                 (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "31")))
                                 (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "34") (term "1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "39"))
                                 (rule "pullOutSelect" (formula "33") (term "0,1") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "39")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "3") (term "0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_subsumption5" (formula "14") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "greater_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "greater_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "3") (term "1,1,0"))
                                 (rule "greater_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow1" (formula "3") (ifseqformula "21"))
                                 (rule "mul_literals" (formula "3") (term "1,0,1"))
                                 (rule "greater_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "22"))
                                 (rule "greater_literals" (formula "3") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "greater_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "3") (term "1,1,0"))
                                 (rule "greater_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "allLeft" (formula "35") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet10001000000_6" (formula "35") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001000000_7" (formula "35") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "cut_direct" (formula "35") (term "0"))
                                 (branch "CUT: i_0 >= l_0 * 2 TRUE"
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                    (rule "polySimp_mulAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "35") (ifseqformula "24"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0"))
                                    (rule "greater_literals" (formula "35") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "leq_literals" (formula "35") (term "0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "2"))
                                    (rule "polySimp_mulAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                    (rule "inEqSimp_contradInEq2" (formula "35") (ifseqformula "15"))
                                    (rule "greater_literals" (formula "35") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "greater_literals" (formula "35") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0"))
                                    (rule "mul_literals" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "35") (term "0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0"))
                                    (rule "add_literals" (formula "35") (term "0"))
                                    (rule "leq_literals" (formula "35"))
                                    (rule "closeFalse" (formula "35"))
                                 )
                                 (branch "CUT: i_0 >= l_0 * 2 FALSE"
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_geqRight" (formula "37"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "41") (term "1") (ifseqformula "36"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "5") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                     (builtin "Evaluate Query" (formula "35") (term "1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                    (rule "replaceKnownQuery110001000000_10" (formula "35") (term "0"))
                                    (rule "replaceKnownQuery110001000000_10" (formula "36") (term "1,1,0,0"))
                                    (rule "replaceKnownQuery110001000000_10" (formula "38") (term "1,1,1,0,0"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "eqSymm" (formula "38") (term "0,0,1"))
                                    (rule "variableDeclaration" (formula "38") (term "1") (newnames "queryResult"))
                                     (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                    (branch "Post (min)"
                                        (builtin "One Step Simplification" (formula "39"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "expand_inInt" (formula "38") (term "1,0"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,1,0"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "andLeft" (formula "42"))
                                       (rule "inEqSimp_commuteLeq" (formula "40"))
                                       (rule "assignment" (formula "44") (term "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                       (rule "mul_literals" (formula "40") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1"))
                                       (rule "mul_literals" (formula "40") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "40") (term "0,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                       (rule "mul_literals" (formula "40") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "13"))
                                       (rule "greater_literals" (formula "40") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1,0"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "commute_or" (formula "41"))
                                       (rule "methodCallEmpty" (formula "44") (term "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "emptyModality" (formula "44") (term "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "notRight" (formula "44"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "35"))
                                       (rule "mul_literals" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                       (rule "mul_literals" (formula "41") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1"))
                                       (rule "mul_literals" (formula "41") (term "0,1"))
                                       (rule "inEqSimp_subsumption5" (formula "41") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "greater_literals" (formula "41") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0"))
                                       (rule "qeq_literals" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "44"))
                                       (rule "mul_literals" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "41") (ifseqformula "14"))
                                       (rule "greater_literals" (formula "41") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1,0"))
                                       (rule "leq_literals" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "allLeft" (formula "38") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001000000_6" (formula "38") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001000000_7" (formula "38") (term "0,1"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "cut_direct" (formula "42") (term "0"))
                                       (branch "CUT: res_min = l_0 * 2 TRUE"
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "applyEq" (formula "38") (term "1,1,1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0"))
                                          (rule "add_literals" (formula "44") (term "1,0"))
                                          (rule "times_zero_1" (formula "44") (term "0"))
                                          (rule "qeq_literals" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0"))
                                          (rule "polySimp_pullOutFactor1" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,0,0"))
                                          (rule "applyEqRigid" (formula "36") (term "1,1,0,0") (ifseqformula "42"))
                                          (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "42"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "43"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_literals" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "CUT: res_min = l_0 * 2 FALSE"
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "43"))
                                          (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                          (rule "add_literals" (formula "43") (term "1,0"))
                                          (rule "times_zero_1" (formula "43") (term "0"))
                                          (rule "qeq_literals" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "applyEq" (formula "38") (term "1,1,1,0,0") (ifseqformula "42"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "1,1,0,0"))
                                          (rule "applyEqRigid" (formula "36") (term "1,1,0,0") (ifseqformula "42"))
                                          (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "42"))
                                          (rule "polySimp_homoEq" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0,0"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                          (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "0,0"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "42"))
                                          (rule "polySimp_sepNegMonomial" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0"))
                                          (rule "qeq_literals" (formula "44") (term "0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "false_right" (formula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "35"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch "Exceptional Post (min)"
                                        (builtin "One Step Simplification" (formula "38"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "close" (formula "41") (ifseqformula "40"))
                                    )
                                    (branch "Pre (min)"
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "wellFormedAnonEQ" (formula "38") (term "0,0") (ifseqformula "29"))
                                       (rule "expand_inInt" (formula "38") (term "1"))
                                       (rule "expand_inInt" (formula "38") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,1"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,1"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,1,0"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,1,0"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "28")))
                                       (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_subsumption6" (formula "38") (term "1,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,1,1"))
                                       (rule "greater_literals" (formula "38") (term "0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "leq_literals" (formula "38") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_subsumption4" (formula "38") (term "1") (ifseqformula "25"))
                                       (rule "greater_literals" (formula "38") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "mul_literals" (formula "38") (term "0,0,1"))
                                       (rule "leq_literals" (formula "38") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_subsumption1" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,1"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                       (rule "qeq_literals" (formula "38") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_leqRight" (formula "38"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_subsumption5" (formula "5") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "greater_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "1"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0"))
                                       (rule "add_literals" (formula "15") (term "0"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "closeFalse" (formula "15"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "34") (inst "sk=i_0"))
                              (rule "orRight" (formula "34"))
                              (rule "orRight" (formula "34"))
                              (rule "orRight" (formula "35"))
                              (rule "orRight" (formula "34"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "37"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "37"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                              (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "32")))
                              (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption2" (formula "1") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "greater_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                              (rule "mul_literals" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "13"))
                              (rule "greater_literals" (formula "4") (term "0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0"))
                              (rule "leq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "allLeft" (formula "34") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet1001000000_6" (formula "34") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1001000000_7" (formula "34") (term "0,1"))
                              (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                              (rule "mul_literals" (formula "34") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "34") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "34") (term "0,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "allLeft" (formula "33") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet1001000000_6" (formula "33") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1001000000_7" (formula "33") (term "1,1"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "35"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "33") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "pullOutSelect" (formula "33") (term "0,1") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")) (ifInst ""  (formula "5")))
                              (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "cut_direct" (formula "33") (term "0"))
                              (branch "CUT: i_0 <= -1 TRUE"
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "33"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq2" (formula "14") (ifseqformula "1"))
                                 (rule "greater_literals" (formula "14") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "greater_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0"))
                                 (rule "mul_literals" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0"))
                                 (rule "add_literals" (formula "14") (term "0"))
                                 (rule "leq_literals" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                              (branch "CUT: i_0 <= -1 FALSE"
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_leqRight" (formula "37"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0"))
                                 (rule "greater_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                  (builtin "Evaluate Query" (formula "34") (term "1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery11001000000_10" (formula "36") (term "0"))
                                 (rule "replaceKnownQuery11001000000_10" (formula "35") (term "1,1,0,0"))
                                 (rule "replaceKnownQuery11001000000_10" (formula "37") (term "1,1,1,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "37") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "37") (term "1") (newnames "queryResult"))
                                  (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "assignment" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                    (rule "mul_literals" (formula "39") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0"))
                                    (rule "qeq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "42"))
                                    (rule "mul_literals" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "12"))
                                    (rule "greater_literals" (formula "39") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1,0"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "commute_or" (formula "40"))
                                    (rule "methodCallEmpty" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "emptyModality" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "notRight" (formula "43"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "39"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "36"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "43"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                    (rule "mul_literals" (formula "40") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1"))
                                    (rule "mul_literals" (formula "40") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0"))
                                    (rule "qeq_literals" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                    (rule "mul_literals" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "mul_literals" (formula "40") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "12"))
                                    (rule "greater_literals" (formula "40") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "mul_literals" (formula "40") (term "1,0"))
                                    (rule "leq_literals" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "42"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "3"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0"))
                                    (rule "add_literals" (formula "36") (term "0"))
                                    (rule "leq_literals" (formula "36"))
                                    (rule "closeFalse" (formula "36"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "close" (formula "40") (ifseqformula "39"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "wellFormedAnonEQ" (formula "37") (term "0,0") (ifseqformula "29"))
                                    (rule "expand_inInt" (formula "37") (term "1"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "6")))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                    (rule "inEqSimp_subsumption6" (formula "37") (term "1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,1,1"))
                                    (rule "greater_literals" (formula "37") (term "0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "leq_literals" (formula "37") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_subsumption4" (formula "37") (term "1") (ifseqformula "25"))
                                    (rule "greater_literals" (formula "37") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "mul_literals" (formula "37") (term "0,0,1"))
                                    (rule "leq_literals" (formula "37") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_subsumption0" (formula "37") (term "0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_geqRight" (formula "37"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0"))
                                    (rule "add_literals" (formula "15") (term "0"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "closeFalse" (formula "15"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "34") (inst "sk=f_0"))
                           (rule "allRight" (formula "34") (inst "sk=o_0"))
                           (rule "orRight" (formula "34"))
                           (rule "orRight" (formula "34"))
                           (rule "orRight" (formula "34"))
                           (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "38"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "CUT: result_copyOf.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_1"))
                        (rule "equal_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "qeq_literals" (formula "16") (term "0,1"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1,1,1"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                        (rule "add_literals" (formula "18") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "18") (term "1"))
                        (rule "add_literals" (formula "18") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEqRigid" (formula "17") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "times_zero_2" (formula "17") (term "1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "mul_literals" (formula "18") (term "1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "8"))
                        (rule "mul_literals" (formula "17") (term "1,1,0"))
                        (rule "greater_literals" (formula "17") (term "0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "22"))
                        (rule "mul_literals" (formula "17") (term "0,1,0"))
                        (rule "greater_literals" (formula "17") (term "0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "andRight" (formula "35"))
                        (branch "Case 1"
                           (rule "andRight" (formula "35"))
                           (branch "Case 1"
                              (rule "allRight" (formula "35") (inst "sk=i_0"))
                              (rule "orRight" (formula "35"))
                              (rule "cutUpperBound" (formula "35") (ifseqformula "29"))
                              (branch "Case 1"
                                 (rule "crossInst" (formula "30") (inst "sk=i_1") (ifseqformula "36"))
                                 (rule "orRight" (formula "37"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "orRight" (formula "39"))
                                 (rule "orRight" (formula "38"))
                                 (rule "inEqSimp_leqRight" (formula "41"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_geqRight" (formula "41"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_geqRight" (formula "41"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "41"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                 (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "35") (term "0,2,0,1") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "Case 2"
                                 (rule "crossInst" (formula "30") (inst "sk=i_1") (ifseqformula "36"))
                                 (rule "orRight" (formula "37"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "orRight" (formula "38"))
                                 (rule "orRight" (formula "40"))
                                 (rule "inEqSimp_geqRight" (formula "39"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "39"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "40"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "41"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                 (rule "applyEqRigid" (formula "34") (term "1,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "34") (term "0,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "34") (term "0,2,0,1") (ifseqformula "33"))
                                 (rule "applyEqRigid" (formula "34") (term "0,2,1,1") (ifseqformula "33"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "37") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "qeq_literals" (formula "37") (term "0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "false_right" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "34") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_0"))
                                 (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "37")))
                                 (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "34") (term "1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "33") (term "0,1") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "eqSymm" (formula "33") (term "1"))
                                 (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "2") (term "0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "21"))
                                 (rule "mul_literals" (formula "2") (term "1,0,1"))
                                 (rule "greater_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "greater_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "2") (term "1,1,0"))
                                 (rule "greater_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "22"))
                                 (rule "greater_literals" (formula "2") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "greater_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "2") (term "1,1,0"))
                                 (rule "greater_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "35") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet10011000000_6" (formula "35") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10011000000_7" (formula "35") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "0,0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "cut_direct" (formula "35") (term "0"))
                                 (branch "CUT: i_0 >= l_0 * 2 TRUE"
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "4"))
                                    (rule "polySimp_mulAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                    (rule "inEqSimp_contradInEq4" (formula "15") (ifseqformula "35"))
                                    (rule "greater_literals" (formula "15") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "greater_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0"))
                                    (rule "add_literals" (formula "15") (term "0"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "closeFalse" (formula "15"))
                                 )
                                 (branch "CUT: i_0 >= l_0 * 2 FALSE"
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_geqRight" (formula "37"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "36"))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "4") (term "1,1,0"))
                                    (rule "greater_literals" (formula "4") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                     (builtin "Evaluate Query" (formula "35") (term "1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                    (rule "replaceKnownQuery110011000000_10" (formula "35") (term "0"))
                                    (rule "replaceKnownQuery110011000000_10" (formula "36") (term "1,1,0,0"))
                                    (rule "replaceKnownQuery110011000000_10" (formula "38") (term "1,1,1,0,0"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "eqSymm" (formula "38") (term "0,0,1"))
                                    (rule "variableDeclaration" (formula "38") (term "1") (newnames "queryResult"))
                                     (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                    (branch "Post (min)"
                                        (builtin "One Step Simplification" (formula "38"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "expand_inInt" (formula "38") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,1,0"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,1,0"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "andLeft" (formula "42"))
                                       (rule "inEqSimp_commuteLeq" (formula "40"))
                                       (rule "assignment" (formula "44") (term "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                       (rule "mul_literals" (formula "40") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1"))
                                       (rule "mul_literals" (formula "40") (term "0,1"))
                                       (rule "inEqSimp_subsumption5" (formula "40") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "greater_literals" (formula "40") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                       (rule "mul_literals" (formula "40") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "13"))
                                       (rule "greater_literals" (formula "40") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1,0"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "commute_or" (formula "41"))
                                       (rule "methodCallEmpty" (formula "44") (term "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "emptyModality" (formula "44") (term "1"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "notRight" (formula "44"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                       (rule "mul_literals" (formula "41") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1"))
                                       (rule "mul_literals" (formula "41") (term "0,1"))
                                       (rule "inEqSimp_subsumption5" (formula "41") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "greater_literals" (formula "41") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0"))
                                       (rule "qeq_literals" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "35"))
                                       (rule "mul_literals" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "44"))
                                       (rule "mul_literals" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "41") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0"))
                                       (rule "greater_literals" (formula "41") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "leq_literals" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "allLeft" (formula "38") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10011000000_6" (formula "38") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10011000000_7" (formula "38") (term "0,1"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "cut_direct" (formula "42") (term "0"))
                                       (branch "CUT: res_min = l_0 * 2 TRUE"
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "42"))
                                          (rule "applyEqRigid" (formula "38") (term "1,1,1,0,0") (ifseqformula "42"))
                                          (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0"))
                                          (rule "polySimp_pullOutFactor1" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,0,0"))
                                          (rule "applyEq" (formula "36") (term "1,1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                          (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0"))
                                          (rule "add_literals" (formula "44") (term "1,0"))
                                          (rule "times_zero_1" (formula "44") (term "0"))
                                          (rule "qeq_literals" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "42"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1"))
                                          (rule "inEqSimp_contradInEq4" (formula "17") (ifseqformula "43"))
                                          (rule "greater_literals" (formula "17") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "greater_literals" (formula "17") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "0"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_literals" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "CUT: res_min = l_0 * 2 FALSE"
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "42"))
                                          (rule "polySimp_homoEq" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0"))
                                          (rule "add_literals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "0,0"))
                                          (rule "applyEqRigid" (formula "36") (term "1,1,0,0") (ifseqformula "42"))
                                          (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "applyEqRigid" (formula "38") (term "1,1,1,0,0") (ifseqformula "42"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                          (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0,0"))
                                          (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "43"))
                                          (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                          (rule "add_literals" (formula "43") (term "1,0"))
                                          (rule "times_zero_1" (formula "43") (term "0"))
                                          (rule "qeq_literals" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "42"))
                                          (rule "polySimp_sepNegMonomial" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0"))
                                          (rule "qeq_literals" (formula "44") (term "0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "false_right" (formula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "35"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_literals" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "Exceptional Post (min)"
                                        (builtin "One Step Simplification" (formula "38"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "close" (formula "41") (ifseqformula "40"))
                                    )
                                    (branch "Pre (min)"
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "wellFormedAnonEQ" (formula "38") (term "0,0") (ifseqformula "29"))
                                       (rule "expand_inInt" (formula "38") (term "1"))
                                       (rule "expand_inInt" (formula "38") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,1"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,1"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,1,0"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "28")))
                                       (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                       (rule "inEqSimp_subsumption4" (formula "38") (term "0,1") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                       (rule "greater_literals" (formula "38") (term "0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "leq_literals" (formula "38") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_subsumption5" (formula "38") (term "1,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "greater_literals" (formula "38") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_subsumption6" (formula "38") (term "1") (ifseqformula "13"))
                                       (rule "greater_literals" (formula "38") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "mul_literals" (formula "38") (term "1,0,1"))
                                       (rule "leq_literals" (formula "38") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_leqRight" (formula "38"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_contradInEq2" (formula "1") (ifseqformula "15"))
                                       (rule "greater_literals" (formula "1") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "greater_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_literals" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "35") (inst "sk=i_0"))
                              (rule "orRight" (formula "35"))
                              (rule "orRight" (formula "35"))
                              (rule "orRight" (formula "35"))
                              (rule "orRight" (formula "37"))
                              (rule "inEqSimp_geqRight" (formula "36"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_leqRight" (formula "36"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_leqRight" (formula "38"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "38"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "36")))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "13"))
                              (rule "mul_literals" (formula "2") (term "1,1,0"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption2" (formula "3") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "greater_literals" (formula "3") (term "0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "allLeft" (formula "34") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet1011000000_6" (formula "34") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1011000000_7" (formula "34") (term "0,1"))
                              (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "40"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                              (rule "mul_literals" (formula "34") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "34") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "34") (term "0,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "allLeft" (formula "33") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet1011000000_6" (formula "33") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1011000000_7" (formula "33") (term "1,1"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "35"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "33") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "pullOutSelect" (formula "33") (term "0,1") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                              (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "eqSymm" (formula "33") (term "1"))
                              (rule "cut_direct" (formula "33") (term "0"))
                              (branch "CUT: i_0 <= -1 TRUE"
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "33"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "inEqSimp_contradInEq2" (formula "14") (ifseqformula "2"))
                                 (rule "greater_literals" (formula "14") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "greater_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0"))
                                 (rule "mul_literals" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0"))
                                 (rule "add_literals" (formula "14") (term "0"))
                                 (rule "leq_literals" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                              (branch "CUT: i_0 <= -1 FALSE"
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_leqRight" (formula "37"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "34"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "13"))
                                 (rule "greater_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                  (builtin "Evaluate Query" (formula "34") (term "1,1,0,0") (newnames "a,b_0,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery11011000000_10" (formula "36") (term "0"))
                                 (rule "replaceKnownQuery11011000000_10" (formula "35") (term "1,1,0,0"))
                                 (rule "replaceKnownQuery11011000000_10" (formula "37") (term "1,1,1,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "37") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "37") (term "1") (newnames "queryResult"))
                                  (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_min,result_min,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "38"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "assignment" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "42"))
                                    (rule "mul_literals" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "12"))
                                    (rule "greater_literals" (formula "39") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1,0"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                    (rule "mul_literals" (formula "39") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0"))
                                    (rule "qeq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "commute_or" (formula "40"))
                                    (rule "methodCallEmpty" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "emptyModality" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "notRight" (formula "43"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "39"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "36"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "43"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "42"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "36"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_literals" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "38"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "close" (formula "40") (ifseqformula "39"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "wellFormedAnonEQ" (formula "37") (term "0,0") (ifseqformula "29"))
                                    (rule "expand_inInt" (formula "37") (term "1"))
                                    (rule "expand_inInt" (formula "37") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1"))
                                    (rule "replace_int_MAX" (formula "37") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,1,0"))
                                    (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "6")))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "37") (term "1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,1,1"))
                                    (rule "greater_literals" (formula "37") (term "0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "leq_literals" (formula "37") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_subsumption4" (formula "37") (term "1") (ifseqformula "25"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                    (rule "greater_literals" (formula "37") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "leq_literals" (formula "37") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_subsumption2" (formula "37") (term "0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "greater_literals" (formula "37") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_geqRight" (formula "37"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_subsumption2" (formula "16") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "greater_literals" (formula "16") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "35") (inst "sk=f_0"))
                           (rule "allRight" (formula "35") (inst "sk=o_0"))
                           (rule "orRight" (formula "35"))
                           (rule "orRight" (formula "35"))
                           (rule "orRight" (formula "35"))
                           (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "39"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "37"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
               (branch "Null Reference (b = null)"
                   (builtin "One Step Simplification" (formula "37"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Exceptional Post (copyOf)"
                (builtin "One Step Simplification" (formula "29"))
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
               (rule "expand_inInt" (formula "26") (term "1,0,0,0,1,1,0,1,1,1,1"))
               (rule "expand_inInt" (formula "26") (term "1,0,0,0,1,0,1,1,1,1"))
               (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,0,1,1,0,1,1,1,1"))
               (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,0,1,1,0,1,1,1,1"))
               (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,0,1,0,1,1,1,1"))
               (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,0,1,0,1,1,1,1"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "27"))
               (rule "eqSymm" (formula "29") (term "1,0,0,1,0,1"))
               (rule "replace_known_right" (formula "29") (term "1,1") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "replace_known_right" (formula "28") (term "0,0,1") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_leqRight" (formula "29"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,1"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,1"))
               (rule "blockThrow" (formula "33") (term "1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0"))
               (rule "mul_literals" (formula "29") (term "1,0"))
               (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "30"))
               (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "31"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "instanceof_not_compatible_5" (formula "31") (ifseqformula "30"))
               (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29"))
               (rule "mul_literals" (formula "29") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
               (rule "qeq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "closeFalse" (formula "9"))
            )
            (branch "Pre (copyOf)"
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "2")) (ifInst ""  (formula "26")) (ifInst ""  (formula "1")))
               (rule "expand_inInt" (formula "27") (term "1"))
               (rule "replace_int_MAX" (formula "27") (term "1,0,1"))
               (rule "replace_int_MIN" (formula "27") (term "0,1,1"))
               (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "14"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0"))
               (rule "inEqSimp_subsumption1" (formula "27") (term "1,0") (ifseqformula "8"))
               (rule "leq_literals" (formula "27") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_geqRight" (formula "27"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
               (rule "qeq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "closeFalse" (formula "9"))
            )
         )
         (branch "Exceptional Post (max)"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "10"))
            (rule "close" (formula "14") (ifseqformula "13"))
         )
         (branch "Pre (max)"
             (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
            (rule "expand_inInt" (formula "12") (term "1"))
            (rule "expand_inInt" (formula "12") (term "0"))
            (rule "replace_int_MIN" (formula "12") (term "0,1,1"))
            (rule "replace_int_MAX" (formula "12") (term "1,0,1"))
            (rule "replace_int_MIN" (formula "12") (term "0,1,0"))
            (rule "replace_int_MAX" (formula "12") (term "1,0,0"))
            (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "1"))
            (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
            (rule "mul_literals" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
            (rule "add_literals" (formula "12") (term "0,0,1,0"))
            (rule "add_zero_left" (formula "12") (term "0,1,0"))
            (rule "mod_axiom" (formula "12") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
            (rule "mod_axiom" (formula "12") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
            (rule "inEqSimp_subsumption1" (formula "12") (term "1") (ifseqformula "7"))
            (rule "leq_literals" (formula "12") (term "0,1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "elimGcdGeq" (formula "12") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    length(long[]::select(heap, self, BitSet::$words)))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(length(long[]::select(heap,
                                      self,
                                      BitSet::$words)),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
            (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
            (rule "leq_literals" (formula "12") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "12") (term "0,0,0"))
            (rule "qeq_literals" (formula "12") (term "0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "elimGcdLeq" (formula "12") (term "1") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    length(long[]::select(heap, self, BitSet::$words)))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(length(long[]::select(heap,
                                      self,
                                      BitSet::$words)),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1"))
            (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1"))
            (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1"))
            (rule "add_literals" (formula "12") (term "1,1,0,1,0,1"))
            (rule "times_zero_1" (formula "12") (term "1,0,1,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,1,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1"))
            (rule "add_literals" (formula "12") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,1"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,1"))
            (rule "mul_literals" (formula "12") (term "0,0,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,1"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,1"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,1"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,1"))
            (rule "add_literals" (formula "12") (term "1,0,1,0,1"))
            (rule "times_zero_1" (formula "12") (term "0,1,0,1"))
            (rule "qeq_literals" (formula "12") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1"))
            (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,0,1"))
            (rule "leq_literals" (formula "12") (term "0,1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "div_axiom" (formula "13") (term "0,0,0") (inst "quotient=quotient_0"))
            (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
            (rule "equal_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "16") (term "0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
            (rule "mul_literals" (formula "16") (term "0,1,1"))
            (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=length(long[]::select(heap, self, BitSet::$words))") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
            (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "3") (term "0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_geqRight" (formula "16"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "1"))
            (rule "greater_literals" (formula "3") (term "0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "polySimp_rightDist" (formula "3") (term "0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "mul_literals" (formula "3") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "Null Reference (x_arr_1 = null)"
          (builtin "One Step Simplification" (formula "13"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (x_arr = null)"
    (builtin "One Step Simplification" (formula "11"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
   (rule "closeFalse" (formula "1"))
)
)
}
