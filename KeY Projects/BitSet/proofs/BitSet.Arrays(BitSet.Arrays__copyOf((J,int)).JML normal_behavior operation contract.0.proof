\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Mar 14 18:56:49 CET 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]Presburger=false
[NewSMT]sqrtSMTTranslation=SMT
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=7000
[Strategy]Timeout=-1
"
}

\javaSource "..";

\include "../taclets/intSet.key",  "../taclets/binaryAxiomsExtension.key",  "../taclets/bitwiseOperations.key";

\proofObligation "#Proof Obligation Settings
#Tue Mar 14 18:56:49 CET 2023
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
contract=BitSet.Arrays[BitSet.Arrays\\:\\:copyOf([J,int)].JML normal_behavior operation contract.0
name=BitSet.Arrays[BitSet.Arrays\\:\\:copyOf([J,int)].JML normal_behavior operation contract.0
";

\proof {
(keyLog "0" (keyUser "christianhein" ) (keyVersion "208396f69e"))

(autoModeTime "4234")

(branch "dummy ID"
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,0,0,0,1,1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "3"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "6"))
(rule "leq_literals" (formula "4") (term "0"))
 (builtin "One Step Simplification" (formula "4"))
(rule "true_left" (formula "4"))
(rule "nnf_imp2or" (formula "7") (term "0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "7") (term "0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,1,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_copyOf,savedHeapBefore_copyOf"))
 (builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "copy"))
(rule "arrayCreation" (formula "7") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "dim0"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,1,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,1,0"))
(rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,1,0") (ifseqformula "5"))
(rule "qeq_literals" (formula "7") (term "0,0,0,1,0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "ifSplit" (formula "7"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_1"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "allocateInstanceWithLength" (formula "7"))
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "11") (term "1"))
   (rule "assignment" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
   (rule "expand_inInt" (formula "1"))
   (rule "replace_int_MAX" (formula "1") (term "1,0"))
   (rule "replace_int_MIN" (formula "1") (term "0,1"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
   (rule "leq_literals" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "methodCall" (formula "11") (term "1"))
   (branch "Normal Execution (newObject != null )"
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
      (rule "false_right" (formula "11"))
      (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "assignment_write_attribute_this" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallWithinClass" (formula "11") (term "1"))
      (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "arrayInitialisation" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_elimSub" (formula "11") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "11") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "2,1,0,1,0"))
      (rule "applyEq" (formula "11") (term "1,2,1,0,1,0") (ifseqformula "1"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (rule "blockEmpty" (formula "11") (term "1"))
      (rule "assignment_write_attribute_this" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallReturnIgnoreResult" (formula "11") (term "1"))
      (rule "blockEmpty" (formula "11") (term "1"))
      (rule "methodCallReturn" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (rule "blockEmpty" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "blockEmpty" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallUnfoldArguments" (formula "11") (term "1"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_1"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_2"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_3"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_4"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "11") (term "1"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_5"))
      (rule "assignment_read_length" (formula "11") (term "1"))
      (branch "Normal Execution (_original != null)"
          (builtin "One Step Simplification" (formula "12"))
          (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
         (rule "false_right" (formula "11"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_6"))
         (rule "assignment" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
          (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_min,result_min,exc_0") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (min)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "expand_inInt" (formula "8") (term "1,0"))
            (rule "replace_int_MIN" (formula "8") (term "0,1,1,0"))
            (rule "replace_int_MAX" (formula "8") (term "1,0,1,0"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "11"))
            (rule "eqSymm" (formula "10") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "blockEmpty" (formula "17") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "12"))
            (rule "mul_literals" (formula "9") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
            (rule "mul_literals" (formula "9") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
            (rule "leq_literals" (formula "9") (term "0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "commute_or" (formula "10"))
             (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_arraycopy,exc_1,heapAfter_arraycopy,anon_heap_arraycopy") (contract "BitSet.System[BitSet.System::arraycopy([J,int,[J,int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (arraycopy)"
                (builtin "One Step Simplification" (formula "15"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "expand_inInt" (formula "15") (term "1,0,0,0,1,1"))
               (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0,0,1,1"))
               (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,0,1,1"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "17"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
               (rule "blockEmpty" (formula "21") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
               (rule "expand_subJint" (formula "15") (term "2,1,0"))
               (rule "polySimp_elimSub" (formula "15") (term "0,2,1,0"))
               (rule "mul_literals" (formula "15") (term "1,0,2,1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "0,2,1,0"))
               (rule "expand_moduloInteger" (formula "15") (term "2,1,0"))
               (rule "replace_int_RANGE" (formula "15") (term "1,1,2,1,0"))
               (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,2,1,0"))
               (rule "replace_int_MIN" (formula "15") (term "0,2,1,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,1,2,1,0"))
               (rule "add_literals" (formula "15") (term "0,0,1,2,1,0"))
               (rule "mod_axiom" (formula "15") (term "1,2,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,1,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "2,1,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,2,1,0"))
               (rule "add_literals" (formula "15") (term "0,0,2,1,0"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "1,0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,1,0,0"))
               (rule "commute_or_2" (formula "17") (term "0,0"))
               (rule "commute_or" (formula "17") (term "1,0,0,0"))
               (rule "shift_paren_or" (formula "17") (term "0,0,0"))
               (rule "commute_or" (formula "17") (term "0,0,0,0"))
               (rule "inEqSimp_or_subsumption0" (formula "17") (term "0,0,0,0"))
               (rule "qeq_literals" (formula "17") (term "0,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "methodCallReturn" (formula "21") (term "1"))
               (rule "assignment" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "methodCallEmpty" (formula "21") (term "1"))
               (rule "tryEmpty" (formula "21") (term "1"))
               (rule "emptyModality" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "19")))
               (rule "eqSymm" (formula "21") (term "1,0,0,1"))
               (rule "applyEq" (formula "21") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "andRight" (formula "21"))
                  (branch "Case 1"
                     (rule "allRight" (formula "21") (inst "sk=i_0"))
                     (rule "orRight" (formula "21"))
                     (rule "cutUpperBound" (formula "21") (ifseqformula "17"))
                     (branch "Case 1"
                        (rule "crossInst" (formula "18") (inst "sk=i_1") (ifseqformula "22"))
                        (rule "orRight" (formula "23"))
                        (rule "andLeft" (formula "18"))
                        (rule "orRight" (formula "24"))
                        (rule "orRight" (formula "26"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "25"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "27"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                        (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "22"))
                        (rule "applyEqRigid" (formula "23") (term "0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "Case 2"
                        (rule "crossInst" (formula "18") (inst "sk=i_1") (ifseqformula "22"))
                        (rule "orRight" (formula "23"))
                        (rule "notLeft" (formula "1"))
                        (rule "andLeft" (formula "17"))
                        (rule "orRight" (formula "25"))
                        (rule "orRight" (formula "24"))
                        (rule "eqSymm" (formula "20"))
                        (rule "inEqSimp_geqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "27"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "21"))
                        (rule "applyEqRigid" (formula "22") (term "0,2,0,1") (ifseqformula "21"))
                        (rule "applyEqRigid" (formula "22") (term "0,0,0,0") (ifseqformula "21"))
                        (rule "applyEqRigid" (formula "22") (term "0,2,1,1") (ifseqformula "21"))
                        (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0"))
                        (rule "leq_literals" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "false_right" (formula "24"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "21") (term "0,0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "pullOutSelect" (formula "26") (term "1") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                        (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "23"))
                        (rule "mul_literals" (formula "14") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "4"))
                        (rule "leq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfMemset" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfCreate" (formula "2"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                        (rule "castDel" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfMemset" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfCreate" (formula "2"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                        (rule "castDel" (formula "2") (term "0"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfMemset" (formula "3"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                        (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_5"))
                        (rule "simplifySelectOfCreate" (formula "3"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "div_axiom" (formula "22") (term "0,1,2,1,0") (inst "quotient=quotient_0"))
                        (rule "mul_literals" (formula "22") (term "1,1,1,1,1"))
                        (rule "equal_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "qeq_literals" (formula "22") (term "0,1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                        (rule "add_literals" (formula "24") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "24") (term "1"))
                        (rule "add_literals" (formula "24") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "22"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "22"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,0") (ifseqformula "22"))
                        (rule "polySimp_addComm1" (formula "25") (term "2,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "28"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "19"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "26"))
                        (rule "mul_literals" (formula "16") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "leq_literals" (formula "16") (term "0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "15"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "leq_literals" (formula "26") (term "0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "neg_literal" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0"))
                        (rule "qeq_literals" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "7"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "24") (ifseqformula "27"))
                        (rule "greater_literals" (formula "24") (term "0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "mul_literals" (formula "24") (term "0,0"))
                        (rule "leq_literals" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "12"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "add_literals" (formula "25") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "25") (ifseqformula "27"))
                        (rule "mul_literals" (formula "25") (term "0,1,0"))
                        (rule "greater_literals" (formula "25") (term "0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "leq_literals" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                        (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                        (rule "expand_inInt" (formula "20"))
                        (rule "replace_int_MAX" (formula "20") (term "1,0"))
                        (rule "replace_int_MIN" (formula "20") (term "0,1"))
                        (rule "andLeft" (formula "20"))
                        (rule "inEqSimp_commuteLeq" (formula "21"))
                        (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                        (rule "leq_literals" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "cut_direct" (formula "18") (term "0"))
                        (branch "CUT: result_min = newLength TRUE"
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "21"))
                           (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,0"))
                           (rule "times_zero_1" (formula "21") (term "0"))
                           (rule "qeq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "17"))
                           (rule "applyEq" (formula "28") (term "1,2,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "17"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                           (rule "leq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0,0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                           (rule "leq_literals" (formula "2") (term "0,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "28"))
                           (rule "mul_literals" (formula "12") (term "0,0"))
                           (rule "add_zero_left" (formula "12") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "24"))
                           (rule "mul_literals" (formula "12") (term "0,0"))
                           (rule "add_zero_left" (formula "12") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1"))
                           (rule "mul_literals" (formula "22") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "23"))
                           (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "12"))
                           (rule "times_zero_2" (formula "22") (term "1,1"))
                           (rule "add_zero_right" (formula "22") (term "1"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "12"))
                           (rule "leq_literals" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "12"))
                           (rule "mul_literals" (formula "22") (term "1,1"))
                           (rule "add_zero_right" (formula "22") (term "1"))
                           (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "12"))
                           (rule "times_zero_2" (formula "23") (term "1,1"))
                           (rule "add_zero_right" (formula "23") (term "1"))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "24") (term "0,1,0,2,1,0") (ifseqformula "12"))
                           (rule "mul_literals" (formula "24") (term "1,0,2,1,0"))
                           (rule "add_zero_right" (formula "24") (term "0,2,1,0"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "12"))
                           (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                           (rule "applyEq" (formula "2") (term "0,1,0,1,1,0,0") (ifseqformula "12"))
                           (rule "mul_literals" (formula "2") (term "1,0,1,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,1,1,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "13"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "4"))
                           (rule "leq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "10"))
                           (rule "leq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0,0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                           (rule "leq_literals" (formula "2") (term "0,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "eqSymm" (formula "28"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "27"))
                           (rule "div_axiom" (formula "18") (term "0") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "18") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "18") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "equal_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                           (rule "add_literals" (formula "20") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "20") (term "1"))
                           (rule "add_literals" (formula "20") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "18"))
                           (rule "applyEqRigid" (formula "20") (term "0,1,0,0") (ifseqformula "18"))
                           (rule "mul_literals" (formula "20") (term "1,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0"))
                           (rule "applyEqRigid" (formula "19") (term "0,1,0,0") (ifseqformula "18"))
                           (rule "mul_literals" (formula "19") (term "1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "11"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "8"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                            (builtin "Evaluate Query" (formula "1") (term "0") (newnames "a,b,callee,queryResult,res_min"))
                           (rule "replaceKnownQuery010000001_24" (formula "2") (term "0"))
                           (rule "notLeft" (formula "1"))
                           (rule "eqSymm" (formula "25") (term "0,0,1"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult"))
                            (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_min_0,result_min_0,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                           (branch "Post (min)"
                               (builtin "One Step Simplification" (formula "26"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "expand_inInt" (formula "25") (term "1,0"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "28"))
                              (rule "eqSymm" (formula "27") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "26"))
                              (rule "inEqSimp_commuteLeq" (formula "28"))
                              (rule "assignment" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "14"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                              (rule "mul_literals" (formula "26") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "mul_literals" (formula "26") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "11"))
                              (rule "leq_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "commute_or" (formula "27"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "emptyModality" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "notRight" (formula "31"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "30"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_literals" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "Exceptional Post (min)"
                               (builtin "One Step Simplification" (formula "26"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "25"))
                              (rule "close" (formula "28") (ifseqformula "27"))
                           )
                           (branch "Pre (min)"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "wellFormedAnonEQ" (formula "25") (term "0,0") (ifseqformula "20"))
                              (rule "wellFormedStorePrimitive" (formula "25") (term "0,0,0"))
                              (rule "expand_inInt" (formula "25") (term "1"))
                              (rule "expand_inInt" (formula "25") (term "1,0"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,1"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                              (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")) (ifInst ""  (formula "8")))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                              (rule "inEqSimp_subsumption1" (formula "25") (term "1,0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "25") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "11"))
                              (rule "leq_literals" (formula "25") (term "0,1"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "25"))
                              (rule "wellFormedStorePrimitive" (formula "25"))
                              (rule "wellFormedStorePrimitive" (formula "25"))
                              (rule "wellFormedStorePrimitive" (formula "25"))
                              (rule "wellFormedCreate" (formula "25"))
                              (rule "close" (formula "25") (ifseqformula "6"))
                           )
                        )
                        (branch "CUT: result_min = newLength FALSE"
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,0"))
                           (rule "times_zero_1" (formula "21") (term "0"))
                           (rule "leq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_strengthen0" (formula "20") (ifseqformula "34"))
                           (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "20"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0"))
                           (rule "qeq_literals" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "false_right" (formula "34"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                           (rule "times_zero_1" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "18"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "31"))
                           (rule "mul_literals" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                           (rule "mul_literals" (formula "26") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                           (rule "mul_literals" (formula "26") (term "0,1"))
                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0"))
                           (rule "qeq_literals" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "27"))
                           (rule "mul_literals" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "leq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "18"))
                           (rule "leq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "24"))
                           (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "17"))
                           (rule "leq_literals" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "applyEqRigid" (formula "27") (term "0,1,1") (ifseqformula "17"))
                           (rule "mul_literals" (formula "27") (term "1,1"))
                           (rule "add_zero_right" (formula "27") (term "1"))
                           (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "17"))
                           (rule "times_zero_2" (formula "26") (term "1,1"))
                           (rule "add_zero_right" (formula "26") (term "1"))
                           (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "17"))
                           (rule "mul_literals" (formula "23") (term "1,1"))
                           (rule "add_zero_right" (formula "23") (term "1"))
                           (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "17"))
                           (rule "mul_literals" (formula "24") (term "1,1"))
                           (rule "add_zero_right" (formula "24") (term "1"))
                           (rule "applyEq" (formula "4") (term "0,1,0,1,1,0,0") (ifseqformula "17"))
                           (rule "mul_literals" (formula "4") (term "1,0,1,1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,1,1,0,0"))
                           (rule "applyEq" (formula "27") (term "0,1,0,2,1,0") (ifseqformula "17"))
                           (rule "mul_literals" (formula "27") (term "1,0,2,1,0"))
                           (rule "add_zero_right" (formula "27") (term "0,2,1,0"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,0,1,0,0") (ifseqformula "17"))
                           (rule "mul_literals" (formula "2") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
                           (rule "leq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (term "1,0,0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                           (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "33"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "2") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "16"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "14"))
                           (rule "leq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "12"))
                           (rule "leq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "newLength >= 1 + i_0 TRUE"
                              (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "x_arr_2 = original TRUE"
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "closeTrue" (formula "30"))
                              )
                              (branch "x_arr_2 = original FALSE"
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                  (builtin "Evaluate Query" (formula "3") (term "0") (newnames "a,b,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery10110000001_24" (formula "4") (term "0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "25") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult"))
                                  (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_min_0,result_min_0,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "25"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "expand_inInt" (formula "25") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "inEqSimp_commuteLeq" (formula "26"))
                                    (rule "assignment" (formula "31") (term "1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                                    (rule "mul_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "commute_or" (formula "27"))
                                    (rule "methodCallEmpty" (formula "31") (term "1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "emptyModality" (formula "31") (term "1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "notRight" (formula "31"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "28") (term "1"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "29"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "28") (term "0") (ifseqformula "29"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "28") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "29"))
                                    (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                    (rule "add_literals" (formula "29") (term "1,0"))
                                    (rule "times_zero_1" (formula "29") (term "0"))
                                    (rule "leq_literals" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "19") (term "1,2,1,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "12") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "22"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "25"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "close" (formula "28") (ifseqformula "27"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "wellFormedAnonEQ" (formula "25") (term "0,0") (ifseqformula "20"))
                                    (rule "wellFormedStorePrimitive" (formula "25") (term "0,0,0"))
                                    (rule "expand_inInt" (formula "25") (term "1"))
                                    (rule "expand_inInt" (formula "25") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "25") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "25") (term "1,0,1"))
                                    (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                    (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "11")) (ifInst ""  (formula "9")))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "wellFormedMemsetArrayPrimitive" (formula "25"))
                                    (rule "wellFormedStorePrimitive" (formula "25"))
                                    (rule "wellFormedStorePrimitive" (formula "25"))
                                    (rule "wellFormedStorePrimitive" (formula "25"))
                                    (rule "wellFormedCreate" (formula "25"))
                                    (rule "close" (formula "25") (ifseqformula "7"))
                                 )
                              )
                           )
                           (branch "newLength >= 1 + i_0 FALSE"
                              (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "29"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                              (rule "mul_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                               (builtin "Evaluate Query" (formula "2") (term "0") (newnames "a,b,callee,queryResult,res_min"))
                              (rule "replaceKnownQuery1110000001_24" (formula "3") (term "0"))
                              (rule "notLeft" (formula "1"))
                              (rule "eqSymm" (formula "25") (term "0,0,1"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult"))
                               (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_min_0,result_min_0,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                              (branch "Post (min)"
                                  (builtin "One Step Simplification" (formula "25"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "expand_inInt" (formula "25") (term "1,0"))
                                 (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                 (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "inEqSimp_commuteLeq" (formula "27"))
                                 (rule "assignment" (formula "31") (term "1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "30"))
                                 (rule "mul_literals" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                 (rule "mul_literals" (formula "27") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                                 (rule "mul_literals" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                 (rule "mul_literals" (formula "27") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "commute_or" (formula "28"))
                                 (rule "methodCallEmpty" (formula "31") (term "1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "emptyModality" (formula "31") (term "1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "notRight" (formula "31"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "29") (term "1"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "30"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "31"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "Exceptional Post (min)"
                                  (builtin "One Step Simplification" (formula "25"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "notLeft" (formula "25"))
                                 (rule "close" (formula "29") (ifseqformula "28"))
                              )
                              (branch "Pre (min)"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "wellFormedAnonEQ" (formula "25") (term "0,0") (ifseqformula "20"))
                                 (rule "wellFormedStorePrimitive" (formula "25") (term "0,0,0"))
                                 (rule "expand_inInt" (formula "25") (term "1"))
                                 (rule "expand_inInt" (formula "25") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "25") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "25") (term "1,0,1"))
                                 (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                 (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                 (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")) (ifInst ""  (formula "8")))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (term "1,0") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "wellFormedMemsetArrayPrimitive" (formula "25"))
                                 (rule "wellFormedStorePrimitive" (formula "25"))
                                 (rule "wellFormedStorePrimitive" (formula "25"))
                                 (rule "wellFormedStorePrimitive" (formula "25"))
                                 (rule "wellFormedCreate" (formula "25"))
                                 (rule "close" (formula "25") (ifseqformula "6"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "21") (inst "sk=i_0"))
                     (rule "orRight" (formula "21"))
                     (rule "orRight" (formula "21"))
                     (rule "orRight" (formula "21"))
                     (rule "orRight" (formula "23"))
                     (rule "inEqSimp_leqRight" (formula "21"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "23"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "24"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                     (rule "leq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "div_axiom" (formula "21") (term "0,1,2,1,0") (inst "quotient=quotient_0"))
                     (rule "qeq_literals" (formula "21") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "equal_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "mul_literals" (formula "21") (term "1,1,1"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                     (rule "add_literals" (formula "23") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "23") (term "1"))
                     (rule "add_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "applyEq" (formula "2") (term "0,0,1,0,0") (ifseqformula "21"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "24") (term "0,1,2,1,0") (ifseqformula "21"))
                     (rule "polySimp_addComm1" (formula "24") (term "2,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1"))
                     (rule "polySimp_rightDist" (formula "22") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                     (rule "mul_literals" (formula "22") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1"))
                     (rule "polySimp_rightDist" (formula "23") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                     (rule "mul_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
                     (rule "mul_literals" (formula "15") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "15") (term "0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "19"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1"))
                     (rule "polySimp_rightDist" (formula "23") (term "1"))
                     (rule "mul_literals" (formula "23") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "14"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                     (rule "neg_literal" (formula "24") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0"))
                     (rule "qeq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                     (rule "mul_literals" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "23") (ifseqformula "25"))
                     (rule "times_zero_1" (formula "23") (term "0,1,0"))
                     (rule "greater_literals" (formula "23") (term "0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "leq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                     (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
                     (rule "expand_inInt" (formula "19"))
                     (rule "replace_int_MAX" (formula "19") (term "1,0"))
                     (rule "replace_int_MIN" (formula "19") (term "0,1"))
                     (rule "andLeft" (formula "19"))
                     (rule "inEqSimp_commuteLeq" (formula "20"))
                     (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                     (rule "leq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "cut_direct" (formula "17") (term "0"))
                     (branch "CUT: result_min = newLength TRUE"
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq0" (formula "21"))
                        (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "1,0"))
                        (rule "times_zero_1" (formula "21") (term "0"))
                        (rule "qeq_literals" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "28") (term "1,2,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "17"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "17"))
                        (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "16"))
                        (rule "applyEq" (formula "19") (term "1") (ifseqformula "16"))
                        (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "16"))
                        (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "16"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                        (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                        (rule "leq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                        (rule "leq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "17"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "18") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "24"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "24"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                        (rule "qeq_literals" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "14"))
                        (rule "leq_literals" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "14"))
                        (rule "mul_literals" (formula "5") (term "1,1"))
                        (rule "add_zero_right" (formula "5") (term "1"))
                        (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "14"))
                        (rule "mul_literals" (formula "23") (term "1,1"))
                        (rule "add_zero_right" (formula "23") (term "1"))
                        (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "14"))
                        (rule "mul_literals" (formula "24") (term "1,1"))
                        (rule "add_zero_right" (formula "24") (term "1"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "25") (term "0,1,0,2,1,0") (ifseqformula "14"))
                        (rule "mul_literals" (formula "25") (term "1,0,2,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,2,1,0"))
                        (rule "applyEq" (formula "2") (term "0,1,0,1,1,0,0") (ifseqformula "14"))
                        (rule "times_zero_2" (formula "2") (term "1,0,1,1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,1,1,0,0"))
                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "4"))
                        (rule "leq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "14"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "11"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "i_0 >= 0 TRUE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "div_axiom" (formula "19") (term "0") (inst "quotient=quotient_1"))
                           (rule "equal_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "qeq_literals" (formula "19") (term "0,1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,1,1"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                           (rule "add_literals" (formula "21") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "21") (term "1"))
                           (rule "add_literals" (formula "21") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "19"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "19"))
                           (rule "mul_literals" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "applyEqRigid" (formula "20") (term "0,1,0,0") (ifseqformula "19"))
                           (rule "times_zero_2" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "9"))
                           (rule "leq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "12"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "allLeft" (formula "23") (inst "t=i_0"))
                           (rule "replaceKnownSelect_taclet1000001_0" (formula "23") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001000001_11" (formula "23") (term "0,1"))
                           (rule "eqSymm" (formula "23") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0,0"))
                           (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "pullOutSelect" (formula "23") (term "2,0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfMemset" (formula "23"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                           (rule "eqSymm" (formula "23") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "pullOutSelect" (formula "24") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                           (rule "simplifySelectOfMemset" (formula "24"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "simplifySelectOfStore" (formula "24"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "simplifySelectOfStore" (formula "24"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "simplifySelectOfStore" (formula "24"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "simplifySelectOfCreate" (formula "24"))
                            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")))
                           (rule "castDel" (formula "24") (term "1,0"))
                           (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "applyEqReverse" (formula "25") (term "0,0,1,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "pullOutSelect" (formula "23") (term "2,0") (inst "selectSK=arr_5"))
                           (rule "simplifySelectOfCreate" (formula "23"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")))
                           (rule "applyEqReverse" (formula "24") (term "2,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "ifthenelse_split" (formula "23") (term "0"))
                           (branch "x_arr_2 = original TRUE"
                              (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                              (rule "close" (formula "24") (ifseqformula "8"))
                           )
                           (branch "x_arr_2 = original FALSE"
                              (rule "applyEqReverse" (formula "24") (term "2,0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "eqSymm" (formula "23"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "23"))
                               (builtin "Evaluate Query" (formula "4") (term "0") (newnames "a,b,callee,queryResult,res_min"))
                              (rule "replaceKnownQuery1001000001_24" (formula "5") (term "0"))
                              (rule "notLeft" (formula "1"))
                              (rule "eqSymm" (formula "25") (term "0,0,1"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult"))
                               (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_min_0,result_min_0,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                              (branch "Post (min)"
                                  (builtin "One Step Simplification" (formula "26"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "expand_inInt" (formula "25") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                 (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "eqSymm" (formula "27") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26"))
                                 (rule "inEqSimp_commuteLeq" (formula "28"))
                                 (rule "assignment" (formula "31") (term "1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "15"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                                 (rule "mul_literals" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                 (rule "mul_literals" (formula "26") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "commute_or" (formula "27"))
                                 (rule "methodCallEmpty" (formula "31") (term "1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "emptyModality" (formula "31") (term "1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "notRight" (formula "31"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                 (rule "mul_literals" (formula "27") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "30"))
                                 (rule "mul_literals" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                 (rule "mul_literals" (formula "27") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "cut_direct" (formula "28") (term "0"))
                                 (branch "CUT: res_min = newLength TRUE"
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "28"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq0" (formula "28"))
                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,0"))
                                    (rule "times_zero_1" (formula "28") (term "0"))
                                    (rule "qeq_literals" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "27"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "CUT: res_min = newLength FALSE"
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,0"))
                                    (rule "times_zero_1" (formula "28") (term "0"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "30"))
                                    (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "27"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0"))
                                    (rule "leq_literals" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                              )
                              (branch "Exceptional Post (min)"
                                  (builtin "One Step Simplification" (formula "26"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "notLeft" (formula "25"))
                                 (rule "close" (formula "28") (ifseqformula "27"))
                              )
                              (branch "Pre (min)"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "wellFormedAnonEQ" (formula "25") (term "0,0") (ifseqformula "21"))
                                 (rule "wellFormedStorePrimitive" (formula "25") (term "0,0,0"))
                                 (rule "expand_inInt" (formula "25") (term "1"))
                                 (rule "expand_inInt" (formula "25") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "25") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "25") (term "1,0,1"))
                                 (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                 (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                 (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "wellFormedMemsetArrayPrimitive" (formula "25"))
                                 (rule "wellFormedStorePrimitive" (formula "25"))
                                 (rule "wellFormedStorePrimitive" (formula "25"))
                                 (rule "wellFormedStorePrimitive" (formula "25"))
                                 (rule "wellFormedCreate" (formula "25"))
                                 (rule "close" (formula "25") (ifseqformula "7"))
                              )
                           )
                        )
                        (branch "i_0 >= 0 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_geqRight" (formula "23"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "div_axiom" (formula "19") (term "0") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "19") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "19") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "equal_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                           (rule "add_literals" (formula "21") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "21") (term "1"))
                           (rule "add_literals" (formula "21") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "19"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "19"))
                           (rule "mul_literals" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "19"))
                           (rule "mul_literals" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "12"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "9"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                            (builtin "Evaluate Query" (formula "4") (term "0") (newnames "a,b,callee,queryResult,res_min"))
                           (rule "replaceKnownQuery101000001_12" (formula "5") (term "0"))
                           (rule "notLeft" (formula "1"))
                           (rule "eqSymm" (formula "24") (term "0,0,1"))
                           (rule "variableDeclaration" (formula "24") (term "1") (newnames "queryResult"))
                            (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_min_0,result_min_0,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                           (branch "Post (min)"
                               (builtin "One Step Simplification" (formula "24"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "expand_inInt" (formula "24") (term "1,0"))
                              (rule "replace_int_MAX" (formula "24") (term "1,0,1,0"))
                              (rule "replace_int_MIN" (formula "24") (term "0,1,1,0"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "27"))
                              (rule "eqSymm" (formula "26") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "25"))
                              (rule "inEqSimp_commuteLeq" (formula "27"))
                              (rule "assignment" (formula "30") (term "1"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "28"))
                              (rule "mul_literals" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "mul_literals" (formula "25") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "12"))
                              (rule "leq_literals" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "15"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "commute_or" (formula "26"))
                              (rule "methodCallEmpty" (formula "30") (term "1"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "emptyModality" (formula "30") (term "1"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "notRight" (formula "30"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "5"))
                              (rule "mul_literals" (formula "26") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "mul_literals" (formula "26") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                              (rule "mul_literals" (formula "26") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "mul_literals" (formula "26") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "13"))
                              (rule "leq_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "16"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "cut_direct" (formula "27") (term "0"))
                              (branch "CUT: res_min = newLength TRUE"
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                 (rule "inEqSimp_homoInEq0" (formula "27"))
                                 (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                 (rule "add_literals" (formula "27") (term "1,0"))
                                 (rule "times_zero_1" (formula "27") (term "0"))
                                 (rule "qeq_literals" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "leq_literals" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                              (branch "CUT: res_min = newLength FALSE"
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,0"))
                                 (rule "times_zero_1" (formula "28") (term "0"))
                                 (rule "leq_literals" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "26"))
                                 (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "29"))
                                 (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "16"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "27"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0"))
                                 (rule "add_zero_right" (formula "27") (term "0"))
                                 (rule "leq_literals" (formula "27"))
                                 (rule "closeFalse" (formula "27"))
                              )
                           )
                           (branch "Exceptional Post (min)"
                               (builtin "One Step Simplification" (formula "24"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "26"))
                              (rule "notLeft" (formula "24"))
                              (rule "close" (formula "28") (ifseqformula "27"))
                           )
                           (branch "Pre (min)"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "wellFormedAnonEQ" (formula "24") (term "0,0") (ifseqformula "21"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "0,0,0"))
                              (rule "expand_inInt" (formula "24") (term "1"))
                              (rule "expand_inInt" (formula "24") (term "1,0"))
                              (rule "replace_int_MIN" (formula "24") (term "0,1,1"))
                              (rule "replace_int_MAX" (formula "24") (term "1,0,1"))
                              (rule "replace_int_MIN" (formula "24") (term "0,1,1,0"))
                              (rule "replace_int_MAX" (formula "24") (term "1,0,1,0"))
                              (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "24") (term "1") (ifseqformula "12"))
                              (rule "leq_literals" (formula "24") (term "0,1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_subsumption1" (formula "24") (term "1") (ifseqformula "14"))
                              (rule "leq_literals" (formula "24") (term "0,1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "24"))
                              (rule "wellFormedStorePrimitive" (formula "24"))
                              (rule "wellFormedStorePrimitive" (formula "24"))
                              (rule "wellFormedStorePrimitive" (formula "24"))
                              (rule "wellFormedCreate" (formula "24"))
                              (rule "close" (formula "24") (ifseqformula "7"))
                           )
                        )
                     )
                     (branch "CUT: result_min = newLength FALSE"
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "17"))
                        (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq1" (formula "19"))
                        (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                        (rule "add_literals" (formula "19") (term "1,0"))
                        (rule "times_zero_1" (formula "19") (term "0"))
                        (rule "leq_literals" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_strengthen0" (formula "19") (ifseqformula "30"))
                        (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "19"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "qeq_literals" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "false_right" (formula "30"))
                        (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "18"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "24"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0"))
                        (rule "qeq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                        (rule "times_zero_1" (formula "17") (term "0,0"))
                        (rule "add_zero_left" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "17"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "17") (term "0,0"))
                        (rule "add_zero_left" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "17") (term "0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "17"))
                        (rule "leq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "22"))
                        (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "16"))
                        (rule "times_zero_2" (formula "25") (term "1,1"))
                        (rule "add_zero_right" (formula "25") (term "1"))
                        (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "16"))
                        (rule "times_zero_2" (formula "24") (term "1,1"))
                        (rule "add_zero_right" (formula "24") (term "1"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "16"))
                        (rule "times_zero_2" (formula "25") (term "1,1"))
                        (rule "add_zero_right" (formula "25") (term "1"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
                        (rule "leq_literals" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEqRigid" (formula "2") (term "0,1,0,1,1,0,0") (ifseqformula "16"))
                        (rule "times_zero_2" (formula "2") (term "1,0,1,1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,1,1,0,0"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "16"))
                        (rule "applyEqRigid" (formula "25") (term "0,1,0,2,1,0") (ifseqformula "16"))
                        (rule "times_zero_2" (formula "25") (term "1,0,2,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,2,1,0"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "15"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "17"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "13"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "i_0 >= 0 TRUE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "result_min >= 1 + i_0 TRUE"
                              (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "allLeft" (formula "23") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet1000001_0" (formula "23") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011000001_11" (formula "23") (term "0,1"))
                              (rule "eqSymm" (formula "23") (term "1"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "23") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "23") (term "0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0,0"))
                              (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "pullOutSelect" (formula "23") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                              (rule "simplifySelectOfMemset" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "simplifySelectOfStore" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "simplifySelectOfStore" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "simplifySelectOfStore" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "simplifySelectOfCreate" (formula "23"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                              (rule "castDel" (formula "23") (term "1,0"))
                              (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEqReverse" (formula "24") (term "0,0,1,0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "pullOutSelect" (formula "23") (term "2,0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfMemset" (formula "23"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                              (rule "eqSymm" (formula "23") (term "0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "1,0,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                              (rule "qeq_literals" (formula "23") (term "0,1,0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "pullOutSelect" (formula "23") (term "2,0") (inst "selectSK=arr_5"))
                              (rule "simplifySelectOfCreate" (formula "23"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")))
                              (rule "applyEqReverse" (formula "24") (term "2,0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "ifthenelse_split" (formula "23") (term "0"))
                              (branch "x_arr_2 = original TRUE"
                                 (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "24"))
                                 (rule "hideAuxiliaryEq" (formula "24"))
                                 (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,0,0,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,0,0,0,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                                 (rule "close" (formula "24") (ifseqformula "9"))
                              )
                              (branch "x_arr_2 = original FALSE"
                                 (rule "applyEqReverse" (formula "24") (term "2,0") (ifseqformula "23"))
                                 (rule "hideAuxiliaryEq" (formula "23"))
                                 (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "23"))
                                  (builtin "Evaluate Query" (formula "5") (term "0") (newnames "a,b,callee,queryResult,res_min"))
                                 (rule "replaceKnownQuery10011000001_24" (formula "6") (term "0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eqSymm" (formula "25") (term "0,0,1"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult"))
                                  (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_min_0,result_min_0,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (min)"
                                     (builtin "One Step Simplification" (formula "26"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "expand_inInt" (formula "25") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "inEqSimp_commuteLeq" (formula "26"))
                                    (rule "assignment" (formula "31") (term "1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                                    (rule "mul_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "commute_or" (formula "27"))
                                    (rule "methodCallEmpty" (formula "31") (term "1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "emptyModality" (formula "31") (term "1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "notRight" (formula "31"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "29"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "28") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                    (rule "mul_literals" (formula "27") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "6"))
                                    (rule "mul_literals" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                    (rule "mul_literals" (formula "27") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "18"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "28") (term "0") (ifseqformula "29"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "28") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "applyEq" (formula "22") (term "1,2,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,0"))
                                    (rule "times_zero_1" (formula "28") (term "0"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "leq_literals" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                                 (branch "Exceptional Post (min)"
                                     (builtin "One Step Simplification" (formula "26"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "close" (formula "28") (ifseqformula "27"))
                                 )
                                 (branch "Pre (min)"
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "wellFormedAnonEQ" (formula "25") (term "0,0") (ifseqformula "21"))
                                    (rule "wellFormedStorePrimitive" (formula "25") (term "0,0,0"))
                                    (rule "expand_inInt" (formula "25") (term "1"))
                                    (rule "expand_inInt" (formula "25") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "25") (term "0,1,1"))
                                    (rule "replace_int_MAX" (formula "25") (term "1,0,1"))
                                    (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "25") (term "1,0,1,0"))
                                    (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "12")) (ifInst ""  (formula "10")))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (term "1,0") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "wellFormedMemsetArrayPrimitive" (formula "25"))
                                    (rule "wellFormedStorePrimitive" (formula "25"))
                                    (rule "wellFormedStorePrimitive" (formula "25"))
                                    (rule "wellFormedStorePrimitive" (formula "25"))
                                    (rule "wellFormedCreate" (formula "25"))
                                    (rule "close" (formula "25") (ifseqformula "8"))
                                 )
                              )
                           )
                           (branch "result_min >= 1 + i_0 FALSE"
                              (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "closeTrue" (formula "28"))
                           )
                        )
                        (branch "i_0 >= 0 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_geqRight" (formula "23"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                            (builtin "Evaluate Query" (formula "4") (term "0") (newnames "a,b,callee,queryResult,res_min"))
                           (rule "replaceKnownQuery111000001_12" (formula "5") (term "0"))
                           (rule "notLeft" (formula "1"))
                           (rule "eqSymm" (formula "23") (term "0,0,1"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "queryResult"))
                            (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_min_0,result_min_0,exc_2") (contract "BitSet.Math[BitSet.Math::min(int,int)].JML normal_behavior operation contract.0"))
                           (branch "Post (min)"
                               (builtin "One Step Simplification" (formula "23"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "expand_inInt" (formula "23") (term "1,0"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,1,0"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1,0"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_commuteLeq" (formula "25"))
                              (rule "assignment" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "28"))
                              (rule "mul_literals" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "mul_literals" (formula "25") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "13"))
                              (rule "leq_literals" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "27"))
                              (rule "mul_literals" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "mul_literals" (formula "25") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "15"))
                              (rule "leq_literals" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "commute_or" (formula "26"))
                              (rule "methodCallEmpty" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "emptyModality" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "notRight" (formula "29"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "28"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "1"))
                              (rule "eqSymm" (formula "27") (term "1"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "12"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "17"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,0"))
                              (rule "qeq_literals" (formula "27") (term "0,0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "19") (term "1,2,1,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "27"))
                              (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,0"))
                              (rule "times_zero_1" (formula "27") (term "0"))
                              (rule "leq_literals" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "applyEq" (formula "12") (term "1") (ifseqformula "25"))
                              (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0"))
                              (rule "qeq_literals" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "15"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "25"))
                              (rule "mul_literals" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "5"))
                              (rule "mul_literals" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "Exceptional Post (min)"
                               (builtin "One Step Simplification" (formula "24"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "25"))
                              (rule "notLeft" (formula "23"))
                              (rule "close" (formula "27") (ifseqformula "26"))
                           )
                           (branch "Pre (min)"
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "wellFormedAnonEQ" (formula "23") (term "0,0") (ifseqformula "20"))
                              (rule "wellFormedStorePrimitive" (formula "23") (term "0,0,0"))
                              (rule "expand_inInt" (formula "23") (term "1"))
                              (rule "expand_inInt" (formula "23") (term "1,0"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1,0"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,1,0"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "11")) (ifInst ""  (formula "9")))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "1") (ifseqformula "13"))
                              (rule "leq_literals" (formula "23") (term "0,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "1") (ifseqformula "15"))
                              (rule "leq_literals" (formula "23") (term "0,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "23"))
                              (rule "wellFormedStorePrimitive" (formula "23"))
                              (rule "wellFormedStorePrimitive" (formula "23"))
                              (rule "wellFormedStorePrimitive" (formula "23"))
                              (rule "wellFormedCreate" (formula "23"))
                              (rule "close" (formula "23") (ifseqformula "7"))
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "21") (inst "sk=f_0"))
                  (rule "allRight" (formula "21") (inst "sk=o_0"))
                  (rule "orRight" (formula "21"))
                  (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "23"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfMemset" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "eqSymm" (formula "2") (term "0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_and" (formula "6") (term "0,0"))
                  (rule "commute_and" (formula "8") (term "1,0,0"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "div_axiom" (formula "23") (term "0,1,2,1,0") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "23") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "23") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "equal_literals" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                  (rule "add_literals" (formula "25") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "25") (term "1"))
                  (rule "add_literals" (formula "25") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "applyEq" (formula "8") (term "0,1,1,1,0,1,0,0,0,0") (ifseqformula "23"))
                  (rule "polySimp_addComm1" (formula "8") (term "1,1,0,1,0,0,0,0"))
                  (rule "applyEq" (formula "26") (term "0,1,2,1,0") (ifseqformula "23"))
                  (rule "polySimp_addComm1" (formula "26") (term "2,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1"))
                  (rule "polySimp_rightDist" (formula "24") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                  (rule "mul_literals" (formula "24") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1"))
                  (rule "mul_literals" (formula "25") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "25"))
                  (rule "mul_literals" (formula "17") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "add_literals" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,1,0"))
                  (rule "neg_literal" (formula "25") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0"))
                  (rule "qeq_literals" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "21"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                  (rule "mul_literals" (formula "26") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "add_literals" (formula "26") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "26") (ifseqformula "25"))
                  (rule "times_zero_1" (formula "26") (term "0,1,0"))
                  (rule "greater_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "leq_literals" (formula "26") (term "0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                  (rule "expand_inInt" (formula "20"))
                  (rule "replace_int_MAX" (formula "20") (term "1,0"))
                  (rule "replace_int_MIN" (formula "20") (term "0,1"))
                  (rule "andLeft" (formula "20"))
                  (rule "inEqSimp_commuteLeq" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                  (rule "leq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "cut_direct" (formula "19") (term "0"))
                  (branch "CUT: result_min = newLength TRUE"
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "applyEq" (formula "31") (term "1,2,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "19"))
                     (rule "applyEq" (formula "8") (term "1,1,1,0,1,0,0,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "19"))
                     (rule "inEqSimp_homoInEq0" (formula "23"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "1,0"))
                     (rule "times_zero_1" (formula "23") (term "0"))
                     (rule "qeq_literals" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "26"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "15") (term "0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "24"))
                     (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "15"))
                     (rule "times_zero_2" (formula "25") (term "1,1"))
                     (rule "add_zero_right" (formula "25") (term "1"))
                     (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "15"))
                     (rule "times_zero_2" (formula "26") (term "1,1"))
                     (rule "add_zero_right" (formula "26") (term "1"))
                     (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "15"))
                     (rule "leq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "26") (term "0,1,0,2,1,0") (ifseqformula "15"))
                     (rule "times_zero_2" (formula "26") (term "1,0,2,1,0"))
                     (rule "add_zero_right" (formula "26") (term "0,2,1,0"))
                     (rule "applyEq" (formula "8") (term "0,1,0,1,1,0,1,0,0,0,0") (ifseqformula "15"))
                     (rule "times_zero_2" (formula "8") (term "1,0,1,1,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,1,1,0,1,0,0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "13"))
                     (rule "leq_literals" (formula "25") (term "0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "16"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "ifthenelse_split" (formula "7") (term "0"))
                     (branch "o_0 = x_arr_2 TRUE"
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "notRight" (formula "30"))
                        (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
                        (rule "close" (formula "28") (ifseqformula "1"))
                     )
                     (branch "o_0 = x_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "cut_direct" (formula "24") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "notRight" (formula "25"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
                  (branch "CUT: result_min = newLength FALSE"
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "19"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                     (rule "add_literals" (formula "21") (term "1,0"))
                     (rule "times_zero_1" (formula "21") (term "0"))
                     (rule "leq_literals" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_strengthen0" (formula "21") (ifseqformula "32"))
                     (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "qeq_literals" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "false_right" (formula "32"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                     (rule "mul_literals" (formula "26") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "26"))
                     (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0"))
                     (rule "qeq_literals" (formula "25") (term "0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                     (rule "times_zero_1" (formula "19") (term "0,0"))
                     (rule "add_zero_left" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "19"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "27"))
                     (rule "times_zero_1" (formula "19") (term "0,0"))
                     (rule "add_zero_left" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "leq_literals" (formula "19") (term "0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "19"))
                     (rule "leq_literals" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "24"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "18"))
                     (rule "times_zero_2" (formula "26") (term "1,1"))
                     (rule "add_zero_right" (formula "26") (term "1"))
                     (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                     (rule "qeq_literals" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "18"))
                     (rule "times_zero_2" (formula "26") (term "1,1"))
                     (rule "add_zero_right" (formula "26") (term "1"))
                     (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "18"))
                     (rule "times_zero_2" (formula "24") (term "1,1"))
                     (rule "add_zero_right" (formula "24") (term "1"))
                     (rule "applyEq" (formula "8") (term "0,1,0,1,1,0,1,0,0,0,0") (ifseqformula "18"))
                     (rule "times_zero_2" (formula "8") (term "1,0,1,1,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,1,1,0,1,0,0,0,0"))
                     (rule "applyEqRigid" (formula "27") (term "0,1,0,2,1,0") (ifseqformula "18"))
                     (rule "times_zero_2" (formula "27") (term "1,0,2,1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,2,1,0"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "18"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "17"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "19"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "15"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "ifthenelse_split" (formula "7") (term "0"))
                     (branch "o_0 = x_arr_2 TRUE"
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "notRight" (formula "30"))
                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
                        (rule "close" (formula "28") (ifseqformula "1"))
                     )
                     (branch "o_0 = x_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "cut_direct" (formula "24") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "notRight" (formula "25"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
            )
            (branch "Exceptional Post (arraycopy)"
                (builtin "One Step Simplification" (formula "15"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "expand_inInt" (formula "15") (term "1,0,0,0,1,1"))
               (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0,0,1,1"))
               (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,0,1,1"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "18"))
               (rule "notLeft" (formula "16"))
               (rule "close" (formula "19") (ifseqformula "18"))
            )
            (branch "Pre (arraycopy)"
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
               (rule "wellFormedStorePrimitive" (formula "17") (term "0,0,0,0,0,1"))
               (rule "expand_inInt" (formula "17") (term "1,1"))
               (rule "expand_inInt" (formula "17") (term "1,0,0,0,1"))
               (rule "expand_inInt" (formula "17") (term "1,0,1"))
               (rule "replace_int_MAX" (formula "17") (term "1,0,1,1"))
               (rule "replace_int_MIN" (formula "17") (term "0,1,1,1"))
               (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0,0,1"))
               (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,0,0,1"))
               (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,1"))
               (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,1"))
               (rule "leq_literals" (formula "17") (term "1,1,0,0,0,1"))
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "8")))
               (rule "leq_literals" (formula "17") (term "1,0,0,0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "leq_literals" (formula "17") (term "1,1,0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "leq_literals" (formula "17") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1"))
               (rule "replace_known_left" (formula "17") (term "1,1") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0"))
               (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0"))
               (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "1"))
               (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
               (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "wellFormedMemsetArrayPrimitive" (formula "17") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "17") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "17") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "17") (term "0,0,1"))
               (rule "wellFormedCreate" (formula "17") (term "0,0,1"))
               (rule "replace_known_left" (formula "17") (term "0,0,1") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "pullOutSelect" (formula "17") (term "0,0,1") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfMemset" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "18") (term "0,0,1") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "17") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
               (rule "simplifySelectOfMemset" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "17"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "1"))
               (rule "leq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "arrayLengthNotNegative" (formula "11") (term "0"))
               (rule "arrayLengthIsAnInt" (formula "12") (term "0"))
               (rule "expand_inInt" (formula "12"))
               (rule "replace_int_MIN" (formula "12") (term "0,1"))
               (rule "replace_int_MAX" (formula "12") (term "1,0"))
               (rule "andLeft" (formula "12"))
               (rule "inEqSimp_commuteLeq" (formula "13"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
               (rule "leq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
               (rule "polySimp_addComm0" (formula "13") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
               (rule "leq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "cut_direct" (formula "10") (term "0"))
               (branch "CUT: result_min = newLength TRUE"
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "10"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq0" (formula "14"))
                  (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,0"))
                  (rule "times_zero_1" (formula "14") (term "0"))
                  (rule "qeq_literals" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "closeFalse" (formula "8"))
               )
               (branch "CUT: result_min = newLength FALSE"
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "times_zero_1" (formula "13") (term "0"))
                  (rule "leq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_strengthen0" (formula "13") (ifseqformula "15"))
                  (rule "inEqSimp_contradEq3" (formula "15") (ifseqformula "13"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "false_right" (formula "15"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (min)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "8"))
            (rule "close" (formula "11") (ifseqformula "10"))
         )
         (branch "Pre (min)"
             (builtin "One Step Simplification" (formula "11"))
            (rule "wellFormedStorePrimitive" (formula "11") (term "0,0"))
            (rule "expand_inInt" (formula "11") (term "1"))
            (rule "expand_inInt" (formula "11") (term "1,0"))
            (rule "replace_int_MAX" (formula "11") (term "1,0,1"))
            (rule "replace_int_MIN" (formula "11") (term "0,1,1"))
            (rule "replace_int_MAX" (formula "11") (term "1,0,1,0"))
            (rule "replace_int_MIN" (formula "11") (term "0,1,1,0"))
            (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0"))
            (rule "inEqSimp_subsumption1" (formula "11") (term "1") (ifseqformula "7"))
            (rule "leq_literals" (formula "11") (term "0,1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "wellFormedMemsetArrayPrimitive" (formula "11") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "11") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "11") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "11") (term "0"))
            (rule "wellFormedCreate" (formula "11") (term "0"))
            (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "commute_and" (formula "11"))
            (rule "arrayLengthNotNegative" (formula "11") (term "0,0"))
            (rule "inEqSimp_subsumption1" (formula "12") (term "0") (ifseqformula "1"))
            (rule "leq_literals" (formula "12") (term "0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_leqRight" (formula "12"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
            (rule "leq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
            (rule "expand_inInt" (formula "1"))
            (rule "replace_int_MIN" (formula "1") (term "0,1"))
            (rule "replace_int_MAX" (formula "1") (term "1,0"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "Null Reference (_original = null)"
          (builtin "One Step Simplification" (formula "12"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (newObject = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
