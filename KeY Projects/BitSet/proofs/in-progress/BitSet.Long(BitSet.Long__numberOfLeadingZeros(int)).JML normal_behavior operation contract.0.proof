\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri May 12 09:14:34 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../";

\include "../../taclets/intSet.key",  "../../taclets/binaryAxiomsExtension.key",  "../../taclets/bitwiseOperations.key";

\proofObligation "#Proof Obligation Settings
#Fri May 12 09:14:34 CEST 2023
contract=BitSet.Long[BitSet.Long\\:\\:numberOfLeadingZeros(long)].JML normal_behavior operation contract.0
name=BitSet.Long[BitSet.Long\\:\\:numberOfLeadingZeros(long)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "christianhein" ) (keyVersion "208396f69e"))
(keyLog "1" (keyUser "christianhein" ) (keyVersion "208396f69e"))
(keyLog "2" (keyUser "christianhein" ) (keyVersion "208396f69e"))

(autoModeTime "246769")

(branch "dummy ID"
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0,1,1") (newnames "heapAtPre,o,f"))
(rule "expand_inLong" (formula "1") (term "1,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0,1,1"))
(rule "replace_long_MIN" (formula "1") (term "0,1,1,0,0"))
(rule "replace_long_MAX" (formula "1") (term "1,0,1,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "translateJavaSubInt" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "eqSymm" (formula "5") (term "0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,0,0,1"))
(rule "translateJavaAddInt" (formula "5") (term "1,1,0,1,1,1,0,0,0,1"))
(rule "bitAtDef" (formula "5") (term "0,1,0,0,1,0,0,0,1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "bitAtDef" (formula "5") (term "0,1,1,1,0,0,0,1"))
(rule "ifEqualsInteger" (formula "5") (term "1,1,1,0,0,0,1"))
(rule "equal_literals" (formula "5") (term "1,1,1,1,1,0,0,0,1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "expand_addJint" (formula "5") (term "1,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "0,1,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "expand_subJint" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "0,1,1,0,0,0,0,1,0,0,0,1"))
(rule "expand_addJint" (formula "5") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "0,1,0,0,1,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_numberOfLeadingZeros,savedHeapBefore_numberOfLeadingZeros"))
 (builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x"))
(rule "compound_int_cast_expression" (formula "5") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_1"))
(rule "remove_parentheses_right" (formula "5") (term "1"))
(rule "assignmentUnsignedShiftRightLong" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "translateJavaUnsignedShiftRightLong" (formula "5") (term "0,1,0"))
(rule "unsignedShiftRightJlongDef" (formula "5") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "5") (term "1,1,2,0,1,0"))
(rule "javaShiftRightLongDef" (formula "5") (term "1,0,1,0"))
(rule "javaShiftRightLongDef" (formula "5") (term "0,2,0,1,0"))
(rule "javaShiftLeftLongDef" (formula "5") (term "1,2,0,1,0"))
(rule "shiftRightDef" (formula "5") (term "0,1,0,1,0"))
(rule "polySimp_elimNeg" (formula "5") (term "1,1,0,1,0,1,0"))
(rule "shiftRightPositiveShiftDef" (formula "5") (term "2,0,1,0,1,0"))
(rule "shiftLeftPositiveShiftDef" (formula "5") (term "1,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,1,0"))
(rule "shiftRightDef" (formula "5") (term "0,0,2,0,1,0"))
(rule "polySimp_elimNeg" (formula "5") (term "1,1,0,0,2,0,1,0"))
(rule "shiftRightPositiveShiftDef" (formula "5") (term "2,0,0,2,0,1,0"))
(rule "shiftLeftPositiveShiftDef" (formula "5") (term "1,0,0,2,0,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,2,0,1,0"))
(rule "shiftLeftDef" (formula "5") (term "0,1,2,0,1,0"))
(rule "polySimp_elimNeg" (formula "5") (term "1,1,0,1,2,0,1,0"))
(rule "shiftLeftPositiveShiftDef" (formula "5") (term "2,0,1,2,0,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "2,0,1,2,0,1,0"))
(rule "shiftRightPositiveShiftDef" (formula "5") (term "1,0,1,2,0,1,0"))
(rule "narrowingIntCastLong" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "translateJavaCastInt" (formula "5") (term "0,1,0"))
(rule "returnUnfold" (formula "5") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
(rule "condition" (formula "5") (term "1"))
(rule "ifElseUnfold" (formula "5") (term "1") (inst "#boolv=x_3"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_3"))
(rule "equality_comparison_simple" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "ifElseSplit" (formula "5"))
(branch "if x_3 true"
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "compound_addition_2" (formula "6") (term "1") (inst "#v0=x_3") (inst "#v1=x_4"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_5"))
   (rule "assignment" (formula "6") (term "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_4"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "6") (term "1"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "var"))
   (rule "narrowingIntCastLong" (formula "6") (term "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "translateJavaCastInt" (formula "6") (term "0,1,0"))
    (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_numberOfLeadingZeros_0,result_numberOfLeadingZeros_0,exc_0") (contract "BitSet.Integer[BitSet.Integer::numberOfLeadingZeros(int)].JML normal_behavior operation contract.0"))
   (branch "Post (numberOfLeadingZeros)"
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "10"))
      (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,0"))
      (rule "translateJavaSubInt" (formula "11") (term "1,0,1"))
      (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
      (rule "bitAtDef" (formula "10") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "bitAtDef" (formula "11") (term "0,1"))
      (rule "ifEqualsInteger" (formula "11") (term "1"))
      (rule "equal_literals" (formula "11") (term "1,1,1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "blockEmpty" (formula "12") (term "1"))
      (rule "commute_and_2" (formula "10") (term "0,0"))
      (rule "commute_and" (formula "10") (term "0,0,0"))
      (rule "assignmentAdditionInt" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "translateJavaAddInt" (formula "12") (term "0,1,0"))
      (rule "blockEmpty" (formula "12") (term "1"))
      (rule "methodCallReturn" (formula "12") (term "1"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "tryEmpty" (formula "12") (term "1"))
      (rule "emptyModality" (formula "12") (term "1"))
      (rule "andRight" (formula "12"))
      (branch "Case 1"
         (rule "andRight" (formula "12"))
         (branch "Case 1"
            (rule "andRight" (formula "12"))
            (branch "Case 1"
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "expand_inInt" (formula "7"))
                  (rule "expand_inInt" (formula "10") (term "0,0,0,0"))
                  (rule "replace_int_MAX" (formula "7") (term "1,0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,1"))
                  (rule "replace_int_MAX" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,0,0"))
                  (rule "andLeft" (formula "7"))
                  (rule "inEqSimp_geqRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,2,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,2,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,2,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9"))
                  (rule "mod_axiom" (formula "2") (term "1,1,2,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,0,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,1,2,0,0,2,0,0"))
                  (rule "pow_literals" (formula "2") (term "1,2,0,0,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,1,1,1,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,2,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,1,0,2,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,1,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0,0"))
                  (rule "pow_literals" (formula "2") (term "0,1,0,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,1,2,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,1,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,1,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,1,2,0,1,0,0"))
                  (rule "pow_literals" (formula "2") (term "1,2,0,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,0,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,0,0"))
                  (rule "pow_literals" (formula "2") (term "0,1,0,0,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,1,0,0,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,0,0,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,2,0,0"))
                  (rule "leq_literals" (formula "2") (term "0,0,0,2,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "pow_literals" (formula "2") (term "0,1,0,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,2,0,0"))
                  (rule "leq_literals" (formula "2") (term "0,0,1,2,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "pow_literals" (formula "2") (term "0,1,0,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,1,2,0,0"))
                  (rule "pow_literals" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,1,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,1,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "leq_literals" (formula "2") (term "0,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                  (rule "leq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "10"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                  (rule "expand_subJint" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,1,0"))
                  (rule "expand_subJint" (formula "11") (term "0,0,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0,0,1"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,1"))
                  (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                  (rule "expand_moduloLong" (formula "2") (term "1,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,1,0,0"))
                  (rule "expand_addJlong" (formula "2") (term "2,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,2,0,0"))
                  (rule "expand_addJint" (formula "1") (term "0"))
                  (rule "expand_addJint" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,0,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,0,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                  (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                  (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                  (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                  (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                  (rule "expand_moduloLong" (formula "2") (term "1,0,2,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,1,0,2,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,2,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,2,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,2,0,0"))
                  (rule "expand_moduloInteger" (formula "1") (term "0"))
                  (rule "replace_int_MIN" (formula "1") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "mod_axiom" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                  (rule "expand_moduloLong" (formula "2") (term "2,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,2,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,2,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,2,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,2,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,1,2,0,0"))
                  (rule "polyMod_pullOut" (formula "2") (term "1,2,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,2,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,2,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "expand_addJint" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                  (rule "polyMod_pullOut" (formula "11") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,1,1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "expand_moduloLong" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,1,2,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,1,2,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,1,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,1,1,0,1,2,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,2,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,1,2,0,0"))
                  (rule "polyMod_pullOut" (formula "2") (term "1,2,0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,2,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                  (rule "expand_addJint" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "2") (term "0"))
                  (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "2") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,1,1,0,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,1,1,0,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,1,0,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,1,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,1,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,0,0,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,0,0,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                  (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,0,1,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "1,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,1,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,1,0,1"))
                  (rule "add_zero_right" (formula "11") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,1,0,1"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "10") (term "0,0"))
                  (rule "add_zero_left" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "11"))
                  (rule "times_zero_1" (formula "2") (term "1,1,0"))
                  (rule "greater_literals" (formula "2") (term "0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "expand_inInt" (formula "7"))
                  (rule "expand_inInt" (formula "10") (term "0,0,0,0"))
                  (rule "replace_int_MAX" (formula "7") (term "1,0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,1"))
                  (rule "replace_int_MAX" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,0,0"))
                  (rule "andLeft" (formula "7"))
                  (rule "inEqSimp_leqRight" (formula "13"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,2,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,2,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,2,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,2,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,1,1,1,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,1,2,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,1,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,1,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,1,2,0,1,0,0"))
                  (rule "pow_literals" (formula "2") (term "1,2,0,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,2,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,1,0,2,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,1,2,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,0,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,1,2,0,0,2,0,0"))
                  (rule "pow_literals" (formula "2") (term "1,2,0,0,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,0,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,0,0"))
                  (rule "pow_literals" (formula "2") (term "0,1,0,0,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,1,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0,0"))
                  (rule "pow_literals" (formula "2") (term "0,1,0,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,1,0,0,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,1,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,1,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "leq_literals" (formula "2") (term "0,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "pow_literals" (formula "2") (term "0,1,0,0,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,1,1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,1,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,1,1,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,1,1,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,1,1,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,0,1,2,0,0"))
                  (rule "pow_literals" (formula "2") (term "1,1,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,2,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,2,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,2,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,2,0,1,2,0,0"))
                  (rule "pow_literals" (formula "2") (term "0,2,0,1,2,0,0"))
                  (rule "mul_literals" (formula "2") (term "2,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,0,0,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,2,0,0"))
                  (rule "leq_literals" (formula "2") (term "0,0,0,2,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "pow_literals" (formula "2") (term "1,1,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,0,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,2,0,0"))
                  (rule "leq_literals" (formula "2") (term "0,0,1,2,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "11"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,1"))
                  (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                  (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,1,0"))
                  (rule "expand_subJint" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "expand_subJint" (formula "11") (term "0,0,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0,0,1"))
                  (rule "expand_moduloLong" (formula "2") (term "0,2,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,0,2,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0,2,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,0,2,0,0"))
                  (rule "expand_moduloLong" (formula "2") (term "1,2,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,1,2,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,2,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,1,1,2,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,0"))
                  (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,1,2,0,0"))
                  (rule "add_literals" (formula "2") (term "1,2,0,0"))
                  (rule "expand_moduloLong" (formula "2") (term "1,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,1,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,0"))
                  (rule "expand_addJint" (formula "1") (term "0"))
                  (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                  (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                  (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                  (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                  (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                  (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "expand_addJlong" (formula "2") (term "2,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,2,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0,0"))
                  (rule "expand_moduloInteger" (formula "1") (term "0"))
                  (rule "replace_int_MIN" (formula "1") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "mod_axiom" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "expand_addJint" (formula "11") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,0,1"))
                  (rule "expand_addJint" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "expand_moduloInteger" (formula "2") (term "0"))
                  (rule "replace_int_MIN" (formula "2") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,0,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,0,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "expand_moduloLong" (formula "2") (term "2,1,0,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,2,1,0,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,2,1,0,0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,2,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,1,2,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,1,2,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,2,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,2,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,2,1,0,0"))
                  (rule "polyMod_pullOut" (formula "2") (term "1,2,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,2,1,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,1,2,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,1,2,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,2,1,0,0"))
                  (rule "polyMod_pullOut" (formula "2") (term "1,2,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,2,1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,2,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,1,2,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,0,0,1,1,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,0,0,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,0,0,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,1,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,1,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,1,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,1,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,0,1,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "expand_addJint" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,0,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,0,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,0,1,0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "1,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,1,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,1,0,1"))
                  (rule "add_zero_right" (formula "11") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,1,0,1"))
                  (rule "expand_moduloInteger" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,1,1,0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,0,0,1,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,0,0,1,1,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,1,1,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                  (rule "shift_paren_or" (formula "10") (term "0"))
                  (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "10") (term "0,0"))
                  (rule "add_zero_left" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "inEqSimp_contradInEq5" (formula "3") (ifseqformula "11"))
                  (rule "mul_literals" (formula "3") (term "1,1,0"))
                  (rule "greater_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "allRight" (formula "12") (inst "sk=index_0"))
                  (rule "impRight" (formula "12"))
                  (rule "orRight" (formula "13"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "1"))
                  (rule "cut_direct" (formula "5") (term "0,0,1,0,0") (userinteraction))
                  (branch "CUT: 32 % 64 < 0 TRUE"
                      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
                     (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "12"))
                     (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "12") (term "1,0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,1"))
                     (rule "notRight" (formula "17"))
                     (rule "andLeft" (formula "13"))
                     (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,0,0,1,2,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14"))
                     (rule "mod_axiom" (formula "7") (term "0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "div_literals" (formula "7") (term "0,1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "7") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,1,0,2,0,1,2,0,0"))
                     (rule "add_literals" (formula "7") (term "0,1,0,2,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "7") (term "0,1,0,0,0,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,2,0,0"))
                     (rule "div_literals" (formula "7") (term "0,1,0,1,0,0,0,2,0,0"))
                     (rule "times_zero_2" (formula "7") (term "1,0,1,0,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,2,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0,2,0,0"))
                     (rule "pow_literals" (formula "7") (term "0,0,0,2,0,0"))
                     (rule "mod_axiom" (formula "7") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "div_literals" (formula "7") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "7") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,1,1,1,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "7") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0,0"))
                     (rule "div_literals" (formula "7") (term "0,1,0,1,0,0,1,0,0"))
                     (rule "times_zero_2" (formula "7") (term "1,0,1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "pow_literals" (formula "7") (term "0,0,1,0,0"))
                     (rule "mod_axiom" (formula "6") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                     (rule "div_literals" (formula "6") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "6") (term "1,1,0"))
                     (rule "add_zero_right" (formula "6") (term "1,0"))
                     (rule "add_literals" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch "CUT: 32 % 64 < 0 FALSE"
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "16")))
                     (rule "cut" (inst "cutFormula=(mod(Z(2(3(#))), Z(4(6(#)))) = Z(2(3(#))))<<origin(\"User_Interaction @ node 87900 (cut)\",\"[]\")>>") (userinteraction))
                     (branch "CUT: 32 % 64 = 32 TRUE"
                        (rule "applyEqRigid" (formula "6") (term "1,1,0,0,2,0,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "6") (term "0,1,0,0,0,0,1,2,0,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "6") (term "0,1,0,0,1,1,1,0,1,2,0,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "6") (term "0,1,0,1,0,2,0,1,2,0,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "6") (term "1,1,0,1,0,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "1") (userinteraction))
                        (rule "pow_literals" (formula "6") (term "1,0,1,0,0"))
                        (rule "pow_literals" (formula "6") (term "1,0,0,2,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,0,1,0,2,0,1,2,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0,1,2,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,1,1,1,0,1,2,0,0"))
                        (rule "add_literals" (formula "6") (term "0,1,0,2,0,1,2,0,0"))
                        (rule "times_minus_one_1" (formula "6") (term "1,1,1,0,1,2,0,0"))
                        (rule "cut" (inst "cutFormula=(mod(Z(1(3(#))), Z(4(6(#)))) = Z(1(3(#))))<<origin(\"User_Interaction @ node 87969 (cut)\",\"[]\")>>") (userinteraction))
                        (branch "CUT: 31 % 64 = 31 TRUE"
                           (rule "applyEqRigid" (formula "7") (term "0,1,1,1,0,1,2,0,0") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "7") (term "1,0,2,0,1,2,0,0") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "7") (term "0,0,0,1,2,0,0") (ifseqformula "1") (userinteraction))
                           (rule "less_literals" (formula "18"))
                           (rule "less_literals" (formula "7") (term "0,0,1,2,0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "pow_literals" (formula "7") (term "0,0,1,2,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,2,0,0"))
                           (rule "times_minus_one_1" (formula "4") (term "1,0,1"))
                           (rule "ifthenelse_split" (formula "7") (term "0,0") (userinteraction))
                           (branch "i ≥ 0 TRUE"
                              (rule "eqTermCut" (formula "8") (term "0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                              (branch "Assume moduloInt(moduloLong(i / 4294967296)) = i / 4294967296"
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "8") (userinteraction))
                                 (rule "cut" (inst "cutFormula=lt(i<<origin(\"User_Interaction @ node 116123 (cut)\",\"[]\")>>,
   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))<<origin(\"User_Interaction @ node 116123 (cut)\",\"[]\")>>") (userinteraction))
                                 (branch "CUT: i < 4294967296 TRUE"
                                    (rule "hide_left" (formula "2") (userinteraction))
                                    (rule "hide_left" (formula "2") (userinteraction))
                                    (rule "eqTermCut" (formula "3") (term "1") (inst "s=sub(Z(4(6(#))),
    add(Z(2(3(#))), result_numberOfLeadingZeros_0))") (userinteraction))
                                    (branch "Assume moduloInt( 64 + -addJint(32, result_numberOfLeadingZeros_0)) = 64 - (32 + result_numberOfLeadingZeros_0)"
                                       (rule "applyEq" (formula "4") (term "1") (ifseqformula "3") (userinteraction))
                                       (rule "eqTermCut" (formula "19") (term "1,1,0,0,1,1") (inst "s=sub(Z(2(3(#))),
    add(result_numberOfLeadingZeros_0, Z(1(#))))") (userinteraction))
                                       (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) = 32 - (result_numberOfLeadingZeros_0 + 1)"
                                          (rule "applyEq" (formula "20") (term "1,1,0,0,1,1") (ifseqformula "19") (userinteraction))
                                          (rule "applyEq" (formula "20") (term "0,0,1") (ifseqformula "19") (userinteraction))
                                          (rule "hide_left" (formula "19") (userinteraction))
                                          (rule "hide_left" (formula "3") (userinteraction))
                                          (rule "hide_left" (formula "5") (userinteraction))
                                          (rule "notRight" (formula "19") (userinteraction))
                                          (rule "false_right" (formula "19") (userinteraction))
                                          (rule "eqTermCut" (formula "17") (term "1,1,0,0") (inst "s=sub(Z(2(3(#))), result_numberOfLeadingZeros_0)") (userinteraction))
                                          (branch "Assume subJint(32, result_numberOfLeadingZeros_0) = 32 - result_numberOfLeadingZeros_0"
                                             (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "17") (userinteraction))
                                             (rule "hide_left" (formula "17") (userinteraction))
                                             (rule "hide_left" (formula "14") (userinteraction))
                                             (rule "hide_left" (formula "13") (userinteraction))
                                             (rule "hide_left" (formula "10") (userinteraction))
                                             (rule "hide_left" (formula "10") (userinteraction))
                                             (rule "hide_left" (formula "7") (userinteraction))
                                             (rule "hide_left" (formula "7") (userinteraction))
                                             (rule "hide_left" (formula "7") (userinteraction))
                                             (rule "hide_left" (formula "7") (userinteraction))
                                              (opengoal " ")
                                          )
                                          (branch "Assume subJint(32, result_numberOfLeadingZeros_0) != 32 - result_numberOfLeadingZeros_0"
                                             (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                             (rule "expand_inInt" (formula "14"))
                                             (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                             (rule "replace_int_MAX" (formula "14") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,1"))
                                             (rule "notLeft" (formula "17"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "polySimp_elimSub" (formula "19") (term "0,0,1"))
                                             (rule "polySimp_elimSub" (formula "4") (term "1"))
                                             (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_elimSub" (formula "20") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "19") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                                             (rule "mul_literals" (formula "4") (term "0,1,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                             (rule "add_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "19") (term "0,1,1,0,0,1,1"))
                                             (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_notGeq" (formula "13") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                                             (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "expand_moduloInteger" (formula "14") (term "0,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,0,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,0,1,1"))
                                             (rule "mod_axiom" (formula "14") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,1"))
                                             (rule "expand_subJint" (formula "15") (term "0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                             (rule "expand_moduloLong" (formula "6") (term "0,0"))
                                             (rule "replace_long_MIN" (formula "6") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                             (rule "replace_long_RANGE" (formula "6") (term "1,1,0,0"))
                                             (rule "replace_long_HALFRANGE" (formula "6") (term "0,1,0,0"))
                                             (rule "mod_axiom" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                             (rule "div_literals" (formula "6") (term "0,1,1,0,0"))
                                             (rule "times_zero_2" (formula "6") (term "1,1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "1,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "15") (term "0"))
                                             (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "15") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "15") (term "0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0"))
                                             (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "add_zero_left" (formula "15") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,1"))
                                             (rule "add_literals" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "leq_literals" (formula "15") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "times_zero_1" (formula "15") (term "0,0"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "15") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1"))
                                             (rule "expand_moduloInteger" (formula "6") (term "0"))
                                             (rule "replace_int_MIN" (formula "6") (term "0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,1,0"))
                                             (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "6") (term "0,1,0"))
                                             (rule "mod_axiom" (formula "6") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                             (rule "div_literals" (formula "6") (term "0,1,1,0"))
                                             (rule "times_zero_2" (formula "6") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "6") (term "1,0"))
                                             (rule "add_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "nnf_imp2or" (formula "12") (term "0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "div_axiom" (formula "6") (term "0") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "6") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "equal_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "8") (term "1"))
                                             (rule "add_literals" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                                             (rule "eqSymm" (formula "6"))
                                             (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "6"))
                                             (rule "times_zero_2" (formula "7") (term "1"))
                                             (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "6"))
                                             (rule "times_zero_2" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "div_axiom" (formula "16") (term "0,0") (inst "quotient=quotient_1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                             (rule "shift_paren_or" (formula "14") (term "0"))
                                             (rule "commute_or_2" (formula "14") (term "0,0"))
                                             (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "14") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "cut_direct" (formula "15") (term "0,0"))
                                             (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "applyEq" (formula "12") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "13"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                                (rule "div_literals" (formula "12") (term "0,1,1,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "13"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "div_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "closeTrue" (formula "14"))
                                             )
                                             (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "15"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "qeq_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "false_right" (formula "17"))
                                                (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "commute_and" (formula "1") (term "0,1"))
                                                (rule "commute_or" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                (rule "inEqSimp_or_subsumption3" (formula "13") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "13") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_2"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addComm1" (formula "16") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "15") (term "0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "15") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0"))
                                                (rule "qeq_literals" (formula "15") (term "0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_strengthen0" (formula "15") (ifseqformula "20"))
                                                (rule "add_literals" (formula "15") (term "1"))
                                                (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "15"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "16"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "greater_literals" (formula "3") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                       )
                                       (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) != 32 - (result_numberOfLeadingZeros_0 + 1)"
                                          (rule "false_right" (formula "21"))
                                          (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                          (rule "expand_inInt" (formula "15"))
                                          (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                          (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "notRight" (formula "21"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "polySimp_elimSub" (formula "5") (term "1"))
                                          (rule "polySimp_elimSub" (formula "22") (term "1"))
                                          (rule "polySimp_elimSub" (formula "4") (term "0"))
                                          (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                          (rule "polySimp_homoEq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                          (rule "add_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                          (rule "add_literals" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                          (rule "polySimp_sepPosMonomial" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,1,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,1,0"))
                                          (rule "expand_subJint" (formula "15") (term "0,0,1"))
                                          (rule "polySimp_elimSub" (formula "15") (term "0,0,0,1"))
                                          (rule "expand_subJint" (formula "15") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0,1,1"))
                                          (rule "expand_moduloInteger" (formula "15") (term "0,0,0,1,1"))
                                          (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,0,0,1,1"))
                                          (rule "replace_int_MIN" (formula "15") (term "0,0,0,0,1,1"))
                                          (rule "replace_int_RANGE" (formula "15") (term "1,1,0,0,0,1,1"))
                                          (rule "mod_axiom" (formula "15") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,0,0,1,1"))
                                          (rule "expand_subJint" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "14") (term "0,0,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,0,0,0,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "14") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,1,0"))
                                          (rule "expand_subJint" (formula "16") (term "0"))
                                          (rule "polySimp_elimSub" (formula "16") (term "0,0"))
                                          (rule "expand_moduloLong" (formula "7") (term "0,0"))
                                          (rule "replace_long_MIN" (formula "7") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
                                          (rule "replace_long_RANGE" (formula "7") (term "1,1,0,0"))
                                          (rule "replace_long_HALFRANGE" (formula "7") (term "0,1,0,0"))
                                          (rule "mod_axiom" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "div_literals" (formula "7") (term "0,1,1,0,0"))
                                          (rule "times_zero_2" (formula "7") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "1,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "expand_moduloInteger" (formula "4") (term "0"))
                                          (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                          (rule "mul_literals" (formula "4") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0"))
                                          (rule "equal_literals" (formula "4") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0"))
                                          (rule "mul_literals" (formula "4") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "newSym_eq" (formula "4") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(result_numberOfLeadingZeros_0, Z(0(#)))),
    mul(addJint(Z(2(3(#))),
                result_numberOfLeadingZeros_0),
        Z(0(#))))") (inst "l=l_0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,1"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,1,1"))
                                          (rule "add_zero_right" (formula "4") (term "0,1,1"))
                                          (rule "add_zero_right" (formula "4") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1"))
                                          (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                                          (rule "polySimp_homoEq" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "5"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "equal_literals" (formula "4") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "expand_moduloInteger" (formula "16") (term "0,0,1"))
                                          (rule "replace_int_MIN" (formula "16") (term "0,0,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,0,1"))
                                          (rule "replace_int_RANGE" (formula "16") (term "1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0,0,1"))
                                          (rule "mod_axiom" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                                          (rule "polyDiv_pullOut" (formula "16") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0,0,0,1"))
                                          (rule "equal_literals" (formula "16") (term "0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                                          (rule "expand_moduloInteger" (formula "15") (term "1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "15") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                          (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "17") (term "0"))
                                          (rule "replace_int_MIN" (formula "17") (term "0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0"))
                                          (rule "replace_int_RANGE" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_homoEq" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,1"))
                                          (rule "polyDiv_pullOut" (formula "17") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0,0"))
                                          (rule "equal_literals" (formula "17") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "0"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "expand_moduloInteger" (formula "8") (term "0"))
                                          (rule "replace_int_RANGE" (formula "8") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,1,0"))
                                          (rule "replace_int_MIN" (formula "8") (term "0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "8") (term "0,1,0"))
                                          (rule "mod_axiom" (formula "8") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                          (rule "div_literals" (formula "8") (term "0,1,1,0"))
                                          (rule "times_zero_2" (formula "8") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "1,0"))
                                          (rule "add_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "expand_addJint" (formula "5") (term "0"))
                                          (rule "expand_addJint" (formula "15") (term "0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,1,1,0,0,1,1"))
                                          (rule "expand_addJint" (formula "15") (term "0,1,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "15") (term "0,0,1,1,0,1"))
                                          (rule "expand_addJint" (formula "15") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0,0,0,1"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "expand_addJint" (formula "16") (term "0,1,1"))
                                          (rule "polySimp_addComm0" (formula "16") (term "0,0,1,1"))
                                          (rule "expand_addJint" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "expand_moduloInteger" (formula "5") (term "0"))
                                          (rule "replace_int_MIN" (formula "5") (term "0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                                          (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                                          (rule "polySimp_homoEq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "mod_axiom" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                          (rule "elimGcdEq" (formula "5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=l_0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "add_literals" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1"))
                                          (rule "add_literals" (formula "5") (term "1,0,0,1"))
                                          (rule "times_zero_1" (formula "5") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "5") (term "0,1,0"))
                                          (rule "add_literals" (formula "5") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "0,1,0"))
                                          (rule "qeq_literals" (formula "5") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "0,0"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "polyDiv_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "5") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,1,1,1,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "expand_moduloInteger" (formula "15") (term "0,1,0,1,1,0,0,1,1"))
                                          (rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                          (rule "replace_int_MIN" (formula "15") (term "0,0,1,0,1,1,0,0,1,1"))
                                          (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,0,0,1,1"))
                                          (rule "mod_axiom" (formula "15") (term "0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,1,0,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0,1,1"))
                                          (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "15") (term "0,0,1,0,1,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0,1,1"))
                                          (rule "expand_moduloInteger" (formula "16") (term "0,1,1"))
                                          (rule "replace_int_MIN" (formula "16") (term "0,0,1,1"))
                                          (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,1"))
                                          (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                          (rule "polySimp_homoEq" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "mod_axiom" (formula "16") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "elimGcdEq" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(6(1(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(moduloInt(add(Z(1(#)),
                          result_numberOfLeadingZeros_0)),
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "16") (term "0,1,0"))
                                          (rule "add_literals" (formula "16") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "16") (term "0,1,0"))
                                          (rule "qeq_literals" (formula "16") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "0,0"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "polyDiv_pullOut" (formula "16") (term "1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "16") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,1"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,1,1,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                          (rule "add_literals" (formula "16") (term "0,1"))
                                          (rule "add_zero_left" (formula "16") (term "1"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "15") (term "0,1,0,0,0,0,1"))
                                          (rule "replace_int_MIN" (formula "15") (term "0,0,1,0,0,0,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,0,0,0,0,1"))
                                          (rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,1"))
                                          (rule "mod_axiom" (formula "15") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,0,1"))
                                          (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "equal_literals" (formula "15") (term "0,0,1,1,0,1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,1,0,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,1,0,1"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "1,0,1"))
                                          (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "15") (term "0,0,1,0,1,0,1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,1,0,1"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0,1,0,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,0,1"))
                                          (rule "div_axiom" (formula "17") (term "0,0") (inst "quotient=quotient_0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                          (rule "div_axiom" (formula "9") (term "0") (inst "quotient=quotient_1"))
                                          (rule "mul_literals" (formula "9") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "9") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "equal_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "polySimp_addComm1" (formula "11") (term "1"))
                                          (rule "add_literals" (formula "11") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "9"))
                                          (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "9"))
                                          (rule "times_zero_2" (formula "10") (term "1"))
                                          (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "9"))
                                          (rule "times_zero_2" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1"))
                                          (rule "expand_moduloInteger" (formula "18") (term "0,1,0,0"))
                                          (rule "replace_int_MIN" (formula "18") (term "0,0,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,0,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "18") (term "1,1,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "18") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                          (rule "polyDiv_pullOut" (formula "18") (term "0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "equal_literals" (formula "18") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_homoEq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "18") (term "0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,2,0,0,1"))
                                          (rule "equal_literals" (formula "18") (term "0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,1,1,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "18") (term "1"))
                                          (rule "add_literals" (formula "18") (term "1,1,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,1"))
                                          (rule "add_zero_right" (formula "18") (term "1"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "expand_moduloInteger" (formula "17") (term "1,1,0,0,1,1"))
                                          (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0,1,1"))
                                          (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,1,0,0,1,1"))
                                          (rule "replace_int_RANGE" (formula "17") (term "1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,1,1,0,0,1,1"))
                                          (rule "polyMod_pullOut" (formula "17") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,1,1,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,1,1,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                          (rule "mod_axiom" (formula "17") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,1,1"))
                                          (rule "polyDiv_pullOut" (formula "17") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                          (rule "equal_literals" (formula "17") (term "0,0,1,1,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,1,1"))
                                          (rule "div_axiom" (formula "5") (term "0") (inst "quotient=quotient_2"))
                                          (rule "mul_literals" (formula "5") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "5") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "equal_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "1"))
                                          (rule "add_literals" (formula "7") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "applyEq" (formula "5") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "18"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "expand_moduloInteger" (formula "18") (term "0,0,1"))
                                          (rule "replace_int_RANGE" (formula "18") (term "1,1,0,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "18") (term "0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0,1"))
                                          (rule "mod_axiom" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,0,1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                          (rule "polyDiv_pullOut" (formula "18") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "18") (term "0,0,1,0,1,0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0,1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,1,1,0,1,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,1,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "18") (term "1,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,1,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,1,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "1,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,1,0,1"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "div_axiom" (formula "17") (term "0,1,0,0,0,1,1,0") (inst "quotient=quotient_3"))
                                          (rule "mul_literals" (formula "17") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "17") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "equal_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                          (rule "add_literals" (formula "19") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "1"))
                                          (rule "add_literals" (formula "19") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,1,0") (ifseqformula "17"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,1") (ifseqformula "17"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "19"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(0(#))"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "3"))
                                          (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "div_axiom" (formula "7") (term "0") (inst "quotient=quotient_4"))
                                          (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
                                          (rule "equal_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "qeq_literals" (formula "7") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                          (rule "add_literals" (formula "9") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "9") (term "1"))
                                          (rule "add_literals" (formula "9") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "7"))
                                          (rule "polySimp_homoEq" (formula "10"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "mul_literals" (formula "9") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "9"))
                                          (rule "times_zero_1" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1"))
                                          (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "10") (term "1,1"))
                                          (rule "add_literals" (formula "10") (term "1"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "20"))
                                          (rule "mul_literals" (formula "11") (term "1,1"))
                                          (rule "add_literals" (formula "11") (term "1"))
                                          (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "20"))
                                          (rule "mul_literals" (formula "8") (term "1,1"))
                                          (rule "add_literals" (formula "8") (term "1"))
                                          (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "20"))
                                          (rule "add_literals" (formula "10") (term "1"))
                                          (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "commute_and" (formula "1") (term "0,1"))
                                          (rule "shift_paren_or" (formula "24") (term "0"))
                                          (rule "ifthenelse_split_for" (formula "1") (term "1,1"))
                                          (branch "pow(2, index_0) ≥ 0 TRUE"
                                             (rule "div_axiom" (formula "27") (term "0") (inst "quotient=quotient_5"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "29") (term "0,0,0,1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                                             (rule "applyEq" (formula "29") (term "0,1,1,1,0,0,1,1") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "29") (term "1,1,0,0,1,1"))
                                             (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "3") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "32"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "3"))
                                             (rule "add_zero_left" (formula "32") (term "0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0"))
                                             (rule "leq_literals" (formula "32") (term "0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "false_right" (formula "32"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "24") (term "0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "inEqSimp_contradInEq5" (formula "24") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "24") (term "1,1,0"))
                                             (rule "greater_literals" (formula "24") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "qeq_literals" (formula "24") (term "0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "pow(2, index_0) ≥ 0 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "26"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "powPositiveConcrete" (formula "1"))
                                             (rule "qeq_literals" (formula "27") (term "1"))
                                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "3")))
                                             (rule "closeTrue" (formula "27"))
                                          )
                                       )
                                    )
                                    (branch "Assume moduloInt( 64 + -addJint(32, result_numberOfLeadingZeros_0)) != 64 - (32 + result_numberOfLeadingZeros_0)"
                                       (rule "false_right" (formula "20"))
                                       (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "15"))
                                       (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                       (rule "notRight" (formula "20"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "eqSymm" (formula "21"))
                                       (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                       (rule "polySimp_elimNeg" (formula "21") (term "1,0,1"))
                                       (rule "polySimp_elimSub" (formula "21") (term "0"))
                                       (rule "polySimp_homoEq" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "1,0"))
                                       (rule "add_literals" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "inEqSimp_commuteGeq" (formula "4"))
                                       (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                       (rule "polySimp_sepPosMonomial" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "0,1,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                                       (rule "expand_addJint" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0,1"))
                                       (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1,0"))
                                       (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1,0"))
                                       (rule "expand_moduloInteger" (formula "14") (term "0,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,0,0,0,1,1"))
                                       (rule "mod_axiom" (formula "14") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,1"))
                                       (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                       (rule "expand_subJint" (formula "14") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0,1,1"))
                                       (rule "expand_addJint" (formula "4") (term "0,1,0,0"))
                                       (rule "expand_moduloInteger" (formula "6") (term "0"))
                                       (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "newSym_eq" (formula "6") (inst "newSymDef=mul(moduloLong(Z(0(#))), Z(0(#)))") (inst "l=l_0"))
                                       (rule "times_zero_1" (formula "6") (term "1,1"))
                                       (rule "add_zero_right" (formula "6") (term "1"))
                                       (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "applyEqRigid" (formula "6") (term "1,0,0") (ifseqformula "7"))
                                       (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_homoEq" (formula "6"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,1,0"))
                                       (rule "div_literals" (formula "6") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,0"))
                                       (rule "times_zero_1" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "expand_addJint" (formula "15") (term "0,1,0,0"))
                                       (rule "expand_subJint" (formula "14") (term "0,0,1"))
                                       (rule "polySimp_elimSub" (formula "14") (term "0,0,0,1"))
                                       (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                       (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                       (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0"))
                                       (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                       (rule "expand_moduloInteger" (formula "14") (term "1,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "mod_axiom" (formula "14") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                       (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "4") (term "0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "4") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polyDiv_pullOut" (formula "4") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,1,0,0"))
                                       (rule "equal_literals" (formula "4") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "expand_moduloLong" (formula "6") (term "0"))
                                       (rule "replace_long_RANGE" (formula "6") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0"))
                                       (rule "replace_long_MIN" (formula "6") (term "0,0"))
                                       (rule "replace_long_HALFRANGE" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_homoEq" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                       (rule "mod_axiom" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "6") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "elimGcdEq" (formula "6") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1"))
                                       (rule "add_literals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "times_zero_1" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "expand_moduloInteger" (formula "15") (term "0"))
                                       (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1"))
                                       (rule "polyDiv_pullOut" (formula "15") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "15") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0"))
                                       (rule "mul_literals" (formula "15") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,0,1"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,0,1"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                       (rule "mod_axiom" (formula "14") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1"))
                                       (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,0,0,0,1"))
                                       (rule "equal_literals" (formula "14") (term "0,0,1,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1"))
                                       (rule "expand_moduloInteger" (formula "4") (term "0"))
                                       (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "polyMod_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(6(1(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "mod_axiom" (formula "4") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                       (rule "mul_literals" (formula "4") (term "0,0,1"))
                                       (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "4") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0"))
                                       (rule "mul_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "expand_moduloInteger" (formula "15") (term "0,1,1"))
                                       (rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,1"))
                                       (rule "replace_int_MIN" (formula "15") (term "0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,1"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                       (rule "polySimp_homoEq" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(4(8(5(3(8(4(7(4(1(2(#)))))))))))),
        mul(moduloInt(add(Z(2(3(#))),
                          result_numberOfLeadingZeros_0)),
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "15") (term "0,1,0"))
                                       (rule "add_literals" (formula "15") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "0,1,0"))
                                       (rule "qeq_literals" (formula "15") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1"))
                                       (rule "add_literals" (formula "15") (term "1,0,0,1"))
                                       (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polyDiv_pullOut" (formula "15") (term "1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "15") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                       (rule "add_literals" (formula "15") (term "0,1"))
                                       (rule "add_zero_left" (formula "15") (term "1"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,1,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,1,1,0,0"))
                                       (rule "expand_addJint" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "14") (term "0,0,1"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,1"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1"))
                                       (rule "mul_literals" (formula "14") (term "1,0,1"))
                                       (rule "polyMod_pullOut" (formula "14") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1"))
                                       (rule "mod_axiom" (formula "14") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                       (rule "polyDiv_pullOut" (formula "14") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                       (rule "equal_literals" (formula "14") (term "0,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1"))
                                       (rule "expand_moduloInteger" (formula "15") (term "0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "15") (term "0,0,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_homoEq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "15") (term "0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "15") (term "0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,1"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "15") (term "1"))
                                       (rule "add_literals" (formula "15") (term "1,1,1"))
                                       (rule "times_zero_1" (formula "15") (term "1,1"))
                                       (rule "add_zero_right" (formula "15") (term "1"))
                                       (rule "div_axiom" (formula "7") (term "0") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "equal_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "polySimp_addComm1" (formula "9") (term "1"))
                                       (rule "add_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "8"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "7"))
                                       (rule "times_zero_2" (formula "8") (term "1"))
                                       (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "7"))
                                       (rule "times_zero_2" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "div_axiom" (formula "17") (term "0,0") (inst "quotient=quotient_1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,1,1,0,0,1,1"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0,1,0,1,1,0,0,1,1"))
                                       (rule "equal_literals" (formula "16") (term "0,0,1,0,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "16") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0,1,1"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0,0,0"))
                                       (rule "expand_addJint" (formula "16") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "16") (term "0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0,1,1"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "16") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,1,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,1,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "16") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,1,0,0,1,1"))
                                       (rule "div_axiom" (formula "15") (term "0,1,0,0,0,1,1,0") (inst "quotient=quotient_2"))
                                       (rule "mul_literals" (formula "15") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "15") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "equal_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1"))
                                       (rule "add_literals" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,1,0") (ifseqformula "15"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,1") (ifseqformula "15"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "17"))
                                       (rule "times_zero_1" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "div_axiom" (formula "5") (term "0,0") (inst "quotient=quotient_3"))
                                       (rule "mul_literals" (formula "5") (term "1,1,1,1,1"))
                                       (rule "equal_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "qeq_literals" (formula "5") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "7") (term "1"))
                                       (rule "add_literals" (formula "7") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "5"))
                                       (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "6"))
                                       (rule "times_zero_1" (formula "17") (term "0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_strengthen0" (formula "17") (ifseqformula "26"))
                                       (rule "add_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "17"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "false_right" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_contradInEq3" (formula "7") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "greater_literals" (formula "7") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                 )
                                 (branch "CUT: i < 4294967296 FALSE"
                                    (rule "false_right" (formula "21"))
                                    (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "15"))
                                    (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                    (rule "notRight" (formula "21"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "polySimp_elimNeg" (formula "5") (term "1,0,1"))
                                    (rule "inEqSimp_ltRight" (formula "22"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                    (rule "inEqSimp_commuteGeq" (formula "6"))
                                    (rule "mod_axiom" (formula "3") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "mod_axiom" (formula "3") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1,0"))
                                    (rule "expand_subJint" (formula "14") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0,1,1"))
                                    (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,0,1,1"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,1"))
                                    (rule "expand_addJint" (formula "14") (term "1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0,1"))
                                    (rule "expand_moduloInteger" (formula "4") (term "0"))
                                    (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                    (rule "mod_axiom" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "4") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0"))
                                    (rule "mod_axiom" (formula "5") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "newSym_eq" (formula "5") (inst "newSymDef=mul(moduloLong(Z(0(#))), Z(0(#)))") (inst "l=l_0"))
                                    (rule "times_zero_1" (formula "5") (term "1,1"))
                                    (rule "add_zero_right" (formula "5") (term "1"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                    (rule "polyDiv_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "5") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_homoEq" (formula "5"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "5") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,0"))
                                    (rule "times_zero_1" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "expand_addJint" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,1,1,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                    (rule "expand_subJint" (formula "14") (term "0,0,1"))
                                    (rule "polySimp_elimSub" (formula "14") (term "0,0,0,1"))
                                    (rule "expand_addJint" (formula "4") (term "0,1,1"))
                                    (rule "expand_addJint" (formula "4") (term "0,1,0,0,0"))
                                    (rule "expand_moduloLong" (formula "5") (term "0"))
                                    (rule "replace_long_RANGE" (formula "5") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,1,0"))
                                    (rule "replace_long_MIN" (formula "5") (term "0,0"))
                                    (rule "replace_long_HALFRANGE" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_homoEq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "mod_axiom" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "5") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "5") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,1,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "elimGcdEq" (formula "5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "times_zero_1" (formula "5") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,1,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,1,0,1,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "4") (term "0,1,1"))
                                    (rule "replace_int_MIN" (formula "4") (term "0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "mod_axiom" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "4") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "4") (term "0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,0,1"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,1"))
                                    (rule "expand_moduloInteger" (formula "4") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "4") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "equal_literals" (formula "4") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "4") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "4") (term "0,0,1,0,1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,0,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "1"))
                                    (rule "add_literals" (formula "4") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "4") (term "1,1"))
                                    (rule "add_zero_right" (formula "4") (term "1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                    (rule "polyMod_pullOut" (formula "14") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,1,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,1,1,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                    (rule "mod_axiom" (formula "14") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0,0,1"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,1"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1"))
                                    (rule "mul_literals" (formula "14") (term "1,0,1"))
                                    (rule "polyMod_pullOut" (formula "14") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,1"))
                                    (rule "mod_axiom" (formula "14") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1"))
                                    (rule "div_axiom" (formula "6") (term "0") (inst "quotient=quotient_0"))
                                    (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "6") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "equal_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "8") (term "1"))
                                    (rule "add_literals" (formula "8") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "6"))
                                    (rule "times_zero_2" (formula "7") (term "1"))
                                    (rule "applyEqRigid" (formula "8") (term "0,1,0,0") (ifseqformula "6"))
                                    (rule "times_zero_2" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                              (branch "Assume moduloInt(moduloLong(i / 4294967296)) != i / 4294967296"
                                 (rule "false_right" (formula "20"))
                                 (rule "expand_inInt" (formula "15"))
                                 (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                 (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "notRight" (formula "20"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "polySimp_elimNeg" (formula "5") (term "1,0,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_commuteGeq" (formula "5"))
                                 (rule "mod_axiom" (formula "2") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "div_literals" (formula "2") (term "0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "mod_axiom" (formula "2") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "div_literals" (formula "2") (term "0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                 (rule "eqSymm" (formula "19"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                                 (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                                 (rule "expand_addJint" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "5") (term "0"))
                                 (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "5") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1,0"))
                                 (rule "expand_subJint" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "13") (term "0,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "3") (term "0"))
                                 (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                 (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,0"))
                                 (rule "equal_literals" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0"))
                                 (rule "mul_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "expand_subJint" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "expand_moduloLong" (formula "5") (term "1,0,0"))
                                 (rule "replace_long_MIN" (formula "5") (term "0,1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "5") (term "0,0,1,1,0,0"))
                                 (rule "replace_long_RANGE" (formula "5") (term "1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polyMod_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "expand_addJint" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,0,1"))
                                 (rule "expand_addJint" (formula "3") (term "0,1,1"))
                                 (rule "expand_addJint" (formula "3") (term "0,1,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "expand_moduloInteger" (formula "3") (term "0,1,1"))
                                 (rule "replace_int_MIN" (formula "3") (term "0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "mod_axiom" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "3") (term "0,1,0,0,0"))
                                 (rule "replace_int_MIN" (formula "3") (term "0,0,1,0,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                 (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "3") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "0,0") (inst "polyDivCoeff=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,0"))
                                 (rule "equal_literals" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,1,0,1"))
                                 (rule "equal_literals" (formula "3") (term "0,0,1,0,1"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "1,1,1"))
                                 (rule "times_zero_1" (formula "3") (term "1,1"))
                                 (rule "add_zero_right" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "13") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,1,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,0,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,1"))
                                 (rule "polyMod_pullOut" (formula "13") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,1"))
                                 (rule "mod_axiom" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
                                 (rule "div_axiom" (formula "15") (term "0,0") (inst "quotient=quotient_0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                 (rule "div_axiom" (formula "15") (term "0") (inst "quotient=quotient_1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "9") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "newSym_eq" (formula "9") (inst "newSymDef=mul(quotient_1, Z(0(#)))") (inst "l=l_0"))
                                 (rule "times_zero_1" (formula "9") (term "1,1"))
                                 (rule "add_zero_right" (formula "9") (term "1"))
                                 (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "9"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1") (ifseqformula "10"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "10"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "10"))
                                 (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "10"))
                                 (rule "elimGcdEq" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "add_zero_left" (formula "19") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "times_zero_1" (formula "19") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "19") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "9") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                 (rule "div_literals" (formula "9") (term "0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "leq_literals" (formula "8") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "19"))
                                 (rule "add_zero_right" (formula "8") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "8"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "9"))
                                 (rule "mul_literals" (formula "2") (term "1,1,0"))
                                 (rule "greater_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "i ≥ 0 FALSE"
                              (rule "false_right" (formula "19"))
                              (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                              (rule "expand_inInt" (formula "13"))
                              (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                              (rule "replace_int_MAX" (formula "13") (term "1,0"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1"))
                              (rule "notRight" (formula "19"))
                              (rule "andLeft" (formula "14"))
                              (rule "polySimp_elimNeg" (formula "5") (term "1,0,1"))
                              (rule "inEqSimp_geqRight" (formula "20"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "inEqSimp_commuteGeq" (formula "6"))
                              (rule "mod_axiom" (formula "4") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "div_literals" (formula "4") (term "0,1,0"))
                              (rule "times_zero_2" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "mod_axiom" (formula "3") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "div_literals" (formula "3") (term "0,1,0"))
                              (rule "times_zero_2" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                              (rule "leq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "12"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                              (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                              (rule "expand_addJint" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0,1"))
                              (rule "expand_addJlong" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                              (rule "expand_subJint" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1"))
                              (rule "expand_addJint" (formula "4") (term "0,1,0,0"))
                              (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "1,0,0,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1"))
                              (rule "mod_axiom" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,0,0,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,1,0,0,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "expand_moduloInteger" (formula "5") (term "0"))
                              (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "5") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "expand_moduloInteger" (formula "4") (term "0,1,0,0"))
                              (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "4") (term "0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "mod_axiom" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polyDiv_pullOut" (formula "4") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,1,0,0"))
                              (rule "equal_literals" (formula "4") (term "0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "expand_addJint" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                              (rule "expand_subJint" (formula "13") (term "0,0,1"))
                              (rule "polySimp_elimSub" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                              (rule "expand_moduloLong" (formula "5") (term "1,0,0"))
                              (rule "replace_long_RANGE" (formula "5") (term "1,1,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "5") (term "0,0,1,1,0,0"))
                              (rule "replace_long_MIN" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "mod_axiom" (formula "5") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                              (rule "polyMod_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=mul(div(add(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                moduloLong(Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
            moduloLong(div(i,
                           Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "4") (term "0"))
                              (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "polyMod_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(6(1(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "mod_axiom" (formula "4") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                              (rule "mul_literals" (formula "4") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0"))
                              (rule "equal_literals" (formula "4") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                              (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0"))
                              (rule "mul_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloLong" (formula "5") (term "1,0,0"))
                              (rule "replace_long_RANGE" (formula "5") (term "1,1,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "5") (term "0,0,1,1,0,0"))
                              (rule "replace_long_MIN" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "5") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                              (rule "polyMod_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "0,0,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1"))
                              (rule "mul_literals" (formula "13") (term "1,0,1"))
                              (rule "polyMod_pullOut" (formula "13") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,1"))
                              (rule "mod_axiom" (formula "13") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,0,0,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                              (rule "expand_moduloLong" (formula "5") (term "1,0,0"))
                              (rule "replace_long_RANGE" (formula "5") (term "1,1,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "5") (term "0,0,1,1,0,0"))
                              (rule "replace_long_MIN" (formula "5") (term "0,1,0,0"))
                              (rule "add_literals" (formula "5") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "5") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                              (rule "div_literals" (formula "5") (term "0,1,1,0,0"))
                              (rule "times_zero_2" (formula "5") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "polyMod_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,0,1,1,0,0,1,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,0,0,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,0,0,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "add_zero_right" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "div_axiom" (formula "14") (term "0,0") (inst "quotient=quotient_0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                              (rule "div_axiom" (formula "13") (term "0,1,0,0,0,1,1,0") (inst "quotient=quotient_1"))
                              (rule "mul_literals" (formula "13") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "13") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "equal_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                              (rule "add_literals" (formula "15") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "1"))
                              (rule "add_literals" (formula "15") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,1") (ifseqformula "13"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,1"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,1,0") (ifseqformula "13"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "mul_literals" (formula "14") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                              (rule "mul_literals" (formula "15") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "15"))
                              (rule "mul_literals" (formula "8") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "leq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "div_axiom" (formula "5") (term "0,0") (inst "quotient=quotient_2"))
                              (rule "mul_literals" (formula "5") (term "1,1,1,1,1"))
                              (rule "equal_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "qeq_literals" (formula "5") (term "0,1"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "7") (term "1"))
                              (rule "add_literals" (formula "7") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "5"))
                              (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "18"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "17"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                              (rule "leq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "6") (term "1,1"))
                              (rule "add_literals" (formula "6") (term "1"))
                              (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "10") (term "1,1"))
                              (rule "add_literals" (formula "10") (term "1"))
                              (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "9") (term "1,1"))
                              (rule "add_literals" (formula "9") (term "1"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEq" (formula "9") (term "0,1,0,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "9") (term "1,0,1"))
                              (rule "add_literals" (formula "9") (term "0,1"))
                              (rule "applyEqRigid" (formula "22") (term "0,1,0,1,1,0,0") (ifseqformula "7"))
                              (rule "mul_literals" (formula "22") (term "1,0,1,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "7"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "15"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0"))
                              (rule "commute_and" (formula "1") (term "0,1"))
                              (rule "div_axiom" (formula "8") (term "1,0,0") (inst "quotient=quotient_3"))
                              (rule "mul_literals" (formula "8") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "8") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "equal_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "polySimp_addComm1" (formula "10") (term "1"))
                              (rule "add_literals" (formula "10") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "8"))
                              (rule "mod_axiom" (formula "11") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "newSym_eq" (formula "11") (inst "newSymDef=mul(quotient_3, Z(0(#)))") (inst "l=l_0"))
                              (rule "times_zero_1" (formula "11") (term "1,1"))
                              (rule "add_zero_right" (formula "11") (term "1"))
                              (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "11"))
                              (rule "eqSymm" (formula "12"))
                              (rule "applyEqRigid" (formula "11") (term "1,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "12"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                              (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "12"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "12"))
                              (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=l_0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "11") (term "0,0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "polySimp_homoEq" (formula "11"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                              (rule "div_literals" (formula "11") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "11") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "1,0"))
                              (rule "times_zero_1" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "mul_literals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=add(Z(1(#)),
    mul(l_0, Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "21") (term "0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "10"))
                              (rule "mul_literals" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "14") (term "0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "leq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "24"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=add(Z(0(#)),
    mul(l_0, Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "add_zero_left" (formula "9") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                              (rule "add_zero_left" (formula "9") (term "1,1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "9") (term "0,0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "10") (ifseqformula "16"))
                              (rule "times_zero_1" (formula "10") (term "1,1,0"))
                              (rule "greater_literals" (formula "10") (term "0,0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "qeq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                        )
                        (branch "CUT: 31 % 64 = 31 FALSE"
                           (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                           (rule "expand_inInt" (formula "12"))
                           (rule "less_literals" (formula "18"))
                           (rule "false_right" (formula "18"))
                           (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                           (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "12") (term "0,1"))
                           (rule "replace_int_MAX" (formula "12") (term "1,0"))
                           (rule "notRight" (formula "18"))
                           (rule "andLeft" (formula "13"))
                           (rule "polySimp_elimNeg" (formula "7") (term "1,1,1,0,1,2,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,2,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,2,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0,0,1,2,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "mod_axiom" (formula "2") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "div_literals" (formula "2") (term "0,1,0"))
                           (rule "mul_literals" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "mod_axiom" (formula "6") (term "1,0,2,0,1,2,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,2,0,1,2,0,0"))
                           (rule "div_literals" (formula "6") (term "0,1,1,0,2,0,1,2,0,0"))
                           (rule "mul_literals" (formula "6") (term "1,1,0,2,0,1,2,0,0"))
                           (rule "add_zero_right" (formula "6") (term "1,0,2,0,1,2,0,0"))
                           (rule "pow_literals" (formula "6") (term "0,2,0,1,2,0,0"))
                           (rule "mul_literals" (formula "6") (term "2,0,1,2,0,0"))
                           (rule "mod_axiom" (formula "18") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                           (rule "div_literals" (formula "18") (term "0,1,0"))
                           (rule "mul_literals" (formula "18") (term "1,0"))
                           (rule "add_zero_right" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "closeTrue" (formula "18"))
                        )
                     )
                     (branch "CUT: 32 % 64 = 32 FALSE"
                        (rule "expand_inInt" (formula "14") (term "0,0,0,0"))
                        (rule "expand_inInt" (formula "11"))
                        (rule "replace_int_MAX" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "replace_int_MIN" (formula "14") (term "0,1,0,0,0,0"))
                        (rule "replace_int_MAX" (formula "11") (term "1,0"))
                        (rule "replace_int_MIN" (formula "11") (term "0,1"))
                        (rule "notRight" (formula "18"))
                        (rule "andLeft" (formula "12"))
                        (rule "inEqSimp_ltRight" (formula "19"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0,0,0,1,2,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14"))
                        (rule "mod_axiom" (formula "7") (term "1,1,0,0,2,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,2,0,0"))
                        (rule "div_literals" (formula "7") (term "0,1,1,1,0,0,2,0,0"))
                        (rule "times_zero_2" (formula "7") (term "1,1,1,0,0,2,0,0"))
                        (rule "add_zero_right" (formula "7") (term "1,1,0,0,2,0,0"))
                        (rule "pow_literals" (formula "7") (term "1,0,0,2,0,0"))
                        (rule "mod_axiom" (formula "7") (term "0,1,0,1,0,2,0,1,2,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                        (rule "div_literals" (formula "7") (term "0,1,0,1,0,1,0,2,0,1,2,0,0"))
                        (rule "times_zero_2" (formula "7") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,1,0,1,0,2,0,1,2,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,0,1,0,2,0,1,2,0,0"))
                        (rule "add_literals" (formula "7") (term "0,1,0,2,0,1,2,0,0"))
                        (rule "mod_axiom" (formula "7") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "div_literals" (formula "7") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "times_zero_2" (formula "7") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,1,1,1,0,1,2,0,0"))
                        (rule "mod_axiom" (formula "19") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                        (rule "div_literals" (formula "19") (term "0,1,0"))
                        (rule "mul_literals" (formula "19") (term "1,0"))
                        (rule "add_zero_right" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "closeTrue" (formula "19"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "12"))
                  (rule "andRight" (formula "13"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "expand_inInt" (formula "11") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "8"))
                     (rule "replace_int_MIN" (formula "11") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "8") (term "0,1"))
                     (rule "replace_int_MAX" (formula "8") (term "1,0"))
                     (rule "notLeft" (formula "1"))
                     (rule "andLeft" (formula "7"))
                     (rule "inEqSimp_geqRight" (formula "14"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,2,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,2,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,2,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "mod_axiom" (formula "2") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,1,1,1,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,0,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,0,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,0,2,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,0,0"))
                     (rule "pow_literals" (formula "2") (term "0,1,0,0,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,1,2,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,1,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,1,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,1,2,0,1,0,0"))
                     (rule "pow_literals" (formula "2") (term "1,2,0,1,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,1,2,0,0,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,0,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,0,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,1,2,0,0,2,0,0"))
                     (rule "pow_literals" (formula "2") (term "1,2,0,0,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,2,0,1,2,0,0"))
                     (rule "add_literals" (formula "2") (term "0,1,0,2,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,1,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0,0"))
                     (rule "pow_literals" (formula "2") (term "0,1,0,1,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,0,0,0,0,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,0,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,0,0,0,0,2,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,2,0,0"))
                     (rule "leq_literals" (formula "2") (term "0,0,0,2,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "pow_literals" (formula "2") (term "0,1,0,1,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,0,2,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2,0,1,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,1,0,2,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,0,2,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,0,2,0,1,2,0,0"))
                     (rule "pow_literals" (formula "2") (term "0,2,0,1,2,0,0"))
                     (rule "mul_literals" (formula "2") (term "2,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0,1,2,0,0"))
                     (rule "add_literals" (formula "2") (term "0,1,0,0,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "0,1,1,1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,1,0,1,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,0,1,1,1,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,1,1,1,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,1,1,0,1,2,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,1,1,0,1,2,0,0"))
                     (rule "pow_literals" (formula "2") (term "1,1,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,1,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,1,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                     (rule "leq_literals" (formula "2") (term "0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "pow_literals" (formula "2") (term "1,1,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,0,0,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,1,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,1,0,0,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,0,0,0,1,2,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,1,2,0,0"))
                     (rule "leq_literals" (formula "2") (term "0,0,1,2,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "11"))
                     (rule "leq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                     (rule "leq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                     (rule "expand_addJint" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0,1"))
                     (rule "expand_addJint" (formula "11") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1,0"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,1,0"))
                     (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                     (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,1"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,1"))
                     (rule "expand_addJint" (formula "12") (term "0"))
                     (rule "expand_moduloLong" (formula "2") (term "0,2,0,0"))
                     (rule "replace_long_RANGE" (formula "2") (term "1,1,0,2,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0,2,0,0"))
                     (rule "replace_long_MIN" (formula "2") (term "0,0,2,0,0"))
                     (rule "expand_moduloLong" (formula "2") (term "1,2,0,0"))
                     (rule "replace_long_RANGE" (formula "2") (term "1,1,1,2,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,2,0,0"))
                     (rule "replace_long_MIN" (formula "2") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "2") (term "0,1,1,2,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,2,0,0"))
                     (rule "div_literals" (formula "2") (term "0,1,1,1,2,0,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,1,2,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,1,2,0,0"))
                     (rule "add_literals" (formula "2") (term "1,2,0,0"))
                     (rule "expand_moduloLong" (formula "2") (term "1,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,0"))
                     (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,0"))
                     (rule "replace_long_MIN" (formula "2") (term "0,1,0,0"))
                     (rule "expand_subJint" (formula "1") (term "0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                     (rule "expand_subJint" (formula "11") (term "0,0,1"))
                     (rule "polySimp_elimSub" (formula "11") (term "0,0,0,1"))
                     (rule "expand_moduloInteger" (formula "11") (term "1,1,1,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,1,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                     (rule "mod_axiom" (formula "11") (term "1,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,1,1,0,0,1,1"))
                     (rule "equal_literals" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                     (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,1,0,0"))
                     (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                     (rule "expand_moduloInteger" (formula "12") (term "0"))
                     (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "add_literals" (formula "12") (term "0,0"))
                     (rule "mod_axiom" (formula "12") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1"))
                     (rule "polySimp_rightDist" (formula "12") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                     (rule "mul_literals" (formula "12") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                     (rule "polyDiv_pullOut" (formula "12") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,0"))
                     (rule "equal_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0"))
                     (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0"))
                     (rule "mul_literals" (formula "12") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "expand_addJlong" (formula "2") (term "2,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,2,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,2,0,0"))
                     (rule "expand_addJint" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "expand_moduloInteger" (formula "11") (term "0,0,1"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "11") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
                     (rule "mod_axiom" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,0,0,1"))
                     (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "expand_moduloInteger" (formula "2") (term "0"))
                     (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "2") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "expand_moduloInteger" (formula "1") (term "0,1,0,0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,0,0"))
                     (rule "equal_literals" (formula "1") (term "0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "expand_subJint" (formula "11") (term "1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                     (rule "expand_moduloInteger" (formula "11") (term "0,1,1,0,1"))
                     (rule "replace_int_MIN" (formula "11") (term "0,0,1,1,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,1,0,1"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                     (rule "add_literals" (formula "11") (term "0,1,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "11") (term "0,0,1,1,0,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                     (rule "expand_moduloLong" (formula "2") (term "2,1,0,0"))
                     (rule "replace_long_RANGE" (formula "2") (term "1,1,2,1,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,2,1,0,0"))
                     (rule "replace_long_MIN" (formula "2") (term "0,2,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,1,2,1,0,0"))
                     (rule "mod_axiom" (formula "2") (term "1,0,1,2,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,2,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,2,1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,1,2,1,0,0"))
                     (rule "polyMod_pullOut" (formula "2") (term "1,2,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,2,1,0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,1,2,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,1,2,1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,2,1,0,0"))
                     (rule "polyMod_pullOut" (formula "2") (term "1,2,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,2,1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,2,1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,1,2,1,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                     (rule "expand_moduloInteger" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,1,0,0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,0,0") (inst "polyDivCoeff=mul(div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,0,0,0"))
                     (rule "equal_literals" (formula "1") (term "0,0,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "1") (term "0,0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,0,0,1"))
                     (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,0,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,0,0,1"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,0,0,1"))
                     (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,1"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "11") (term "0,0,1,0,1,0,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "1,0,1"))
                     (rule "add_literals" (formula "11") (term "1,1,1,0,1"))
                     (rule "times_zero_1" (formula "11") (term "1,1,0,1"))
                     (rule "add_zero_right" (formula "11") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "1,0,1"))
                     (rule "add_literals" (formula "11") (term "0,1,0,1"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                     (rule "expand_moduloInteger" (formula "1") (term "0,1,0,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "1") (term "0,0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                     (rule "polyMod_pullOut" (formula "11") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,1,1,0,0,1,1"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                     (rule "add_zero_right" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "mod_axiom" (formula "11") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                     (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
                     (rule "expand_moduloInteger" (formula "1") (term "0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(5(1(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "mod_axiom" (formula "1") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(2(#))"))
                     (rule "equal_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "11") (term "0,1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0,1"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,1"))
                     (rule "leq_literals" (formula "11") (term "0,0,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "11"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "add_literals" (formula "1") (term "1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
                     (rule "leq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEq" (formula "10") (term "1,0,0,0") (ifseqformula "9"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "div_literals" (formula "10") (term "0,0"))
                     (rule "mul_literals" (formula "10") (term "0"))
                     (rule "polySimp_homoEq" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "0,0"))
                     (rule "applyEq" (formula "8") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "9"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,1,1,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,1,1,1,0,0"))
                     (rule "div_literals" (formula "8") (term "0,1,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "1,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,1,1,0,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "9"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "div_literals" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "7") (term "0,1,1,1,0,0") (ifseqformula "8"))
                     (rule "mul_literals" (formula "7") (term "1,1,1,0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "8"))
                     (rule "add_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "closeTrue" (formula "9"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "times_minus_one_1" (formula "2") (term "1,0,1,0,1,0,0"))
                     (rule "times_minus_one_1" (formula "2") (term "1,0,1,0,0,2,0,0"))
                     (rule "times_minus_one_1" (formula "2") (term "1,0,0,0,0,1,2,0,0"))
                     (rule "times_minus_one_1" (formula "2") (term "1,1,1,0,1,2,0,0"))
                     (rule "times_minus_one_1" (formula "2") (term "1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "times_minus_one_1" (formula "2") (term "1,0,1,0,2,0,1,2,0,0"))
                     (rule "eqTermCut" (formula "2") (term "0,1,0,0,1,1,1,0,1,2,0,0") (inst "s=Z(2(3(#)))") (userinteraction))
                     (branch "Assume 32 % 64 = 32"
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0,1,1,1,0,1,2,0,0") (ifseqformula "2") (userinteraction))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,1,0,2,0,1,2,0,0") (ifseqformula "2") (userinteraction))
                        (rule "neg_literal" (formula "3") (term "1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "neg_literal" (formula "3") (term "1,0,1,0,2,0,1,2,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,1,1,1,0,1,2,0,0"))
                        (rule "add_literals" (formula "3") (term "0,1,0,2,0,1,2,0,0"))
                        (rule "applyEqRigid" (formula "3") (term "1,1,2,0,1,0,0") (ifseqformula "2") (userinteraction))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,1,0,1,0,0") (ifseqformula "2") (userinteraction))
                        (rule "applyEqRigid" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2") (userinteraction))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0,0,0,1,2,0,0") (ifseqformula "2") (userinteraction))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,1,0,0,2,0,0") (ifseqformula "2") (userinteraction))
                        (rule "applyEqRigid" (formula "3") (term "0,0,0,0,2,0,0") (ifseqformula "2") (userinteraction))
                        (rule "less_literals" (formula "3") (term "0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "pow_literals" (formula "3") (term "1,0,1,0,0"))
                        (rule "less_literals" (formula "3") (term "0,0,0,2,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "neg_literal" (formula "3") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,1,2,0,0"))
                        (rule "applyEqRigid" (formula "3") (term "1,1,0,0,2,0,0") (ifseqformula "2") (userinteraction))
                        (rule "eqTermCut" (formula "3") (term "1,0,2,0,1,2,0,0") (inst "s=Z(1(3(#)))") (userinteraction))
                        (branch "Assume 31 % 64 = 31"
                           (rule "pow_literals" (formula "4") (term "1,0,0,2,0,0"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0,1,2,0,0") (ifseqformula "3") (userinteraction))
                           (rule "applyEqRigid" (formula "4") (term "0,1,1,1,0,1,2,0,0") (ifseqformula "3") (userinteraction))
                           (rule "applyEqRigid" (formula "4") (term "1,0,2,0,1,2,0,0") (ifseqformula "3") (userinteraction))
                           (rule "less_literals" (formula "4") (term "0,0,1,2,0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "pow_literals" (formula "4") (term "0,0,1,2,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,2,0,0"))
                           (rule "ifthenelse_split" (formula "4") (term "0,0") (userinteraction))
                           (branch "i ≥ 0 TRUE"
                              (rule "eqTermCut" (formula "5") (term "0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                              (branch "Assume moduloInt(moduloLong(i / 4294967296)) = i / 4294967296"
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "5") (userinteraction))
                                 (rule "eqTermCut" (formula "17") (term "1,1,1,0,0") (inst "s=add(Z(1(#)),
    addJint(Z(2(3(#))), result_numberOfLeadingZeros_0))") (userinteraction))
                                 (branch "Assume moduloInt( 1 + addJint(32, result_numberOfLeadingZeros_0)) = 1 + addJint(32, result_numberOfLeadingZeros_0)"
                                    (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "1") (userinteraction))
                                    (rule "notLeft" (formula "2") (userinteraction))
                                    (rule "expand_addJint" (formula "17") (term "0") (userinteraction))
                                    (rule "eqTermCut" (formula "17") (term "0") (inst "s=add(Z(2(3(#))), result_numberOfLeadingZeros_0)") (userinteraction))
                                    (branch "Assume moduloInt(32 + result_numberOfLeadingZeros_0) = 32 + result_numberOfLeadingZeros_0"
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "1") (userinteraction))
                                       (rule "polySimp_homoEq" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "eqTermCut" (formula "19") (term "1,1,0,0") (inst "s=sub(Z(4(6(#))),
    add(add(Z(1(#)), Z(2(3(#)))),
        result_numberOfLeadingZeros_0))") (userinteraction))
                                       (branch "Assume subJint(64, 1 + addJint(32, result_numberOfLeadingZeros_0)) = 64 - (1 + 32 + result_numberOfLeadingZeros_0)"
                                          (rule "add_literals" (formula "1") (term "0,1,1"))
                                          (rule "sub" (formula "1") (term "1"))
                                          (rule "minus_distribute_1" (formula "1") (term "1,1"))
                                          (rule "neg_literal" (formula "1") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                          (rule "add_literals" (formula "1") (term "0,1"))
                                          (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "1") (userinteraction))
                                          (rule "eqTermCut" (formula "18") (term "1,1,0,0,1,1") (inst "s=sub(Z(2(3(#))),
    add(result_numberOfLeadingZeros_0, Z(1(#))))") (userinteraction))
                                          (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) = 32 - (result_numberOfLeadingZeros_0 + 1)"
                                             (rule "applyEq" (formula "19") (term "1,1,0,0,1,1") (ifseqformula "18") (userinteraction))
                                             (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "18") (userinteraction))
                                             (rule "sub" (formula "18") (term "1"))
                                             (rule "minus_distribute_1" (formula "18") (term "1,1"))
                                             (rule "neg_literal" (formula "18") (term "1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                             (rule "sub" (formula "19") (term "0,0,1"))
                                             (rule "minus_distribute_1" (formula "19") (term "1,0,0,1"))
                                             (rule "neg_literal" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                             (rule "sub" (formula "19") (term "1,1,0,0,1,1"))
                                             (rule "minus_distribute_1" (formula "19") (term "1,1,1,0,0,1,1"))
                                             (rule "neg_literal" (formula "19") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,1,1"))
                                              (opengoal " ")
                                          )
                                          (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) != 32 - (result_numberOfLeadingZeros_0 + 1)"
                                             (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                             (rule "expand_inInt" (formula "14"))
                                             (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                             (rule "replace_int_MAX" (formula "14") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,1"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "polySimp_elimNeg" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimNeg" (formula "23") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "21") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "21") (term "1,1,1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                             (rule "mul_literals" (formula "21") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                             (rule "add_literals" (formula "21") (term "0,1"))
                                             (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15"))
                                             (rule "mod_axiom" (formula "4") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                             (rule "div_literals" (formula "4") (term "0,1,0"))
                                             (rule "times_zero_2" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "mod_axiom" (formula "4") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                             (rule "div_literals" (formula "4") (term "0,1,0"))
                                             (rule "times_zero_2" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_strengthen0" (formula "15") (ifseqformula "20"))
                                             (rule "add_literals" (formula "15") (term "1"))
                                             (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "15"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0"))
                                             (rule "qeq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "false_right" (formula "20"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_notGeq" (formula "13") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                                             (rule "expand_moduloInteger" (formula "2") (term "0"))
                                             (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "2") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "times_zero_1" (formula "2") (term "0,0"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "expand_subJint" (formula "1") (term "0"))
                                             (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "expand_addJint" (formula "3") (term "1,1"))
                                             (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1,0"))
                                             (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "expand_addJint" (formula "3") (term "1,0,0"))
                                             (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                             (rule "expand_addJint" (formula "16") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                                             (rule "expand_subJint" (formula "14") (term "0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                             (rule "expand_moduloInteger" (formula "15") (term "0,0,0"))
                                             (rule "replace_int_RANGE" (formula "15") (term "1,1,0,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,0,0"))
                                             (rule "replace_int_MIN" (formula "15") (term "0,0,0,0"))
                                             (rule "mod_axiom" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                                             (rule "expand_subJint" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0"))
                                             (rule "expand_moduloLong" (formula "5") (term "0,0"))
                                             (rule "replace_long_RANGE" (formula "5") (term "1,1,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,1,0,0"))
                                             (rule "replace_long_MIN" (formula "5") (term "0,0,0"))
                                             (rule "replace_long_HALFRANGE" (formula "5") (term "0,1,0,0"))
                                             (rule "mod_axiom" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                             (rule "div_literals" (formula "5") (term "0,1,1,0,0"))
                                             (rule "times_zero_2" (formula "5") (term "1,1,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "1,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "expand_addJint" (formula "1") (term "0,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "3") (term "1,1"))
                                             (rule "replace_int_MIN" (formula "3") (term "0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,1"))
                                             (rule "replace_int_RANGE" (formula "3") (term "1,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_homoEq" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "mod_axiom" (formula "3") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "3") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0"))
                                             (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                             (rule "expand_subJint" (formula "16") (term "0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "0,0"))
                                             (rule "expand_moduloInteger" (formula "14") (term "0"))
                                             (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                             (rule "mod_axiom" (formula "14") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "14") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0"))
                                             (rule "mul_literals" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "expand_moduloInteger" (formula "15") (term "1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "15") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "5") (term "0"))
                                             (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,1,0"))
                                             (rule "replace_int_MIN" (formula "5") (term "0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "5") (term "0,1,0"))
                                             (rule "mod_axiom" (formula "5") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                             (rule "div_literals" (formula "5") (term "0,1,1,0"))
                                             (rule "times_zero_2" (formula "5") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "5") (term "1,0"))
                                             (rule "add_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "expand_moduloInteger" (formula "1") (term "0"))
                                             (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "1") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                             (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                             (rule "equal_literals" (formula "1") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "newSym_eq" (formula "1") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(result_numberOfLeadingZeros_0, Z(0(#)))),
    mul(moduloInt(add(Z(2(3(#))),
                      result_numberOfLeadingZeros_0)),
        Z(0(#))))") (inst "l=l_0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,1,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,1,1"))
                                             (rule "add_zero_right" (formula "1") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "1") (term "1"))
                                             (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                             (rule "polySimp_homoEq" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=l_0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "polySimp_homoEq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "16") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                             (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0,1,0,0"))
                                             (rule "equal_literals" (formula "16") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "13") (term "0"))
                                             (rule "expand_addJint" (formula "14") (term "0,1,1"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0,0,1,1"))
                                             (rule "expand_addJint" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,0"))
                                             (rule "expand_addJint" (formula "15") (term "0,1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "2") (term "0"))
                                             (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                             (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_homoEq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                             (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=l_0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "add_literals" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1"))
                                             (rule "add_literals" (formula "2") (term "1,0,0,1"))
                                             (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "2") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,0"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0,1,0,0,0") (ifseqformula "2"))
                                             (rule "times_zero_2" (formula "4") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                             (rule "expand_moduloInteger" (formula "16") (term "0"))
                                             (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "polyMod_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0"))
                                             (rule "mod_axiom" (formula "16") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "elimGcdEq" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(5(7(9(0(5(4(2(4(4(6(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(1(#))"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,1,0"))
                                             (rule "leq_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "qeq_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "0,0"))
                                             (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "16") (term "1,0"))
                                             (rule "add_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "closeTrue" (formula "16"))
                                          )
                                       )
                                       (branch "Assume subJint(64, 1 + addJint(32, result_numberOfLeadingZeros_0)) != 64 - (1 + 32 + result_numberOfLeadingZeros_0)"
                                          (rule "expand_inInt" (formula "14"))
                                          (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "14") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "polySimp_elimSub" (formula "20") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                          (rule "add_literals" (formula "20") (term "0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14"))
                                          (rule "mod_axiom" (formula "4") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                          (rule "div_literals" (formula "4") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "mod_axiom" (formula "3") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "div_literals" (formula "3") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "19"))
                                          (rule "add_literals" (formula "14") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "2") (term "0"))
                                          (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        addJint(Z(2(3(#))),
                result_numberOfLeadingZeros_0)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "expand_addJint" (formula "16") (term "1,1,1,1,0,0"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "1,1,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,1,1,1,0,0"))
                                          (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "1") (term "0"))
                                          (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "1") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "elimGcdEq" (formula "1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "1") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "times_zero_1" (formula "1") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1,0"))
                                          (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1,0"))
                                          (rule "expand_subJint" (formula "15") (term "0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0"))
                                          (rule "expand_addJint" (formula "13") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,1,0"))
                                          (rule "expand_moduloInteger" (formula "14") (term "0,0,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,0,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                          (rule "expand_subJint" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0"))
                                          (rule "expand_moduloLong" (formula "4") (term "0,0"))
                                          (rule "replace_long_HALFRANGE" (formula "4") (term "0,0,1,0,0"))
                                          (rule "replace_long_MIN" (formula "4") (term "0,0,0"))
                                          (rule "replace_long_RANGE" (formula "4") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,1,0,0"))
                                          (rule "mod_axiom" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                          (rule "div_literals" (formula "4") (term "0,1,1,0,0"))
                                          (rule "times_zero_2" (formula "4") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "expand_addJint" (formula "2") (term "1,0,0"))
                                          (rule "expand_subJint" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0"))
                                          (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                          (rule "expand_addJint" (formula "15") (term "0,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "13") (term "1,0"))
                                          (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "13") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,0"))
                                          (rule "equal_literals" (formula "13") (term "0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "14") (term "1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1,1,0,0"))
                                          (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "4") (term "0"))
                                          (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,1,0"))
                                          (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "4") (term "0,1,0"))
                                          (rule "mod_axiom" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                          (rule "div_literals" (formula "4") (term "0,1,1,0"))
                                          (rule "times_zero_2" (formula "4") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "expand_moduloInteger" (formula "2") (term "1,0,0"))
                                          (rule "replace_int_MIN" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_homoEq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "2") (term "1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "2") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                          (rule "add_literals" (formula "2") (term "0,1"))
                                          (rule "add_zero_left" (formula "2") (term "1"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "expand_moduloInteger" (formula "15") (term "1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "15") (term "1,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "14") (term "0,0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "expand_subJint" (formula "12") (term "0"))
                                          (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                          (rule "expand_addJint" (formula "13") (term "0,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "14") (term "0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                          (rule "polySimp_homoEq" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0"))
                                          (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(7(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "times_zero_1" (formula "14") (term "0,1,0"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "14") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1"))
                                          (rule "expand_moduloInteger" (formula "12") (term "0"))
                                          (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "polyMod_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0"))
                                          (rule "mod_axiom" (formula "12") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "mul_literals" (formula "12") (term "0,1"))
                                          (rule "polyDiv_pullOut" (formula "12") (term "0,0") (inst "polyDivCoeff=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,0"))
                                          (rule "equal_literals" (formula "12") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0"))
                                          (rule "mul_literals" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "expand_addJint" (formula "13") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0"))
                                          (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_0"))
                                          (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "equal_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "6") (term "1"))
                                          (rule "add_literals" (formula "6") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "4"))
                                          (rule "times_zero_2" (formula "5") (term "1"))
                                          (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "times_zero_2" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,1,1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,1,1,0,0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,0,1,1,0,0"))
                                          (rule "equal_literals" (formula "14") (term "0,0,1,0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                          (rule "expand_moduloInteger" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                          (rule "div_axiom" (formula "1") (term "0") (inst "quotient=quotient_1"))
                                          (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                          (rule "equal_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_2"))
                                          (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                          (rule "equal_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "qeq_literals" (formula "3") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                          (rule "add_literals" (formula "5") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "5") (term "1"))
                                          (rule "add_literals" (formula "5") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "div_axiom" (formula "18") (term "0,1,1,1,0,0") (inst "quotient=quotient_3"))
                                          (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                          (rule "equal_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "17"))
                                          (rule "times_zero_1" (formula "14") (term "0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "14") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0"))
                                          (rule "qeq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "20"))
                                          (rule "add_literals" (formula "14") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "20") (term "1,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "false_right" (formula "20"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq3" (formula "2") (ifseqformula "15"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "greater_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Assume moduloInt(32 + result_numberOfLeadingZeros_0) != 32 + result_numberOfLeadingZeros_0"
                                       (rule "expand_inInt" (formula "13"))
                                       (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "13") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "13") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "mod_axiom" (formula "2") (term "0"))
                                       (rule "div_literals" (formula "2") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "mod_axiom" (formula "2") (term "0"))
                                       (rule "div_literals" (formula "2") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_notGeq" (formula "11") (term "0,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "14") (term "0"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "mod_axiom" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                       (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "14") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0"))
                                       (rule "mul_literals" (formula "14") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1"))
                                       (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1"))
                                       (rule "expand_subJint" (formula "12") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0,1,1"))
                                       (rule "expand_addJint" (formula "1") (term "1,1"))
                                       (rule "expand_subJint" (formula "12") (term "0,0,1"))
                                       (rule "polySimp_elimSub" (formula "12") (term "0,0,0,1"))
                                       (rule "expand_subJint" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1,0"))
                                       (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,1,0"))
                                       (rule "expand_subJint" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
                                       (rule "expand_addJint" (formula "1") (term "1,0,0"))
                                       (rule "expand_moduloInteger" (formula "13") (term "0"))
                                       (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                       (rule "polySimp_homoEq" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                       (rule "add_literals" (formula "13") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                       (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "13") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "13") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "expand_moduloLong" (formula "3") (term "0,0"))
                                       (rule "replace_long_RANGE" (formula "3") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0,0"))
                                       (rule "replace_long_MIN" (formula "3") (term "0,0,0"))
                                       (rule "replace_long_HALFRANGE" (formula "3") (term "0,1,0,0"))
                                       (rule "mod_axiom" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "div_literals" (formula "3") (term "0,1,1,0,0"))
                                       (rule "times_zero_2" (formula "3") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "mod_axiom" (formula "12") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                       (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                       (rule "add_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,1"))
                                       (rule "expand_addJint" (formula "15") (term "0,1,0,1,1,0,0"))
                                       (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                       (rule "mod_axiom" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                       (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                       (rule "expand_moduloInteger" (formula "3") (term "0"))
                                       (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                       (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "3") (term "0,1,0"))
                                       (rule "mod_axiom" (formula "3") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "div_literals" (formula "3") (term "0,1,1,0"))
                                       (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "expand_addJint" (formula "11") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,0,1"))
                                       (rule "expand_addJint" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "1") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "newSym_eq" (formula "1") (inst "newSymDef=add(add(add(Z(0(#)),
            mul(result_numberOfLeadingZeros_0, Z(0(#)))),
        div(add(Z(neglit(6(1(6(3(8(4(7(4(1(2(#)))))))))))),
                result_numberOfLeadingZeros_0),
            Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
    mul(moduloInt(add(Z(2(3(#))),
                      result_numberOfLeadingZeros_0)),
        Z(0(#))))") (inst "l=l_0"))
                                       (rule "times_zero_1" (formula "1") (term "1,1,1"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,1"))
                                       (rule "times_zero_1" (formula "1") (term "0,0,1,1"))
                                       (rule "add_zero_left" (formula "1") (term "0,1,1"))
                                       (rule "add_zero_right" (formula "1") (term "1,1"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "polySimp_homoEq" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                       (rule "nnf_imp2or" (formula "11") (term "0"))
                                       (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,0,1"))
                                       (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,0,1"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                       (rule "mod_axiom" (formula "12") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                                       (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,0,0,1"))
                                       (rule "equal_literals" (formula "12") (term "0,0,1,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                       (rule "polySimp_homoEq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                       (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=mul(l_0, Z(neglit(1(#))))"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                       (rule "add_literals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0,1,0"))
                                       (rule "qeq_literals" (formula "2") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "0,0"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_homoEq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_sepNegMonomial" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "2"))
                                       (rule "polySimp_homoEq" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                       (rule "polySimp_homoEq" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                       (rule "polySimp_sepPosMonomial" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1"))
                                       (rule "expand_moduloInteger" (formula "15") (term "1,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "15") (term "1,1,1,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,0,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0"))
                                       (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,1,0,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,1,1,0,0"))
                                       (rule "equal_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1,1,1,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,1,1,1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,1,1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,1,1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "15") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,1,1,0,0"))
                                       (rule "equal_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,1,1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0"))
                                       (rule "expand_addJint" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "12") (term "0,0,1"))
                                       (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,1"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1"))
                                       (rule "mul_literals" (formula "12") (term "1,0,1"))
                                       (rule "polyMod_pullOut" (formula "12") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0,1"))
                                       (rule "mod_axiom" (formula "12") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                       (rule "polyDiv_pullOut" (formula "12") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                       (rule "equal_literals" (formula "12") (term "0,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                                       (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "equal_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "6") (term "1"))
                                       (rule "add_literals" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "4"))
                                       (rule "times_zero_2" (formula "5") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "times_zero_2" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                                       (rule "mod_axiom" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                       (rule "mod_axiom" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                       (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                                       (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "13") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "13") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
                                       (rule "div_axiom" (formula "1") (term "0") (inst "quotient=quotient_1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "polySimp_homoEq" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_sepNegMonomial" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                       (rule "add_literals" (formula "5") (term "0,1"))
                                       (rule "add_zero_left" (formula "5") (term "1"))
                                       (rule "applyEqRigid" (formula "18") (term "0,1,1") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                       (rule "add_literals" (formula "18") (term "0,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "13") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "18"))
                                       (rule "add_literals" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "13"))
                                       (rule "add_zero_left" (formula "18") (term "0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "14"))
                                       (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Assume moduloInt( 1 + addJint(32, result_numberOfLeadingZeros_0)) != 1 + addJint(32, result_numberOfLeadingZeros_0)"
                                    (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "13"))
                                    (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "13") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12"))
                                    (rule "mod_axiom" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "div_literals" (formula "1") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "mod_axiom" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "div_literals" (formula "1") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                    (rule "expand_subJint" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_elimSub" (formula "11") (term "0,0,0,1"))
                                    (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1"))
                                    (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,1,0"))
                                    (rule "expand_addJint" (formula "11") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                                    (rule "expand_addJint" (formula "13") (term "1,1"))
                                    (rule "expand_addJint" (formula "13") (term "1,0,0"))
                                    (rule "expand_addJint" (formula "12") (term "0"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "newSym_eq" (formula "2") (inst "newSymDef=mul(moduloLong(Z(0(#))), Z(0(#)))") (inst "l=l_0"))
                                    (rule "times_zero_1" (formula "2") (term "1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "3"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_homoEq" (formula "2"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "2") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "expand_addJint" (formula "14") (term "1,0,0,1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "1,1,1,0,0"))
                                    (rule "expand_addJint" (formula "11") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,0,1"))
                                    (rule "expand_moduloInteger" (formula "11") (term "1,1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                                    (rule "mod_axiom" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,1,1,0,0,1,1"))
                                    (rule "equal_literals" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "13") (term "1,1"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                    (rule "add_literals" (formula "13") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "mod_axiom" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "13") (term "0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                    (rule "add_literals" (formula "13") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "12") (term "0"))
                                    (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                    (rule "polySimp_homoEq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                    (rule "polyDiv_pullOut" (formula "12") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "12") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0"))
                                    (rule "mul_literals" (formula "12") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "expand_moduloLong" (formula "2") (term "0"))
                                    (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                    (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                    (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_homoEq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "times_zero_1" (formula "2") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "2") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "expand_moduloInteger" (formula "14") (term "1,0,0,1,0,1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1,0,0,1,0,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,0,0,1,0,1,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,1,0,0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,0,0,1,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,0,1,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,1,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,1,1,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,1,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,1,1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,0,1"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                    (rule "mod_axiom" (formula "11") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,0,0,0,1"))
                                    (rule "equal_literals" (formula "11") (term "0,0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                    (rule "nnf_imp2or" (formula "10") (term "0"))
                                    (rule "expand_moduloInteger" (formula "13") (term "0"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "expand_addJint" (formula "14") (term "1,1,1,1,0,0"))
                                    (rule "expand_subJint" (formula "11") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "11") (term "0,0,1"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,1"))
                                    (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1"))
                                    (rule "mul_literals" (formula "11") (term "1,0,1"))
                                    (rule "polyMod_pullOut" (formula "11") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,1"))
                                    (rule "mod_axiom" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,0,0,1"))
                                    (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "13") (term "1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,1,1"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "mod_axiom" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "13") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        moduloInt(add(Z(2(3(#))),
                      result_numberOfLeadingZeros_0))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=add(mul(div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
                result_numberOfLeadingZeros_0),
            Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
        Z(neglit(1(#)))),
    div(add(Z(neglit(6(1(6(3(8(4(7(4(1(2(#)))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "13") (term "0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,1"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "13") (term "1"))
                                    (rule "add_literals" (formula "13") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,1"))
                                    (rule "add_zero_right" (formula "13") (term "1"))
                                    (rule "expand_moduloInteger" (formula "14") (term "1,1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,1,1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                                    (rule "polyMod_pullOut" (formula "11") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,1,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "mod_axiom" (formula "11") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                    (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                    (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_0"))
                                    (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "equal_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "add_literals" (formula "5") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1") (ifseqformula "6"))
                                    (rule "times_zero_2" (formula "4") (term "1"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "times_zero_2" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "1,0,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=mul(div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                    (rule "equal_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "14") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                    (rule "add_literals" (formula "14") (term "0,1"))
                                    (rule "add_zero_left" (formula "14") (term "1"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "expand_subJint" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,1,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,1,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "div_axiom" (formula "13") (term "0,0") (inst "quotient=quotient_1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                                    (rule "polySimp_homoEq" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                    (rule "mul_literals" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "12"))
                                    (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "17") (term "1,1"))
                                    (rule "add_literals" (formula "17") (term "1"))
                                    (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "18"))
                                    (rule "add_literals" (formula "14") (term "1"))
                                    (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "false_right" (formula "18"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "expand_moduloInteger" (formula "17") (term "1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "17") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,1,1,0,0"))
                                    (rule "polyMod_pullOut" (formula "17") (term "1,1,1,0,0") (inst "polyDivCoeff=div(add(Z(neglit(5(1(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,1,1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "17") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(2(#))"))
                                    (rule "equal_literals" (formula "17") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                    (rule "div_axiom" (formula "13") (term "0,1,0,0,0,1,1,0") (inst "quotient=quotient_2"))
                                    (rule "mul_literals" (formula "13") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "13") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "equal_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                                    (rule "add_literals" (formula "15") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "1"))
                                    (rule "add_literals" (formula "15") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "13"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,1,0") (ifseqformula "13"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(1(#))"))
                                    (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "div_axiom" (formula "18") (term "0,1,1,1,0,0") (inst "quotient=quotient_3"))
                                    (rule "equal_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1,1,1"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1"))
                                    (rule "add_literals" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                    (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "19"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "12"))
                                    (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "23") (term "1,1"))
                                    (rule "add_literals" (formula "23") (term "1"))
                                    (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "19") (term "1,1"))
                                    (rule "add_literals" (formula "19") (term "1"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEqRigid" (formula "22") (term "0,1,0,1,1,0,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "22") (term "1,0,1,1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "applyEq" (formula "18") (term "1") (ifseqformula "20"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "commute_or" (formula "20") (term "0,0,0,0"))
                                    (rule "div_axiom" (formula "23") (term "0") (inst "quotient=quotient_4"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "27"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                                    (rule "times_zero_1" (formula "16") (term "0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "inEqSimp_contradInEq3" (formula "16") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0"))
                                    (rule "greater_literals" (formula "16") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                              )
                              (branch "Assume moduloInt(moduloLong(i / 4294967296)) != i / 4294967296"
                                 (rule "expand_inInt" (formula "12"))
                                 (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "12") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                                 (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "4"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "mod_axiom" (formula "2") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "div_literals" (formula "2") (term "0,1,0"))
                                 (rule "times_zero_2" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "mod_axiom" (formula "1") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                 (rule "div_literals" (formula "1") (term "0,1,0"))
                                 (rule "times_zero_2" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                                 (rule "expand_addJint" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "13") (term "1,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,1,0,0"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "expand_addJint" (formula "10") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "expand_subJint" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0"))
                                 (rule "expand_moduloLong" (formula "2") (term "0,0"))
                                 (rule "replace_long_RANGE" (formula "2") (term "1,1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
                                 (rule "replace_long_MIN" (formula "2") (term "0,0,0"))
                                 (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "9") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,1,1,0"))
                                 (rule "expand_addJint" (formula "12") (term "0"))
                                 (rule "expand_subJint" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "10") (term "0,0,0,1"))
                                 (rule "expand_addJint" (formula "13") (term "1,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "10") (term "1,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,1,1,1,0,0"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "2") (term "0"))
                                 (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                 (rule "mod_axiom" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "expand_moduloInteger" (formula "12") (term "0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "mul_literals" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,0"))
                                 (rule "equal_literals" (formula "12") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0"))
                                 (rule "mul_literals" (formula "12") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "expand_addJint" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
                                 (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                                 (rule "mod_axiom" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0,0,1"))
                                 (rule "equal_literals" (formula "10") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "expand_moduloInteger" (formula "13") (term "1,0,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1,0,1,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                 (rule "expand_subJint" (formula "10") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "10") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "10") (term "0,1,1,0,1"))
                                 (rule "replace_int_MIN" (formula "10") (term "0,0,1,1,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,1,0,1"))
                                 (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,1,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "1,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                 (rule "mod_axiom" (formula "10") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "10") (term "0,0,1,1,0,1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,0,1"))
                                 (rule "expand_moduloInteger" (formula "13") (term "1,0,0,1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0,0,1,1,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0,0,1,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,1,0,0"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "13") (term "0,1,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "10") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,1,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "10") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                 (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                 (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "10") (term "0,1,0,0,0,0,1"))
                                 (rule "replace_int_MIN" (formula "10") (term "0,0,1,0,0,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,0,0,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,1"))
                                 (rule "mod_axiom" (formula "10") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0,0,1"))
                                 (rule "equal_literals" (formula "10") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "10") (term "0,0,1,0,1,0,1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,0,1,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "1,0,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,1,0,1"))
                                 (rule "times_zero_1" (formula "10") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "10") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "1,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,1,0,1"))
                                 (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                 (rule "polyMod_pullOut" (formula "13") (term "1,1,1,0,0") (inst "polyDivCoeff=div(add(Z(neglit(5(1(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "div_axiom" (formula "11") (term "0") (inst "quotient=quotient_0"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "newSym_eq" (formula "5") (inst "newSymDef=mul(quotient_0, Z(0(#)))") (inst "l=l_0"))
                                 (rule "times_zero_1" (formula "5") (term "1,1"))
                                 (rule "add_zero_right" (formula "5") (term "1"))
                                 (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1") (ifseqformula "6"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "6"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "6"))
                                 (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "times_zero_1" (formula "15") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "15") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "times_zero_1" (formula "15") (term "0,0"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "polyDiv_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "5") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                 (rule "div_literals" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "15"))
                                 (rule "add_zero_right" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "15") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "false_right" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                 (rule "times_zero_1" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_contradInEq3" (formula "5") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "greater_literals" (formula "5") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                           )
                           (branch "i ≥ 0 FALSE"
                              (rule "expand_inInt" (formula "13") (term "0,0,0,0"))
                              (rule "expand_inInt" (formula "10"))
                              (rule "replace_int_MAX" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,0,0"))
                              (rule "replace_int_MAX" (formula "10") (term "1,0"))
                              (rule "replace_int_MIN" (formula "10") (term "0,1"))
                              (rule "notLeft" (formula "1"))
                              (rule "andLeft" (formula "9"))
                              (rule "inEqSimp_geqRight" (formula "16"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "mod_axiom" (formula "3") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "div_literals" (formula "3") (term "0,1,0"))
                              (rule "mul_literals" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "mod_axiom" (formula "2") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "div_literals" (formula "2") (term "0,1,0"))
                              (rule "mul_literals" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                              (rule "leq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_notGeq" (formula "9") (term "0,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                              (rule "expand_addJlong" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                              (rule "expand_addJint" (formula "10") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "expand_moduloInteger" (formula "9") (term "0,0,0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "replace_int_MIN" (formula "9") (term "0,0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "9") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "9") (term "0,0,0,0,1,1,0"))
                              (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                              (rule "expand_subJint" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0"))
                              (rule "expand_addJint" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,1"))
                              (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1"))
                              (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,1"))
                              (rule "expand_addJint" (formula "11") (term "0"))
                              (rule "expand_moduloLong" (formula "2") (term "0,0"))
                              (rule "replace_long_RANGE" (formula "2") (term "1,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
                              (rule "replace_long_MIN" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "expand_moduloInteger" (formula "10") (term "1,1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "10") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "9") (term "1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                              (rule "mod_axiom" (formula "9") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "11") (term "0"))
                              (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "11") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "mod_axiom" (formula "11") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                              (rule "polyDiv_pullOut" (formula "11") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "11") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0"))
                              (rule "mul_literals" (formula "11") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "expand_moduloLong" (formula "2") (term "1,0,1,0,0"))
                              (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,1,0,0"))
                              (rule "replace_long_MIN" (formula "2") (term "0,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                              (rule "mod_axiom" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,1,0,0"))
                              (rule "polyMod_pullOut" (formula "2") (term "1,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                              (rule "expand_moduloInteger" (formula "10") (term "1,0,0,1"))
                              (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,0,0,1"))
                              (rule "replace_int_RANGE" (formula "10") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                              (rule "mod_axiom" (formula "10") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                              (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,0,0,1"))
                              (rule "equal_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                              (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,0,0"))
                              (rule "mod_axiom" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,1,0,0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        addJint(Z(2(3(#))),
                result_numberOfLeadingZeros_0)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,1,1,0,0"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0,1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,1,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,0,1,1,0,0"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,0,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "9") (term "0"))
                              (rule "expand_moduloLong" (formula "2") (term "1,0,1,0,0"))
                              (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,1,0,0"))
                              (rule "replace_long_MIN" (formula "2") (term "0,1,0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,1,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                              (rule "mod_axiom" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,0"))
                              (rule "div_literals" (formula "2") (term "0,1,1,0,1,0,0"))
                              (rule "times_zero_2" (formula "2") (term "1,1,0,1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,1,0,0"))
                              (rule "polyMod_pullOut" (formula "2") (term "1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                              (rule "expand_subJint" (formula "10") (term "1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "10") (term "0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "expand_subJint" (formula "10") (term "0,0,1"))
                              (rule "polySimp_elimSub" (formula "10") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,0,1"))
                              (rule "expand_addJint" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "9") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "2") (term "0"))
                              (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,1,0"))
                              (rule "mod_axiom" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(neglit(5(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,0,1,1"))
                              (rule "polyMod_pullOut" (formula "10") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "1,1,0,1,1,1,0,0,1,1"))
                              (rule "times_zero_1" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                              (rule "add_zero_right" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "10") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                              (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                              (rule "expand_addJint" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                              (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
                              (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
                              (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1"))
                              (rule "mul_literals" (formula "10") (term "1,0,1"))
                              (rule "polyMod_pullOut" (formula "10") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "10") (term "0,0,0,1"))
                              (rule "mod_axiom" (formula "10") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,1"))
                              (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                              (rule "equal_literals" (formula "10") (term "0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                              (rule "expand_addJint" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0"))
                              (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,0,1,1,0,0"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,0,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,1,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,1,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,0,0"))
                              (rule "mod_axiom" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,1,0,0") (inst "polyDivCoeff=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,1,1,0,0"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0,1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,1,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,0,1,1,0,0"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,0,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0"))
                              (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,0,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,1,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "div_axiom" (formula "11") (term "0,0") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "1") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_homoEq" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "mul_literals" (formula "14") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "10") (term "0,0"))
                              (rule "add_zero_left" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "10") (term "0,0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "2"))
                              (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "11"))
                              (rule "mul_literals" (formula "4") (term "1,1"))
                              (rule "add_literals" (formula "4") (term "1"))
                              (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                              (rule "qeq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "11"))
                              (rule "mul_literals" (formula "3") (term "1,1"))
                              (rule "add_literals" (formula "3") (term "1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "10"))
                              (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "10"))
                              (rule "mul_literals" (formula "15") (term "1,1"))
                              (rule "add_literals" (formula "15") (term "1"))
                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "inEqSimp_strengthen0" (formula "12") (ifseqformula "16"))
                              (rule "add_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "12"))
                              (rule "mul_literals" (formula "16") (term "1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "11"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "shift_paren_or" (formula "11") (term "0"))
                              (rule "div_axiom" (formula "3") (term "1,0,0") (inst "quotient=quotient_1"))
                              (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "3") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "equal_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "polySimp_addComm1" (formula "5") (term "1"))
                              (rule "add_literals" (formula "5") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "3"))
                              (rule "mod_axiom" (formula "6") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "add_zero_left" (formula "6") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "newSym_eq" (formula "6") (inst "newSymDef=mul(quotient_1, Z(0(#)))") (inst "l=l_0"))
                              (rule "times_zero_1" (formula "6") (term "1,1"))
                              (rule "add_zero_right" (formula "6") (term "1"))
                              (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "7"))
                              (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                              (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "7"))
                              (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=l_0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "6") (term "0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_homoEq" (formula "6"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,1,0"))
                              (rule "div_literals" (formula "6") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "6") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "1,0"))
                              (rule "times_zero_1" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                              (rule "mul_literals" (formula "8") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "leq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                              (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "4") (ifseqformula "9"))
                              (rule "times_zero_1" (formula "4") (term "1,1,0"))
                              (rule "greater_literals" (formula "4") (term "0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                        (branch "Assume 31 % 64 != 31"
                           (rule "expand_inInt" (formula "13") (term "0,0,0,0"))
                           (rule "expand_inInt" (formula "10"))
                           (rule "pow_literals" (formula "4") (term "1,0,0,2,0,0"))
                           (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,0,0"))
                           (rule "replace_int_MAX" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "10") (term "0,1"))
                           (rule "replace_int_MAX" (formula "10") (term "1,0"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "1"))
                           (rule "andLeft" (formula "8"))
                           (rule "polySimp_elimNeg" (formula "2") (term "1,1,1,0,1,2,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,2,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,2,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,2,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9"))
                           (rule "mod_axiom" (formula "2") (term "1,0,2,0,1,2,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2,0,1,2,0,0"))
                           (rule "div_literals" (formula "2") (term "0,1,1,0,2,0,1,2,0,0"))
                           (rule "times_zero_2" (formula "2") (term "1,1,0,2,0,1,2,0,0"))
                           (rule "add_zero_right" (formula "2") (term "1,0,2,0,1,2,0,0"))
                           (rule "pow_literals" (formula "2") (term "0,2,0,1,2,0,0"))
                           (rule "mul_literals" (formula "2") (term "2,0,1,2,0,0"))
                           (rule "mod_axiom" (formula "1") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                           (rule "div_literals" (formula "1") (term "0,1,0"))
                           (rule "times_zero_2" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "mod_axiom" (formula "14") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                           (rule "div_literals" (formula "14") (term "0,1,0"))
                           (rule "times_zero_2" (formula "14") (term "1,0"))
                           (rule "add_zero_right" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "closeTrue" (formula "14"))
                        )
                     )
                     (branch "Assume 32 % 64 != 32"
                        (rule "expand_inInt" (formula "12") (term "0,0,0,0"))
                        (rule "expand_inInt" (formula "9"))
                        (rule "replace_int_MAX" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,0,0"))
                        (rule "replace_int_MAX" (formula "9") (term "1,0"))
                        (rule "replace_int_MIN" (formula "9") (term "0,1"))
                        (rule "notLeft" (formula "2"))
                        (rule "notLeft" (formula "1"))
                        (rule "andLeft" (formula "7"))
                        (rule "polySimp_elimNeg" (formula "1") (term "1,0,1,0,1,0,0"))
                        (rule "polySimp_elimNeg" (formula "1") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "1") (term "1,1,1,0,1,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "1") (term "1,0,1,0,2,0,1,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "1") (term "1,0,1,0,0,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "1") (term "1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,2,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,2,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,2,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,2,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8"))
                        (rule "mod_axiom" (formula "1") (term "1,1,2,0,0,2,0,0"))
                        (rule "div_literals" (formula "1") (term "0,0,1,1,1,2,0,0,2,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,2,0,0,2,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,1,1,2,0,0,2,0,0"))
                        (rule "add_zero_right" (formula "1") (term "1,1,2,0,0,2,0,0"))
                        (rule "pow_literals" (formula "1") (term "1,2,0,0,2,0,0"))
                        (rule "mod_axiom" (formula "1") (term "1,1,2,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,2,0,1,0,0"))
                        (rule "div_literals" (formula "1") (term "0,1,1,1,2,0,1,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,1,1,2,0,1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "1,1,2,0,1,0,0"))
                        (rule "pow_literals" (formula "1") (term "1,2,0,1,0,0"))
                        (rule "mod_axiom" (formula "14") (term "0"))
                        (rule "div_literals" (formula "14") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                        (rule "times_zero_2" (formula "14") (term "1,0"))
                        (rule "add_zero_right" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "closeTrue" (formula "14"))
                     )
                  )
               )
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "12"))
         (rule "closeTrue" (formula "12"))
      )
   )
   (branch "Exceptional Post (numberOfLeadingZeros)"
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "6"))
      (rule "close" (formula "9") (ifseqformula "8"))
   )
   (branch "Pre (numberOfLeadingZeros)"
       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
      (rule "closeTrue" (formula "6"))
   )
)
(branch "if x_3 false"
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elim_double_block_2" (formula "6") (term "1"))
    (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_numberOfLeadingZeros_0,result_numberOfLeadingZeros_0,exc_0") (contract "BitSet.Integer[BitSet.Integer::numberOfLeadingZeros(int)].JML normal_behavior operation contract.0"))
   (branch "Post (numberOfLeadingZeros)"
       (builtin "One Step Simplification" (formula "5"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "9"))
      (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,0"))
      (rule "translateJavaSubInt" (formula "10") (term "1,0,1"))
      (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
      (rule "bitAtDef" (formula "9") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "bitAtDef" (formula "10") (term "0,1"))
      (rule "ifEqualsInteger" (formula "10") (term "1"))
      (rule "equal_literals" (formula "10") (term "1,1,1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,1"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "blockEmpty" (formula "12") (term "1"))
      (rule "commute_and_2" (formula "9") (term "0,0"))
      (rule "commute_and" (formula "9") (term "0,0,0"))
      (rule "methodCallReturn" (formula "12") (term "1"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "tryEmpty" (formula "12") (term "1"))
      (rule "emptyModality" (formula "12") (term "1"))
      (rule "andRight" (formula "12"))
      (branch "Case 1"
         (rule "andRight" (formula "12"))
         (branch "Case 1"
            (rule "andRight" (formula "12"))
            (branch "Case 1"
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "7")))
                  (rule "closeTrue" (formula "12"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_leqRight" (formula "12"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,2,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,2,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,2,0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,2,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,2,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,2,0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "12") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,2,0,1,2,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,1,0,2,0,1,2,0,0"))
                  (rule "add_literals" (formula "12") (term "0,1,0,2,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "10") (term "0,1,0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,0,1,0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "pow_literals" (formula "10") (term "0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "12") (term "1,1,2,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,2,0,1,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,1,1,2,0,1,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,2,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,2,0,1,0,0"))
                  (rule "pow_literals" (formula "12") (term "1,2,0,1,0,0"))
                  (rule "mod_axiom" (formula "10") (term "1,1,2,0,0,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "1,1,2,0,0,2,0,0,0,0,1,1,0"))
                  (rule "pow_literals" (formula "10") (term "1,2,0,0,2,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "11") (term "1,1,2,0,1,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,2,0,1,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,1,1,2,0,1,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,1,1,2,0,1,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "1,1,2,0,1,0,0,0,0,1,1"))
                  (rule "pow_literals" (formula "11") (term "1,2,0,1,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "12") (term "1,1,2,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,2,0,0,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,1,1,2,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,2,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,2,0,0,2,0,0"))
                  (rule "pow_literals" (formula "12") (term "1,2,0,0,2,0,0"))
                  (rule "mod_axiom" (formula "10") (term "0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "pow_literals" (formula "10") (term "0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,1,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,1,0,1,0,0"))
                  (rule "pow_literals" (formula "12") (term "0,1,0,1,0,0"))
                  (rule "mod_axiom" (formula "11") (term "1,1,2,0,0,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,2,0,0,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,1,1,2,0,0,2,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,1,1,2,0,0,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "1,1,2,0,0,2,0,0,0,0,1,1"))
                  (rule "pow_literals" (formula "11") (term "1,2,0,0,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,0,2,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,1,0,0,2,0,0"))
                  (rule "pow_literals" (formula "12") (term "0,1,0,0,2,0,0"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,0,1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "pow_literals" (formula "11") (term "0,1,0,1,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "10") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "pow_literals" (formula "11") (term "0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "10") (term "1,1,2,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,2,0,1,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,1,1,2,0,1,0,0,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,1,1,2,0,1,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "1,1,2,0,1,0,0,0,0,1,1,0"))
                  (rule "pow_literals" (formula "10") (term "1,2,0,1,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "10") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "10") (term "1,0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,1,0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "1,0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,2,0,0,0,0,1,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0,2,0,0,0,0,1,1,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "pow_literals" (formula "10") (term "0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "12") (term "1,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,1,0,0,0,0,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0,0,0,2,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,2,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0,2,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "pow_literals" (formula "12") (term "0,1,0,1,0,0"))
                  (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,1,0,0,0,1,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,1,0,0,0,1,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "1,0,0,0,1,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,0,1,1"))
                  (rule "leq_literals" (formula "11") (term "0,0,1,0,0,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "pow_literals" (formula "11") (term "0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,1,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,0,1,1,1,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,0,1,1,1,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,1,1,0,1,2,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,1,0,1,2,0,0"))
                  (rule "pow_literals" (formula "12") (term "1,1,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,0,0,1,2,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,1,0,0,0,1,2,0,0"))
                  (rule "add_literals" (formula "12") (term "0,1,0,0,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "12") (term "1,0,2,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,2,0,1,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,1,0,2,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,0,2,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,2,0,1,2,0,0"))
                  (rule "pow_literals" (formula "12") (term "0,2,0,1,2,0,0"))
                  (rule "mul_literals" (formula "12") (term "2,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,1,0,0,0,1,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "pow_literals" (formula "12") (term "1,1,0,1,2,0,0"))
                  (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "pow_literals" (formula "11") (term "0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "2,0,1,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,1,0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "1,0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,2,0,0,0,0,1,1"))
                  (rule "leq_literals" (formula "11") (term "0,0,0,2,0,0,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "mod_axiom" (formula "10") (term "0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "pow_literals" (formula "10") (term "1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "10") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "10") (term "1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "pow_literals" (formula "10") (term "0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,2,0,0"))
                  (rule "div_literals" (formula "12") (term "0,1,1,0,0,0,1,2,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,0,0,0,1,2,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0,0,1,2,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,2,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,1,2,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "mod_axiom" (formula "11") (term "0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "pow_literals" (formula "11") (term "1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "div_literals" (formula "11") (term "0,1,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "times_zero_2" (formula "11") (term "1,1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "1,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "leq_literals" (formula "11") (term "0,0,1,2,0,0,0,0,1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "10") (term "1,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,1,2,0,0,0,0,1,1,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "closeFalse" (formula "9"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "allRight" (formula "12") (inst "sk=index_0"))
                  (rule "impRight" (formula "12"))
                  (rule "orRight" (formula "13"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "3"))
                  (rule "times_minus_one_1" (formula "15") (term "1,0,1,0,1,0,0"))
                  (rule "times_minus_one_1" (formula "15") (term "1,0,1,0,0,2,0,0"))
                  (rule "times_minus_one_1" (formula "15") (term "1,0,0,0,0,1,2,0,0"))
                  (rule "times_minus_one_1" (formula "15") (term "1,1,1,0,1,2,0,0"))
                  (rule "times_minus_one_1" (formula "15") (term "1,0,0,1,1,1,0,1,2,0,0"))
                  (rule "times_minus_one_1" (formula "15") (term "1,0,1,0,2,0,1,2,0,0"))
                  (rule "times_minus_one_1" (formula "14") (term "1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "times_minus_one_1" (formula "14") (term "1,0,1,0,0,2,0,0,0,0,1,1"))
                  (rule "times_minus_one_1" (formula "14") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                  (rule "times_minus_one_1" (formula "14") (term "1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "times_minus_one_1" (formula "14") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                  (rule "times_minus_one_1" (formula "14") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                  (rule "times_minus_one_1" (formula "13") (term "1,0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "times_minus_one_1" (formula "13") (term "1,0,1,0,0,2,0,0,0,0,1,1,0"))
                  (rule "times_minus_one_1" (formula "13") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_minus_one_1" (formula "13") (term "1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_minus_one_1" (formula "13") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_minus_one_1" (formula "13") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                  (rule "times_minus_one_1" (formula "2") (term "1,0,1"))
                  (rule "ifthenelse_split" (formula "15") (term "0,0") (userinteraction))
                  (branch "i ≥ 0 TRUE"
                     (rule "eqTermCut" (formula "16") (term "0,0,0,0,0") (inst "s=Z(2(3(#)))") (userinteraction))
                     (branch "Assume 32 % 64 = 32"
                        (rule "applyEqRigid" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "1,1,2,0,1,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,0,0,0,2,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,1,0,0,2,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,0,0,0,1,2,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "1,1,2,0,0,2,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "0,0,0,1,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "0,1,0,1,0,1,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "1,1,2,0,1,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "0,0,0,0,2,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "0,1,0,1,0,0,2,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "1,1,2,0,0,2,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "0,1,0,0,0,0,1,2,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "16") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0,0,0,0,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0,1,0,1,0,0,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "1,1,2,0,0,0") (ifseqformula "1") (userinteraction))
                        (rule "less_literals" (formula "17") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "less_literals" (formula "15") (term "0,0,1,0,0,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                        (rule "less_literals" (formula "16") (term "0,0,1,0,0,0,0,1,1"))
                         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "2")))
                        (rule "pow_literals" (formula "17") (term "1,0,0,0"))
                        (rule "pow_literals" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "pow_literals" (formula "16") (term "1,0,0,0,0,0,1,1"))
                        (rule "eqTermCut" (formula "17") (term "0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                        (branch "Assume moduloInt(moduloLong(i / 4294967296)) = i / 4294967296"
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "1") (userinteraction))
                           (rule "applyEq" (formula "17") (term "0,0,0,1,1") (ifseqformula "1") (userinteraction))
                           (rule "applyEq" (formula "16") (term "0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                           (rule "eqTermCut" (formula "16") (term "1,1,0,0") (inst "s=sub(Z(2(3(#))), result_numberOfLeadingZeros_0)") (userinteraction))
                           (branch "Assume subJint(32, result_numberOfLeadingZeros_0) = 32 - result_numberOfLeadingZeros_0"
                              (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "16") (userinteraction))
                              (rule "eqTermCut" (formula "18") (term "1,1,0,0,1,1") (inst "s=sub(sub(Z(2(3(#))), result_numberOfLeadingZeros_0),
    Z(1(#)))") (userinteraction))
                              (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) = 32 - result_numberOfLeadingZeros_0 - 1"
                                 (rule "applyEq" (formula "19") (term "1,1,0,0,1,1") (ifseqformula "18") (userinteraction))
                                 (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "18") (userinteraction))
                                 (rule "sub" (formula "16") (term "1"))
                                 (rule "sub" (formula "18") (term "1"))
                                 (rule "neg_literal" (formula "18") (term "1,1"))
                                 (rule "sub" (formula "18") (term "0,1"))
                                 (rule "sub" (formula "17") (term "1,1,0,0"))
                                 (rule "sub" (formula "19") (term "0,0,1"))
                                 (rule "neg_literal" (formula "19") (term "1,0,0,1"))
                                 (rule "sub" (formula "19") (term "0,0,0,1"))
                                 (rule "sub" (formula "19") (term "1,1,0,0,1,1"))
                                 (rule "neg_literal" (formula "19") (term "1,1,1,0,0,1,1"))
                                 (rule "sub" (formula "19") (term "0,1,1,0,0,1,1"))
                                 (rule "cut" (inst "cutFormula=lt(i<<origin(\"User_Interaction @ node 186193 (cut)\",\"[]\")>>,
   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))<<origin(\"User_Interaction @ node 186193 (cut)\",\"[]\")>>") (userinteraction))
                                 (branch "CUT: i < 4294967296 TRUE"
                                    (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "14"))
                                    (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "14") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1"))
                                    (rule "notRight" (formula "22"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "polySimp_elimNeg" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimNeg" (formula "22") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimNeg" (formula "22") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimNeg" (formula "7") (term "1,0,1"))
                                    (rule "polySimp_elimNeg" (formula "19") (term "1,1"))
                                    (rule "polySimp_elimNeg" (formula "21") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "1"))
                                    (rule "add_literals" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "inEqSimp_commuteGeq" (formula "7"))
                                    (rule "mod_axiom" (formula "4") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "div_literals" (formula "4") (term "0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "3") (term "0"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "expand_addJint" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
                                    (rule "expand_subJint" (formula "12") (term "0"))
                                    (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "6") (term "0"))
                                    (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                    (rule "mod_axiom" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "6") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "6") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "expand_moduloLong" (formula "3") (term "1,0,0"))
                                    (rule "replace_long_RANGE" (formula "3") (term "1,1,1,0,0"))
                                    (rule "replace_long_HALFRANGE" (formula "3") (term "0,0,1,1,0,0"))
                                    (rule "replace_long_MIN" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polyMod_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "expand_subJint" (formula "14") (term "0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "12") (term "0"))
                                    (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                    (rule "add_literals" (formula "12") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "0,1,0"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "12") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "14") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0"))
                                    (rule "mul_literals" (formula "14") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "newSym_eq" (formula "14") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(result_numberOfLeadingZeros_0, Z(0(#)))),
    mul(moduloInt(add(Z(1(#)),
                      result_numberOfLeadingZeros_0)),
        Z(0(#))))") (inst "l=l_0"))
                                    (rule "times_zero_1" (formula "14") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,1"))
                                    (rule "add_zero_right" (formula "14") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1"))
                                    (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                                    (rule "polySimp_homoEq" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "15"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "15") (term "0"))
                                    (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                    (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=l_0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1"))
                                    (rule "add_literals" (formula "15") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "15") (term "0,1,0"))
                                    (rule "add_literals" (formula "15") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "15") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "0,0"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "div_axiom" (formula "16") (term "0,0,0,1,1") (inst "quotient=quotient_0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "16") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "equal_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "polySimp_addComm1" (formula "18") (term "1"))
                                    (rule "add_literals" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "19") (term "0,0,0,1,1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "16"))
                                    (rule "mod_axiom" (formula "3") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "elimGcdEq" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "18"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "21"))
                                    (rule "add_zero_right" (formula "4") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "4"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "false_right" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                    (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "18") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0"))
                                    (rule "greater_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "CUT: i < 4294967296 FALSE"
                                     (opengoal " ")
                                 )
                              )
                              (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) != 32 - result_numberOfLeadingZeros_0 - 1"
                                 (rule "expand_inInt" (formula "13"))
                                 (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                 (rule "replace_int_MAX" (formula "13") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "notRight" (formula "21"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "6") (term "1,0,1"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "21") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1"))
                                 (rule "add_literals" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15"))
                                 (rule "inEqSimp_commuteGeq" (formula "6"))
                                 (rule "mod_axiom" (formula "3") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "div_literals" (formula "3") (term "0,1,0"))
                                 (rule "times_zero_2" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "16"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                                 (rule "expand_subJint" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "14") (term "0,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "2") (term "0"))
                                 (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_homoEq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "expand_subJint" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "expand_subJint" (formula "12") (term "0"))
                                 (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                 (rule "expand_addJint" (formula "15") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
                                 (rule "expand_moduloInteger" (formula "5") (term "0"))
                                 (rule "replace_int_MIN" (formula "5") (term "0,0"))
                                 (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                 (rule "mod_axiom" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "5") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,0"))
                                 (rule "equal_literals" (formula "5") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0"))
                                 (rule "mul_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "expand_addJint" (formula "14") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,0,1"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "expand_moduloLong" (formula "2") (term "1,0,0"))
                                 (rule "replace_long_MIN" (formula "2") (term "0,1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,0"))
                                 (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "expand_moduloInteger" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "12") (term "0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                 (rule "polySimp_homoEq" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0"))
                                 (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "qeq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "12") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "expand_moduloInteger" (formula "15") (term "1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "15") (term "1,1,1,0"))
                                 (rule "replace_int_MIN" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,1,0"))
                                 (rule "equal_literals" (formula "15") (term "0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,0,1"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                 (rule "mod_axiom" (formula "14") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0,1"))
                                 (rule "expand_subJint" (formula "15") (term "0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "expand_addJint" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "expand_addJint" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "14") (term "0,0,1"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1"))
                                 (rule "mul_literals" (formula "14") (term "1,0,1"))
                                 (rule "polyMod_pullOut" (formula "14") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,1"))
                                 (rule "mod_axiom" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,0,0,1"))
                                 (rule "equal_literals" (formula "14") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1"))
                                 (rule "expand_moduloInteger" (formula "15") (term "0"))
                                 (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_homoEq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "polyMod_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "mod_axiom" (formula "15") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1"))
                                 (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(5(7(9(0(5(4(2(4(4(6(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(1(#))"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,1,0"))
                                 (rule "leq_literals" (formula "15") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "equal_literals" (formula "15") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,0,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "div_axiom" (formula "17") (term "0,0") (inst "quotient=quotient_0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                 (rule "div_axiom" (formula "17") (term "0") (inst "quotient=quotient_1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0,0,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "6") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "elimGcdEq" (formula "6") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_1),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "leq_literals" (formula "6") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "8") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "22"))
                                 (rule "add_zero_right" (formula "8") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "8"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "false_right" (formula "22"))
                                 (rule "div_axiom" (formula "11") (term "0,0") (inst "quotient=quotient_2"))
                                 (rule "equal_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "qeq_literals" (formula "11") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1,1,1"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1"))
                                 (rule "add_literals" (formula "13") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "12"))
                                 (rule "times_zero_1" (formula "19") (term "0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "21"))
                                 (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "15") (term "1,1"))
                                 (rule "add_literals" (formula "15") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "12") (term "1,1"))
                                 (rule "add_literals" (formula "12") (term "1"))
                                 (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "16") (term "1,1"))
                                 (rule "add_literals" (formula "16") (term "1"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEqRigid" (formula "16") (term "0,1,0,1") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "16") (term "1,0,1"))
                                 (rule "add_literals" (formula "16") (term "0,1"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "13"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "div_axiom" (formula "20") (term "0") (inst "quotient=quotient_3"))
                                 (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "equal_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "1"))
                                 (rule "add_literals" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0"))
                                 (rule "applyEqRigid" (formula "21") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0"))
                                 (rule "commute_and" (formula "5") (term "0,1"))
                                 (rule "div_axiom" (formula "24") (term "0") (inst "quotient=quotient_4"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,1,0,0,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,1,1"))
                                 (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                 (rule "mul_literals" (formula "16") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "22") (term "0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_strengthen0" (formula "22") (ifseqformula "29"))
                                 (rule "add_literals" (formula "22") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "22"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0"))
                                 (rule "qeq_literals" (formula "29") (term "0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "greater_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch "Assume subJint(32, result_numberOfLeadingZeros_0) != 32 - result_numberOfLeadingZeros_0"
                              (rule "expand_inInt" (formula "13"))
                              (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                              (rule "replace_int_MAX" (formula "13") (term "1,0"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1"))
                              (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                              (rule "notRight" (formula "20"))
                              (rule "notLeft" (formula "17"))
                              (rule "andLeft" (formula "14"))
                              (rule "polySimp_elimNeg" (formula "6") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "20") (term "1"))
                              (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "inEqSimp_commuteGeq" (formula "6"))
                              (rule "mod_axiom" (formula "3") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "div_literals" (formula "3") (term "0,1,0"))
                              (rule "times_zero_2" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "13"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                              (rule "expand_addJint" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "expand_moduloInteger" (formula "2") (term "0"))
                              (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "2") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "expand_addJint" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0,1"))
                              (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                              (rule "expand_subJint" (formula "14") (term "0"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "5") (term "0"))
                              (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                              (rule "add_literals" (formula "5") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "mod_axiom" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                              (rule "mul_literals" (formula "5") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "5") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,0"))
                              (rule "equal_literals" (formula "5") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "expand_moduloInteger" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,1,0,0,1,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,1,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "expand_moduloLong" (formula "2") (term "1,0,0"))
                              (rule "replace_long_RANGE" (formula "2") (term "1,1,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,1,0,0"))
                              (rule "replace_long_MIN" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "mod_axiom" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                              (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "14") (term "0"))
                              (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "14") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "mod_axiom" (formula "14") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,1,0"))
                              (rule "add_literals" (formula "14") (term "1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "times_zero_1" (formula "14") (term "0,1,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,0"))
                              (rule "qeq_literals" (formula "14") (term "1,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "leq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "14") (term "0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "expand_moduloInteger" (formula "13") (term "1,0,0,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1"))
                              (rule "mod_axiom" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,0,0,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,1,0,0,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "expand_subJint" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "expand_subJint" (formula "13") (term "0,0,1"))
                              (rule "polySimp_elimSub" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                              (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                              (rule "polyMod_pullOut" (formula "13") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,1,1,1,0,0,1,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                              (rule "add_zero_right" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0,0,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1"))
                              (rule "mul_literals" (formula "13") (term "1,0,1"))
                              (rule "polyMod_pullOut" (formula "13") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,1"))
                              (rule "mod_axiom" (formula "13") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,0,0,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "div_axiom" (formula "15") (term "0") (inst "quotient=quotient_0"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "15") (term "0,0,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "0,0,0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
                              (rule "mod_axiom" (formula "5") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "5") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "0,0"))
                              (rule "add_zero_left" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "elimGcdEq" (formula "5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "add_literals" (formula "5") (term "1,0,0"))
                              (rule "add_zero_left" (formula "5") (term "0,0,1"))
                              (rule "add_zero_left" (formula "5") (term "0,0,0"))
                              (rule "add_zero_left" (formula "5") (term "0,1,0"))
                              (rule "times_zero_1" (formula "5") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "times_zero_1" (formula "5") (term "0,1,0"))
                              (rule "times_zero_1" (formula "5") (term "0,0,0"))
                              (rule "qeq_literals" (formula "5") (term "1,0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "7") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "div_axiom" (formula "20") (term "0,0") (inst "quotient=quotient_1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                              (rule "div_axiom" (formula "11") (term "0,0") (inst "quotient=quotient_2"))
                              (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                              (rule "equal_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "qeq_literals" (formula "11") (term "0,1"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "1"))
                              (rule "add_literals" (formula "13") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "12"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "19") (term "0,0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "21"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "mul_literals" (formula "14") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "6"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "22"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "21"))
                              (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "13"))
                              (rule "mul_literals" (formula "16") (term "1,1"))
                              (rule "add_literals" (formula "16") (term "1"))
                              (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "13"))
                              (rule "mul_literals" (formula "15") (term "1,1"))
                              (rule "add_literals" (formula "15") (term "1"))
                              (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "13"))
                              (rule "mul_literals" (formula "12") (term "1,1"))
                              (rule "add_literals" (formula "12") (term "1"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "applyEq" (formula "16") (term "0,1,0,1") (ifseqformula "13"))
                              (rule "mul_literals" (formula "16") (term "1,0,1"))
                              (rule "add_literals" (formula "16") (term "0,1"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "13"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                              (rule "leq_literals" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "shift_paren_or" (formula "20") (term "0"))
                              (rule "div_axiom" (formula "22") (term "0") (inst "quotient=quotient_3"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "22"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "26"))
                              (rule "add_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "3"))
                              (rule "add_zero_left" (formula "26") (term "0,0"))
                              (rule "mul_literals" (formula "26") (term "0,0"))
                              (rule "leq_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "false_right" (formula "26"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                              (rule "mul_literals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                              (rule "mul_literals" (formula "17") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "23") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "23") (term "1,1,0"))
                              (rule "greater_literals" (formula "23") (term "0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "closeFalse" (formula "23"))
                           )
                        )
                        (branch "Assume moduloInt(moduloLong(i / 4294967296)) != i / 4294967296"
                           (rule "expand_inInt" (formula "13"))
                           (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                           (rule "replace_int_MAX" (formula "13") (term "1,0"))
                           (rule "replace_int_MIN" (formula "13") (term "0,1"))
                           (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                           (rule "notRight" (formula "19"))
                           (rule "notLeft" (formula "2"))
                           (rule "andLeft" (formula "13"))
                           (rule "polySimp_elimNeg" (formula "5") (term "1,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_commuteGeq" (formula "5"))
                           (rule "mod_axiom" (formula "2") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "div_literals" (formula "2") (term "0,1,0"))
                           (rule "times_zero_2" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
                           (rule "leq_literals" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                           (rule "leq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                           (rule "leq_literals" (formula "5") (term "0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "11"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,1,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,1,0"))
                           (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1"))
                           (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1"))
                           (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1"))
                           (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1"))
                           (rule "expand_subJint" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
                           (rule "expand_subJint" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1,0"))
                           (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1,0"))
                           (rule "expand_addJint" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,1,0,0,1"))
                           (rule "expand_moduloLong" (formula "14") (term "0,0"))
                           (rule "replace_long_RANGE" (formula "14") (term "1,1,0,0"))
                           (rule "replace_long_HALFRANGE" (formula "14") (term "0,0,1,0,0"))
                           (rule "replace_long_MIN" (formula "14") (term "0,0,0"))
                           (rule "expand_moduloInteger" (formula "13") (term "0"))
                           (rule "replace_int_MIN" (formula "13") (term "0,0"))
                           (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                           (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                           (rule "polySimp_homoEq" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "expand_moduloInteger" (formula "4") (term "0"))
                           (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                           (rule "replace_int_MIN" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                           (rule "add_literals" (formula "4") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "mod_axiom" (formula "4") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                           (rule "mul_literals" (formula "4") (term "0,0,1"))
                           (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0"))
                           (rule "equal_literals" (formula "4") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                           (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0"))
                           (rule "mul_literals" (formula "4") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "expand_moduloLong" (formula "12") (term "1,0,1,0,0,0,1,1"))
                           (rule "replace_long_MIN" (formula "12") (term "0,1,0,1,0,0,0,1,1"))
                           (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,1,0,1,0,0,0,1,1"))
                           (rule "replace_long_RANGE" (formula "12") (term "1,1,1,0,1,0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1"))
                           (rule "mod_axiom" (formula "12") (term "1,0,1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,1"))
                           (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,1,1"))
                           (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0"))
                           (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0"))
                           (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0"))
                           (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                           (rule "mod_axiom" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                           (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,1,0,0"))
                           (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                           (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0,1,1"))
                           (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                           (rule "mod_axiom" (formula "12") (term "1,1,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                           (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                           (rule "expand_moduloInteger" (formula "14") (term "0"))
                           (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                           (rule "replace_int_MIN" (formula "14") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                           (rule "add_literals" (formula "14") (term "0,0,1,0"))
                           (rule "mod_axiom" (formula "14") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "14"))
                           (rule "mul_literals" (formula "14") (term "1"))
                           (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0"))
                           (rule "expand_moduloLong" (formula "13") (term "1,0,0"))
                           (rule "replace_long_MIN" (formula "13") (term "0,1,0,0"))
                           (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,1,0,0"))
                           (rule "replace_long_RANGE" (formula "13") (term "1,1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "mod_axiom" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0"))
                           (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0"))
                           (rule "expand_moduloLong" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,1,0,0,0,1,1,0"))
                           (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                           (rule "replace_long_MIN" (formula "11") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "mod_axiom" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,1,1,0"))
                           (rule "expand_moduloInteger" (formula "12") (term "1,0,0,1"))
                           (rule "replace_int_RANGE" (formula "12") (term "1,1,1,0,0,1"))
                           (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,0,0,1"))
                           (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                           (rule "mod_axiom" (formula "12") (term "1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,0,0,1"))
                           (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,0,0,1"))
                           (rule "equal_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,0,0,1"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "expand_addJint" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                           (rule "expand_addJint" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "expand_subJint" (formula "12") (term "0,0,1"))
                           (rule "polySimp_elimSub" (formula "12") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                           (rule "expand_moduloInteger" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                           (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                           (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                           (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,1,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "equal_literals" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0"))
                           (rule "expand_moduloInteger" (formula "12") (term "0,0,1"))
                           (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,1"))
                           (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,1"))
                           (rule "replace_int_MIN" (formula "12") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1"))
                           (rule "mul_literals" (formula "12") (term "1,0,1"))
                           (rule "polyMod_pullOut" (formula "12") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0,1"))
                           (rule "mod_axiom" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "12") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,0,0,1"))
                           (rule "equal_literals" (formula "12") (term "0,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                           (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                           (rule "mod_axiom" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,1,0,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                           (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,1,0,0,1,1"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "equal_literals" (formula "12") (term "0,0,1,0,0,1,1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "1,1,0,1,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "12") (term "1,0,1,1,0,0,1,1"))
                           (rule "add_zero_right" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "div_axiom" (formula "15") (term "0,0") (inst "quotient=quotient_0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "div_axiom" (formula "14") (term "1,1") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "15") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "16") (term "1,0,1,0,0,0,1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "1"))
                           (rule "mod_axiom" (formula "18") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0"))
                           (rule "mod_axiom" (formula "15") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,1,1,0"))
                           (rule "mod_axiom" (formula "16") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1,1"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,1"))
                           (rule "add_zero_left" (formula "16") (term "0,0,0,0,1,1"))
                           (rule "mod_axiom" (formula "17") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "0,0"))
                           (rule "add_zero_left" (formula "17") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                           (rule "polySimp_elimOne" (formula "18") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "elimGcdEq" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_1),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "add_zero_left" (formula "17") (term "0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "0,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "qeq_literals" (formula "17") (term "1,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "times_zero_1" (formula "17") (term "0,0"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "7") (term "0,0"))
                           (rule "add_zero_left" (formula "7") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "leq_literals" (formula "7") (term "0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "div_axiom" (formula "10") (term "0,0") (inst "quotient=quotient_2"))
                           (rule "qeq_literals" (formula "10") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "equal_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,1,1"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "12") (term "1"))
                           (rule "add_literals" (formula "12") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                           (rule "mul_literals" (formula "13") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "11"))
                           (rule "times_zero_1" (formula "19") (term "0,0"))
                           (rule "add_zero_left" (formula "19") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0"))
                           (rule "qeq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "11"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "mul_literals" (formula "14") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "6"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "21"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "20"))
                           (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "12"))
                           (rule "mul_literals" (formula "11") (term "1,1"))
                           (rule "add_literals" (formula "11") (term "1"))
                           (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "12"))
                           (rule "leq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "12"))
                           (rule "mul_literals" (formula "13") (term "1,1"))
                           (rule "add_literals" (formula "13") (term "1"))
                           (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "12"))
                           (rule "mul_literals" (formula "14") (term "1,1"))
                           (rule "add_literals" (formula "14") (term "1"))
                           (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "15") (term "0,1,0,1") (ifseqformula "12"))
                           (rule "mul_literals" (formula "15") (term "1,0,1"))
                           (rule "add_literals" (formula "15") (term "0,1"))
                           (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
                           (rule "leq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "13"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                           (rule "leq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "commute_or" (formula "19") (term "0,0,0,0"))
                           (rule "commute_and" (formula "5") (term "0,1"))
                           (rule "div_axiom" (formula "19") (term "0,1,1,1,0,0") (inst "quotient=quotient_3"))
                           (rule "equal_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "qeq_literals" (formula "19") (term "0,1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,1,1"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                           (rule "add_literals" (formula "21") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "21") (term "1"))
                           (rule "add_literals" (formula "21") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "19"))
                           (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
                           (rule "times_zero_1" (formula "17") (term "0,0"))
                           (rule "add_zero_left" (formula "17") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "leq_literals" (formula "17") (term "0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "mul_literals" (formula "22") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "leq_literals" (formula "22") (term "0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "21"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                           (rule "mul_literals" (formula "12") (term "0,1"))
                           (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "23"))
                           (rule "leq_literals" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "22"))
                           (rule "mul_literals" (formula "23") (term "1,1"))
                           (rule "add_literals" (formula "23") (term "1"))
                           (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "22"))
                           (rule "mul_literals" (formula "12") (term "1,1"))
                           (rule "add_literals" (formula "12") (term "1"))
                           (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "22"))
                           (rule "mul_literals" (formula "21") (term "1,1"))
                           (rule "add_literals" (formula "21") (term "1"))
                           (rule "applyEqRigid" (formula "24") (term "0,1,0,1,1,0,0") (ifseqformula "22"))
                           (rule "mul_literals" (formula "24") (term "1,0,1,1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "18"))
                           (rule "leq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "19"))
                           (rule "leq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "div_axiom" (formula "22") (term "0,1,1,1,0,0,1,1") (inst "quotient=quotient_4"))
                           (rule "equal_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "qeq_literals" (formula "22") (term "0,1"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "mul_literals" (formula "22") (term "1,1,1"))
                           (rule "andLeft" (formula "22"))
                           (rule "andLeft" (formula "22"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                           (rule "add_literals" (formula "24") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "24") (term "1"))
                           (rule "add_literals" (formula "24") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "applyEq" (formula "25") (term "0,0,0,1") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1"))
                           (rule "applyEq" (formula "25") (term "0,1,1,1,0,0,1,1") (ifseqformula "22"))
                           (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0,1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "23"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                           (rule "mul_literals" (formula "12") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "mul_literals" (formula "25") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "25") (term "0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0"))
                           (rule "leq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "26"))
                           (rule "mul_literals" (formula "12") (term "1,1"))
                           (rule "add_literals" (formula "12") (term "1"))
                           (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "26"))
                           (rule "mul_literals" (formula "25") (term "1,1"))
                           (rule "add_literals" (formula "25") (term "1"))
                           (rule "applyEqRigid" (formula "29") (term "0,1,1,0,1") (ifseqformula "26"))
                           (rule "mul_literals" (formula "29") (term "1,1,0,1"))
                           (rule "add_literals" (formula "29") (term "1,0,1"))
                           (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "26"))
                           (rule "leq_literals" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                           (rule "mul_literals" (formula "26") (term "1,1"))
                           (rule "add_literals" (formula "26") (term "1"))
                           (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                           (rule "applyEq" (formula "27") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "25"))
                           (rule "mul_literals" (formula "27") (term "1,0,1,1,0,0,1,1"))
                           (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "17"))
                           (rule "leq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "18"))
                           (rule "leq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "ifthenelse_split_for" (formula "5") (term "1,1"))
                           (branch "pow(2, index_0) ≥ 0 TRUE"
                              (rule "div_axiom" (formula "22") (term "0,1,0,0,0,1,1,0") (inst "quotient=quotient_5"))
                              (rule "qeq_literals" (formula "22") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "mul_literals" (formula "22") (term "1,1,1,1"))
                              (rule "equal_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                              (rule "add_literals" (formula "24") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "24") (term "1"))
                              (rule "add_literals" (formula "24") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "22"))
                              (rule "applyEqRigid" (formula "30") (term "0,0") (ifseqformula "22"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,1") (ifseqformula "22"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,1"))
                              (rule "applyEqRigid" (formula "25") (term "0,1,0,0,0,1,1,0") (ifseqformula "22"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                              (rule "mul_literals" (formula "23") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "add_literals" (formula "23") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(0(#))"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "23") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "23") (term "0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_strengthen0" (formula "23") (ifseqformula "30"))
                              (rule "add_zero_right" (formula "23") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "23"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0"))
                              (rule "qeq_literals" (formula "30") (term "0"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "false_right" (formula "30"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "25"))
                              (rule "times_zero_1" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "inEqSimp_contradInEq3" (formula "7") (ifseqformula "24"))
                              (rule "mul_literals" (formula "7") (term "0,1,0"))
                              (rule "greater_literals" (formula "7") (term "0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "qeq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "closeFalse" (formula "7"))
                           )
                           (branch "pow(2, index_0) ≥ 0 FALSE"
                              (rule "inEqSimp_geqRight" (formula "25"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "powPositiveConcrete" (formula "1"))
                              (rule "qeq_literals" (formula "26") (term "1"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "7") (term "0") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0,0"))
                              (rule "qeq_literals" (formula "7") (term "0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                              (rule "mod_axiom" (formula "31") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "31"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                     )
                     (branch "Assume 32 % 64 != 32"
                        (rule "expand_inInt" (formula "12"))
                        (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                        (rule "replace_int_MAX" (formula "12") (term "1,0"))
                        (rule "replace_int_MIN" (formula "12") (term "0,1"))
                        (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                        (rule "notRight" (formula "18"))
                        (rule "notLeft" (formula "2"))
                        (rule "andLeft" (formula "12"))
                        (rule "replace_known_left" (formula "16") (term "0,0,0,0,0,1,1,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_left" (formula "17") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "polySimp_elimNeg" (formula "19") (term "1,0,1,0,0,0"))
                        (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                        (rule "polySimp_elimNeg" (formula "16") (term "1,0,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "17") (term "1,0,1,0,0,0,0,0,1,1"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "4"))
                        (rule "mod_axiom" (formula "19") (term "1,1,2,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,2,0,0,0"))
                        (rule "div_literals" (formula "19") (term "0,1,1,1,2,0,0,0"))
                        (rule "times_zero_2" (formula "19") (term "1,1,1,2,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "1,1,2,0,0,0"))
                        (rule "pow_literals" (formula "19") (term "1,2,0,0,0"))
                        (rule "mod_axiom" (formula "18") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                        (rule "div_literals" (formula "18") (term "0,1,0"))
                        (rule "times_zero_2" (formula "18") (term "1,0"))
                        (rule "add_zero_right" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
                  (branch "i ≥ 0 FALSE"
                     (rule "eqTermCut" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0") (inst "s=Z(2(3(#)))") (userinteraction))
                     (branch "Assume 32 % 64 = 32"
                        (rule "applyEqRigid" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "0,1,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "1,1,2,0,1,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "0,0,0,0,2,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "0,1,0,1,0,0,2,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "1,1,2,0,0,2,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "0,1,0,0,0,0,1,2,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "14") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,0,0,1,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,1,0,1,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "1,1,2,0,1,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,0,0,0,2,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,1,0,0,2,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "1,1,2,0,0,2,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,0,0,0,1,2,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "15") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0,0,0,0,0,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0,1,0,1,0,0,0,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "1,1,2,0,0,0,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0,1,0,0,0,0,1,0,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0,1,0,0,1,1,1,0,1,0,0") (ifseqformula "13") (userinteraction))
                        (rule "applyEqRigid" (formula "17") (term "0,1,0,1,0,2,0,1,0,0") (ifseqformula "13") (userinteraction))
                        (rule "less_literals" (formula "17") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "neg_literal" (formula "15") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                        (rule "neg_literal" (formula "15") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                        (rule "neg_literal" (formula "15") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                        (rule "less_literals" (formula "15") (term "0,0,0,2,0,0,0,0,1,1"))
                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "16")))
                        (rule "neg_literal" (formula "14") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                        (rule "neg_literal" (formula "14") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                        (rule "neg_literal" (formula "14") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                        (rule "less_literals" (formula "14") (term "0,0,0,2,0,0,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
                        (rule "neg_literal" (formula "17") (term "1,0,0,0,0,1,0,0"))
                        (rule "neg_literal" (formula "17") (term "1,0,0,1,1,1,0,1,0,0"))
                        (rule "neg_literal" (formula "17") (term "1,0,1,0,2,0,1,0,0"))
                        (rule "pow_literals" (formula "17") (term "1,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,1,0,2,0,1,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,1,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1"))
                        (rule "pow_literals" (formula "15") (term "1,0,0,0,0,0,0,1,1"))
                        (rule "pow_literals" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,1,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "14") (term "0,1,0,2,0,1,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,1,1,1,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,1,0,2,0,1,0,0"))
                        (rule "eqTermCut" (formula "17") (term "0,0,0,1,0,0") (inst "s=Z(1(3(#)))") (userinteraction))
                        (branch "Assume 31 % 64 = 31"
                           (rule "applyEqRigid" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "15") (term "0,1,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "15") (term "1,0,2,0,1,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "16") (term "0,0,0,1,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "16") (term "0,1,1,1,0,1,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "16") (term "1,0,2,0,1,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "18") (term "0,0,0,1,0,0") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "18") (term "0,1,1,1,0,1,0,0") (ifseqformula "1") (userinteraction))
                           (rule "applyEqRigid" (formula "18") (term "1,0,2,0,1,0,0") (ifseqformula "1") (userinteraction))
                           (rule "pow_literals" (formula "18") (term "0,2,0,1,0,0"))
                           (rule "less_literals" (formula "16") (term "0,0,1,0,0,0,0,1,1"))
                           (rule "neg_literal" (formula "16") (term "1,1,1,0,1,0,0,0,0,1,1"))
                           (rule "pow_literals" (formula "16") (term "1,1,0,1,0,0,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "less_literals" (formula "18") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "less_literals" (formula "15") (term "0,0,1,0,0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "pow_literals" (formula "16") (term "0,0,1,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                           (rule "pow_literals" (formula "15") (term "0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "eqTermCut" (formula "15") (term "0,0,0,0,1,1,0") (inst "s=add(div(i, Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                           (branch "Assume addJlong(moduloLong(i / 4294967296), moduloLong(4294967296)) = i / 4294967296 + 4294967296"
                              (rule "applyEq" (formula "16") (term "0,0,0,0,1,1,0") (ifseqformula "15") (userinteraction))
                              (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "15") (userinteraction))
                              (rule "applyEq" (formula "17") (term "0,0,0,0,1,1") (ifseqformula "15") (userinteraction))
                              (rule "eqTermCut" (formula "17") (term "0,0,1") (inst "s=sub(Z(2(3(#))),
    add(result_numberOfLeadingZeros_0, Z(1(#))))") (userinteraction))
                              (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) = 32 - (result_numberOfLeadingZeros_0 + 1)"
                                 (rule "applyEq" (formula "18") (term "0,0,1") (ifseqformula "17") (userinteraction))
                                 (rule "applyEq" (formula "18") (term "1,1,0,0,1,1") (ifseqformula "17") (userinteraction))
                                 (rule "sub" (formula "17") (term "1"))
                                 (rule "minus_distribute_1" (formula "17") (term "1,1"))
                                 (rule "neg_literal" (formula "17") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                 (rule "sub" (formula "18") (term "0,0,1"))
                                 (rule "minus_distribute_1" (formula "18") (term "1,0,0,1"))
                                 (rule "neg_literal" (formula "18") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "sub" (formula "18") (term "1,1,0,0,1,1"))
                                 (rule "minus_distribute_1" (formula "18") (term "1,1,1,0,0,1,1"))
                                 (rule "neg_literal" (formula "18") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0,1,1"))
                                 (rule "eqTermCut" (formula "16") (term "0,0,0,1,1,0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                                 (branch "Assume moduloInt(i / 4294967296 + 4294967296) = i / 4294967296"
                                    (rule "applyEq" (formula "17") (term "0,0,0,1,1,0") (ifseqformula "16") (userinteraction))
                                    (rule "applyEq" (formula "19") (term "0,0,0,1,1") (ifseqformula "16") (userinteraction))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "16") (userinteraction))
                                    (rule "cut" (inst "cutFormula=lt(i<<origin(\"User_Interaction @ node 179164 (cut)\",\"[]\")>>,
   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))<<origin(\"User_Interaction @ node 179164 (cut)\",\"[]\")>>") (userinteraction))
                                    (branch "CUT: i < 4294967296 TRUE"
                                        (opengoal " ")
                                    )
                                    (branch "CUT: i < 4294967296 FALSE"
                                       (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "11"))
                                       (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "11") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,1"))
                                       (rule "notRight" (formula "23"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "polySimp_elimNeg" (formula "20") (term "1,0,1"))
                                       (rule "polySimp_elimNeg" (formula "21") (term "1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                       (rule "polySimp_elimNeg" (formula "21") (term "1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "1"))
                                       (rule "add_literals" (formula "20") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                       (rule "inEqSimp_geqRight" (formula "23"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltRight" (formula "23"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "inEqSimp_commuteGeq" (formula "6"))
                                       (rule "mod_axiom" (formula "4") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "div_literals" (formula "4") (term "0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "mod_axiom" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "div_literals" (formula "17") (term "0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Assume moduloInt(i / 4294967296 + 4294967296) != i / 4294967296"
                                    (rule "expand_inInt" (formula "11"))
                                    (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "11") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                    (rule "notRight" (formula "22"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "polySimp_elimNeg" (formula "20") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimNeg" (formula "20") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimNeg" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "1"))
                                    (rule "add_literals" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_geqRight" (formula "22"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14"))
                                    (rule "inEqSimp_commuteGeq" (formula "5"))
                                    (rule "mod_axiom" (formula "17") (term "0"))
                                    (rule "div_literals" (formula "17") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                    (rule "times_zero_2" (formula "17") (term "1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "mod_axiom" (formula "3") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                                    (rule "expand_moduloLong" (formula "11") (term "0,0"))
                                    (rule "replace_long_RANGE" (formula "11") (term "1,1,0,0"))
                                    (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0,0"))
                                    (rule "replace_long_MIN" (formula "11") (term "0,0,0"))
                                    (rule "expand_moduloLong" (formula "11") (term "1,0"))
                                    (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0"))
                                    (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0"))
                                    (rule "replace_long_MIN" (formula "11") (term "0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,1,1,0"))
                                    (rule "mod_axiom" (formula "11") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                    (rule "div_literals" (formula "11") (term "0,1,1,1,0"))
                                    (rule "times_zero_2" (formula "11") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "11") (term "1,1,0"))
                                    (rule "add_literals" (formula "11") (term "1,0"))
                                    (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                                    (rule "expand_subJint" (formula "13") (term "0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,1,1"))
                                    (rule "polyMod_pullOut" (formula "14") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "1,0,1,0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "16") (term "0"))
                                    (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "polyMod_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "expand_moduloInteger" (formula "15") (term "0"))
                                    (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_homoEq" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "polyMod_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "4") (term "0"))
                                    (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                    (rule "mod_axiom" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "4") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "expand_addJlong" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0"))
                                    (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "13") (term "0"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "newSym_eq" (formula "13") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(result_numberOfLeadingZeros_0, Z(0(#)))),
    mul(addJint(result_numberOfLeadingZeros_0, Z(1(#))),
        Z(0(#))))") (inst "l=l_0"))
                                    (rule "times_zero_1" (formula "13") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,1"))
                                    (rule "polySimp_addLiterals" (formula "13") (term "1,1"))
                                    (rule "add_zero_right" (formula "13") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1"))
                                    (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "13"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "14"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "expand_moduloLong" (formula "11") (term "0"))
                                    (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                    (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                    (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "11") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "expand_addJint" (formula "14") (term "0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                    (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=l_0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1"))
                                    (rule "add_literals" (formula "14") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "14") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                    (rule "leq_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "div_axiom" (formula "18") (term "0,0") (inst "quotient=quotient_0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "cut_direct" (formula "16") (term "0,0"))
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "5") (term "1,1"))
                                       (rule "polySimp_addComm1" (formula "5") (term "1"))
                                       (rule "add_literals" (formula "5") (term "0,1"))
                                       (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "div_literals" (formula "15") (term "0"))
                                       (rule "polySimp_homoEq" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "15"))
                                       (rule "qeq_literals" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "div_literals" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "11") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,1,1,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                       (rule "div_literals" (formula "11") (term "0,1,1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,0,0") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "div_literals" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "applyEq" (formula "11") (term "0,1,1,1,0,0") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "div_axiom" (formula "14") (term "1,0,0") (inst "quotient=quotient_1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
                                       (rule "mod_axiom" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0"))
                                       (rule "mod_axiom" (formula "12") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1"))
                                       (rule "polySimp_sepPosMonomial" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_1),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,1,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "leq_literals" (formula "12") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "qeq_literals" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "elimGcdEq" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_1),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,1"))
                                       (rule "add_literals" (formula "16") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "0,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "qeq_literals" (formula "16") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "10") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "commute_and" (formula "5") (term "0,1"))
                                       (rule "commute_or" (formula "15") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                       (rule "shift_paren_or" (formula "15") (term "0"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "ifthenelse_split_for" (formula "5") (term "1,1"))
                                       (branch "pow(2, index_0) ≥ 0 TRUE"
                                          (rule "cnf_rightDist" (formula "6"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "commute_or" (formula "7"))
                                          (rule "cnf_rightDist" (formula "6"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "commute_or" (formula "7"))
                                          (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption0" (formula "18") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "18") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "commute_or_2" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "18") (term "0,0"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "div_axiom" (formula "22") (term "0,0") (inst "quotient=quotient_2"))
                                          (rule "equal_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEqRigid" (formula "25") (term "0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0"))
                                          (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "16") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(0(#))"))
                                          (rule "leq_literals" (formula "16") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "25"))
                                          (rule "add_zero_right" (formula "16") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "16"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "false_right" (formula "25"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "17"))
                                          (rule "greater_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "pow(2, index_0) ≥ 0 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "18"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "powPositiveConcrete" (formula "1"))
                                          (rule "qeq_literals" (formula "19") (term "1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_geqRight" (formula "19"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "7") (term "0") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "8"))
                                          (rule "mod_axiom" (formula "24") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "closeFalse" (formula "12"))
                                       )
                                    )
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "div_axiom" (formula "18") (term "1,0,0") (inst "quotient=quotient_1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "19") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                                       (rule "mod_axiom" (formula "14") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0"))
                                       (rule "mod_axiom" (formula "20") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "mod_axiom" (formula "21") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "polySimp_sepPosMonomial" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_1),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "elimGcdEq" (formula "20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_1),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "times_zero_1" (formula "20") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "20") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "times_zero_1" (formula "20") (term "0,0"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "11") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "div_axiom" (formula "9") (term "0,0") (inst "quotient=quotient_2"))
                                       (rule "mul_literals" (formula "9") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "9") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "equal_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                       (rule "add_literals" (formula "11") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "11") (term "1"))
                                       (rule "add_literals" (formula "11") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "10"))
                                       (rule "times_zero_1" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "18") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1"))
                                       (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "20"))
                                       (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "10") (term "1,1"))
                                       (rule "add_literals" (formula "10") (term "1"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "14") (term "1,1"))
                                       (rule "add_literals" (formula "14") (term "1"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "12") (term "1,1"))
                                       (rule "add_literals" (formula "12") (term "1"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "14") (term "1,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,1"))
                                       (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "24"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "commute_and" (formula "5") (term "0,1"))
                                       (rule "commute_or" (formula "19") (term "0,0,0,0"))
                                       (rule "div_axiom" (formula "20") (term "0") (inst "quotient=quotient_3"))
                                       (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "equal_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "22") (term "1"))
                                       (rule "add_literals" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "applyEqRigid" (formula "22") (term "0,1,0,0") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "applyEqRigid" (formula "21") (term "0,1,0,0") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "25"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "div_axiom" (formula "22") (term "0") (inst "quotient=quotient_4"))
                                       (rule "mul_literals" (formula "22") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "22") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "equal_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "1"))
                                       (rule "add_literals" (formula "24") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "22"))
                                       (rule "polySimp_homoEq" (formula "25"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "polySimp_sepPosMonomial" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                       (rule "mul_literals" (formula "25") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                                       (rule "times_zero_1" (formula "17") (term "0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                       (rule "mul_literals" (formula "11") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "28"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "25") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "25") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "25"))
                                       (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "11") (term "1,1"))
                                       (rule "add_literals" (formula "11") (term "1"))
                                       (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "26") (term "1,1"))
                                       (rule "add_literals" (formula "26") (term "1"))
                                       (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "25") (term "1,1"))
                                       (rule "add_literals" (formula "25") (term "1"))
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "18"))
                                       (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "18"))
                                       (rule "add_literals" (formula "27") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "div_axiom" (formula "20") (term "0,1,1,1,0,0") (inst "quotient=quotient_5"))
                                       (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "equal_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "22") (term "1"))
                                       (rule "add_literals" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "21"))
                                       (rule "times_zero_1" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                       (rule "mul_literals" (formula "11") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "19"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "24"))
                                       (rule "leq_literals" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "applyEqRigid" (formula "11") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "11") (term "1,1"))
                                       (rule "add_literals" (formula "11") (term "1"))
                                       (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "24") (term "1,1"))
                                       (rule "add_literals" (formula "24") (term "1"))
                                       (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "22") (term "1,1"))
                                       (rule "add_literals" (formula "22") (term "1"))
                                       (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "25") (term "0,1,0,1,1,0,0") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "25") (term "1,0,1,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "29"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "ifthenelse_split_for" (formula "5") (term "1,1"))
                                       (branch "pow(2, index_0) ≥ 0 TRUE"
                                          (rule "div_axiom" (formula "23") (term "0,1,0,0,0,1,1,0") (inst "quotient=quotient_6"))
                                          (rule "mul_literals" (formula "23") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "23") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "equal_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "25") (term "1"))
                                          (rule "add_literals" (formula "25") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "applyEqRigid" (formula "26") (term "0,1,0,0,0,1,1,0") (ifseqformula "23"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "23"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "32") (term "0,1,0,0,0") (ifseqformula "23"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "25"))
                                          (rule "mul_literals" (formula "14") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "14") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "34"))
                                          (rule "add_zero_right" (formula "14") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "14"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0"))
                                          (rule "leq_literals" (formula "34") (term "0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "25") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "25") (term "1,1,0"))
                                          (rule "greater_literals" (formula "25") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "pow(2, index_0) ≥ 0 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "29"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "powPositiveConcrete" (formula "1"))
                                          (rule "qeq_literals" (formula "30") (term "1"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_geqRight" (formula "30"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "7") (term "0") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "8"))
                                          (rule "mod_axiom" (formula "35") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "35"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "closeFalse" (formula "14"))
                                       )
                                    )
                                 )
                              )
                              (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) != 32 - (result_numberOfLeadingZeros_0 + 1)"
                                 (rule "expand_inInt" (formula "11"))
                                 (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                                 (rule "replace_int_MAX" (formula "11") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "11") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                                 (rule "notRight" (formula "21"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                 (rule "add_literals" (formula "20") (term "0,1"))
                                 (rule "inEqSimp_geqRight" (formula "21"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14"))
                                 (rule "inEqSimp_commuteGeq" (formula "5"))
                                 (rule "mod_axiom" (formula "3") (term "0"))
                                 (rule "div_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "times_zero_2" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "mod_axiom" (formula "16") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                 (rule "div_literals" (formula "16") (term "0,1,0"))
                                 (rule "times_zero_2" (formula "16") (term "1,0"))
                                 (rule "add_zero_right" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                                 (rule "expand_subJint" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "13") (term "0,0,0,1"))
                                 (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                                 (rule "expand_subJint" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "expand_moduloLong" (formula "11") (term "0,0"))
                                 (rule "replace_long_RANGE" (formula "11") (term "1,1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0,0"))
                                 (rule "replace_long_MIN" (formula "11") (term "0,0,0"))
                                 (rule "expand_moduloLong" (formula "11") (term "1,0"))
                                 (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0"))
                                 (rule "replace_long_MIN" (formula "11") (term "0,1,0"))
                                 (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,1,1,0"))
                                 (rule "mod_axiom" (formula "11") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                 (rule "div_literals" (formula "11") (term "0,1,1,1,0"))
                                 (rule "times_zero_2" (formula "11") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "11") (term "1,1,0"))
                                 (rule "add_literals" (formula "11") (term "1,0"))
                                 (rule "expand_addJint" (formula "14") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
                                 (rule "expand_moduloInteger" (formula "15") (term "0"))
                                 (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                 (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1"))
                                 (rule "polyMod_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "13") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                 (rule "mod_axiom" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0"))
                                 (rule "equal_literals" (formula "4") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0"))
                                 (rule "mul_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "expand_addJint" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "expand_addJlong" (formula "11") (term "0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "expand_moduloInteger" (formula "14") (term "1,0"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "mod_axiom" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,0,0,0,1"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                 (rule "expand_moduloLong" (formula "11") (term "0"))
                                 (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                 (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                 (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "11") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "expand_subJint" (formula "14") (term "0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "expand_addJint" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "expand_addJint" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,0,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,1"))
                                 (rule "polyMod_pullOut" (formula "13") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,1"))
                                 (rule "mod_axiom" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,0,0,1"))
                                 (rule "equal_literals" (formula "13") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                                 (rule "expand_moduloInteger" (formula "14") (term "0"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_homoEq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "mod_axiom" (formula "14") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(5(7(9(0(5(4(2(4(4(6(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(1(#))"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "add_literals" (formula "14") (term "0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "14") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "div_axiom" (formula "16") (term "0,0") (inst "quotient=quotient_0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                 (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,1,1"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0,0,0"))
                                 (rule "div_axiom" (formula "16") (term "1,0,0") (inst "quotient=quotient_1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "15") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "mod_axiom" (formula "17") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "19") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                 (rule "mod_axiom" (formula "16") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1"))
                                 (rule "polySimp_sepPosMonomial" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_1),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "add_literals" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "15") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "10") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                 (rule "leq_literals" (formula "10") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "div_axiom" (formula "9") (term "0,0") (inst "quotient=quotient_2"))
                                 (rule "mul_literals" (formula "9") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "9") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "equal_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                 (rule "add_literals" (formula "11") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "11") (term "1"))
                                 (rule "add_literals" (formula "11") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "19"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "mul_literals" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "10"))
                                 (rule "times_zero_1" (formula "19") (term "0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                 (rule "neg_literal" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "11") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "20"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "13") (term "1,1"))
                                 (rule "add_literals" (formula "13") (term "1"))
                                 (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "10") (term "1,1"))
                                 (rule "add_literals" (formula "10") (term "1"))
                                 (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "12") (term "1,1"))
                                 (rule "add_literals" (formula "12") (term "1"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "14") (term "1,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,1"))
                                 (rule "applyEq" (formula "9") (term "1") (ifseqformula "11"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "18"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "div_axiom" (formula "20") (term "0,1,1,1,0,0") (inst "quotient=quotient_3"))
                                 (rule "equal_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "qeq_literals" (formula "20") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1,1,1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "1"))
                                 (rule "add_literals" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                 (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "22"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "18") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "20"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "mul_literals" (formula "24") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "24") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "18"))
                                 (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "24"))
                                 (rule "leq_literals" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "22") (term "1,1"))
                                 (rule "add_literals" (formula "22") (term "1"))
                                 (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "24") (term "1,1"))
                                 (rule "add_literals" (formula "24") (term "1"))
                                 (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "11") (term "1,1"))
                                 (rule "add_literals" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "25") (term "0,1,0,1,1,0,0") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "25") (term "1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                                 (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "23"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "commute_and" (formula "5") (term "0,1"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0"))
                                 (rule "div_axiom" (formula "24") (term "0") (inst "quotient=quotient_4"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,1,0,0,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "21") (term "0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0"))
                                 (rule "qeq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_strengthen0" (formula "21") (ifseqformula "29"))
                                 (rule "add_literals" (formula "21") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "21"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0"))
                                 (rule "qeq_literals" (formula "29") (term "0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "23"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "22"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "greater_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch "Assume addJlong(moduloLong(i / 4294967296), moduloLong(4294967296)) != i / 4294967296 + 4294967296"
                              (rule "expand_inInt" (formula "11"))
                              (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                              (rule "replace_int_MAX" (formula "11") (term "1,0"))
                              (rule "replace_int_MIN" (formula "11") (term "0,1"))
                              (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                              (rule "notRight" (formula "20"))
                              (rule "notLeft" (formula "16"))
                              (rule "andLeft" (formula "12"))
                              (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "1"))
                              (rule "inEqSimp_geqRight" (formula "20"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "inEqSimp_commuteGeq" (formula "5"))
                              (rule "mod_axiom" (formula "17") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                              (rule "div_literals" (formula "17") (term "0,1,0"))
                              (rule "times_zero_2" (formula "17") (term "1,0"))
                              (rule "add_zero_right" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "mod_axiom" (formula "3") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "div_literals" (formula "3") (term "0,1,0"))
                              (rule "times_zero_2" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "15"))
                              (rule "leq_literals" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_notGeq" (formula "11") (term "0,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,1,0"))
                              (rule "expand_moduloInteger" (formula "14") (term "0"))
                              (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "14") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1"))
                              (rule "expand_addJint" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,1,0,0,1"))
                              (rule "expand_moduloLong" (formula "11") (term "1,0,0,0,0,1,1,0"))
                              (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,0,0,0,1,1,0"))
                              (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "replace_long_MIN" (formula "11") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,1,1,0,0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "11") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,0,1,1,0"))
                              (rule "div_literals" (formula "11") (term "0,1,1,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "11") (term "1,1,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,0,0,1,1,0"))
                              (rule "expand_subJint" (formula "12") (term "1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0,1,1"))
                              (rule "expand_subJint" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
                              (rule "expand_moduloLong" (formula "11") (term "0,0,0,0,0,1,1,0"))
                              (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "replace_long_MIN" (formula "11") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "replace_long_RANGE" (formula "11") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "expand_moduloLong" (formula "13") (term "0,0"))
                              (rule "replace_long_RANGE" (formula "13") (term "1,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,0,0"))
                              (rule "replace_long_MIN" (formula "13") (term "0,0,0"))
                              (rule "expand_moduloLong" (formula "13") (term "1,0"))
                              (rule "replace_long_RANGE" (formula "13") (term "1,1,1,0"))
                              (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,1,0"))
                              (rule "replace_long_MIN" (formula "13") (term "0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,1,0"))
                              (rule "mod_axiom" (formula "13") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                              (rule "div_literals" (formula "13") (term "0,1,1,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,0"))
                              (rule "add_literals" (formula "13") (term "1,0"))
                              (rule "expand_moduloInteger" (formula "4") (term "0"))
                              (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                              (rule "add_literals" (formula "4") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "mod_axiom" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                              (rule "mul_literals" (formula "4") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0"))
                              (rule "equal_literals" (formula "4") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                              (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0"))
                              (rule "mul_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "expand_addJlong" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0"))
                              (rule "expand_addJlong" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,1,0,1,0,0,0,1,1"))
                              (rule "expand_moduloInteger" (formula "12") (term "1,0,0,1"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,1,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                              (rule "mod_axiom" (formula "12") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,1"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,1"))
                              (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                              (rule "mod_axiom" (formula "11") (term "1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                              (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                              (rule "expand_addJlong" (formula "13") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "expand_moduloLong" (formula "14") (term "1,0,0"))
                              (rule "replace_long_MIN" (formula "14") (term "0,1,0,0"))
                              (rule "replace_long_RANGE" (formula "14") (term "1,1,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "14") (term "0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
                              (rule "mod_axiom" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                              (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=mul(div(add(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                moduloLong(Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
            moduloLong(div(i,
                           Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "expand_moduloLong" (formula "12") (term "1,0,1,0,1,0,0,0,1,1"))
                              (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,1,0,1,0,1,0,0,0,1,1"))
                              (rule "replace_long_MIN" (formula "12") (term "0,1,0,1,0,1,0,0,0,1,1"))
                              (rule "replace_long_RANGE" (formula "12") (term "1,1,1,0,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,0,0,0,1,1"))
                              (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "12") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                              (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                              (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1,0"))
                              (rule "expand_moduloLong" (formula "13") (term "0"))
                              (rule "replace_long_RANGE" (formula "13") (term "1,1,0"))
                              (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,0"))
                              (rule "replace_long_MIN" (formula "13") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "mod_axiom" (formula "13") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0"))
                              (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "expand_moduloLong" (formula "14") (term "1,0,0"))
                              (rule "replace_long_MIN" (formula "14") (term "0,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "14") (term "0,0,1,1,0,0"))
                              (rule "replace_long_RANGE" (formula "14") (term "1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                              (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0"))
                              (rule "expand_subJint" (formula "12") (term "0,0,1"))
                              (rule "polySimp_elimSub" (formula "12") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                              (rule "expand_moduloLong" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "replace_long_RANGE" (formula "12") (term "1,1,1,0,1,0,0,0,1,1"))
                              (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,1,0,1,0,0,0,1,1"))
                              (rule "replace_long_MIN" (formula "12") (term "0,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,0,0,0,1,1"))
                              (rule "mod_axiom" (formula "12") (term "1,0,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,1,0,1,0,0,0,1,1"))
                              (rule "mod_axiom" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,1,1"))
                              (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(add(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                    div(i,
                        Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                            div(i,
                                Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
                    Z(neglit(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))))),
            moduloLong(Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                              (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0,0,1,1"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0,1,1"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "expand_addJint" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                              (rule "expand_addJlong" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "expand_moduloLong" (formula "14") (term "1,0,0"))
                              (rule "replace_long_MIN" (formula "14") (term "0,1,0,0"))
                              (rule "replace_long_HALFRANGE" (formula "14") (term "0,0,1,1,0,0"))
                              (rule "replace_long_RANGE" (formula "14") (term "1,1,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                              (rule "div_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "times_zero_2" (formula "14") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "expand_moduloInteger" (formula "12") (term "0,0,1"))
                              (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "12") (term "0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1"))
                              (rule "mul_literals" (formula "12") (term "1,0,1"))
                              (rule "polyMod_pullOut" (formula "12") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,1"))
                              (rule "mod_axiom" (formula "12") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                              (rule "polyDiv_pullOut" (formula "12") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,0,0,1"))
                              (rule "equal_literals" (formula "12") (term "0,0,0,0,1"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                              (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                              (rule "expand_moduloLong" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,1,0,0,0,1,1,0"))
                              (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                              (rule "replace_long_MIN" (formula "11") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "11") (term "1,0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                div(i,
                    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
            mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                        div(i,
                            Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
                Z(neglit(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "expand_addJint" (formula "12") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,1,1"))
                              (rule "expand_moduloLong" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,1,0,1,0,0,0,1,1"))
                              (rule "replace_long_RANGE" (formula "12") (term "1,1,1,0,1,0,0,0,1,1"))
                              (rule "replace_long_MIN" (formula "12") (term "0,1,0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,1,1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,1"))
                              (rule "mod_axiom" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                              (rule "div_literals" (formula "12") (term "0,1,1,0,1,0,0,0,1,1"))
                              (rule "times_zero_2" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                              (rule "add_zero_right" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1"))
                              (rule "div_axiom" (formula "15") (term "0,0") (inst "quotient=quotient_0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "expand_moduloInteger" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                              (rule "mod_axiom" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "13") (term "0,0,1,0,0,1,1,0,0,1,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,1,1,0,0,1,1"))
                              (rule "add_zero_right" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                              (rule "div_axiom" (formula "5") (term "0,0") (inst "quotient=quotient_1"))
                              (rule "mul_literals" (formula "5") (term "1,1,1,1,1"))
                              (rule "equal_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "qeq_literals" (formula "5") (term "0,1"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "7") (term "1"))
                              (rule "add_literals" (formula "7") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "13") (term "0,0"))
                              (rule "add_zero_left" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "15"))
                              (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "6") (term "1,1"))
                              (rule "add_literals" (formula "6") (term "1"))
                              (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "7"))
                              (rule "leq_literals" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "8") (term "1,1"))
                              (rule "add_literals" (formula "8") (term "1"))
                              (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "9") (term "1,1"))
                              (rule "add_literals" (formula "9") (term "1"))
                              (rule "applyEqRigid" (formula "10") (term "0,1,0,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "10") (term "1,0,1"))
                              (rule "add_literals" (formula "10") (term "0,1"))
                              (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "7"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "14"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "14"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "13"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0,0,0"))
                              (rule "div_axiom" (formula "16") (term "1,1") (inst "quotient=quotient_2"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "17") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "1,0,1,0,0,0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "1"))
                              (rule "mod_axiom" (formula "17") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "20") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0"))
                              (rule "mod_axiom" (formula "19") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "mod_axiom" (formula "18") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,1,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "18") (term "0,0,0,0,1,1"))
                              (rule "polySimp_sepPosMonomial" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                              (rule "polySimp_elimOne" (formula "20") (term "1"))
                              (rule "polySimp_sepPosMonomial" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "elimGcdEq" (formula "19") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_2),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                              (rule "add_literals" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,1"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "qeq_literals" (formula "19") (term "1,0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "leq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                              (rule "mul_literals" (formula "13") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "commute_and" (formula "5") (term "0,1"))
                              (rule "ifthenelse_split_for" (formula "5") (term "1,1"))
                              (branch "pow(2, index_0) ≥ 0 TRUE"
                                 (rule "div_axiom" (formula "21") (term "0,0,0,1") (inst "quotient=quotient_3"))
                                 (rule "qeq_literals" (formula "21") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1,1,1,1"))
                                 (rule "equal_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "1"))
                                 (rule "add_literals" (formula "23") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "applyEq" (formula "24") (term "0,0,0,1") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                                 (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,1,1") (ifseqformula "21"))
                                 (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "22"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "20"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "mul_literals" (formula "24") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "24") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "23"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1"))
                                 (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "19"))
                                 (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "25"))
                                 (rule "mul_literals" (formula "24") (term "1,1"))
                                 (rule "add_literals" (formula "24") (term "1"))
                                 (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,0,1") (ifseqformula "24"))
                                 (rule "mul_literals" (formula "26") (term "1,1,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,0,1"))
                                 (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "24"))
                                 (rule "mul_literals" (formula "12") (term "1,1"))
                                 (rule "add_literals" (formula "12") (term "1"))
                                 (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "24"))
                                 (rule "mul_literals" (formula "25") (term "1,1"))
                                 (rule "add_literals" (formula "25") (term "1"))
                                 (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "26") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "24"))
                                 (rule "mul_literals" (formula "26") (term "1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "26") (term "0,1,1,0,0,1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "shift_paren_or" (formula "20") (term "0"))
                                 (rule "cut_direct" (formula "6") (term "0"))
                                 (branch "CUT: pow(2, index_0) = 0 TRUE"
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "5"))
                                    (rule "cut_direct" (formula "22") (term "0,0"))
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0"))
                                       (rule "div_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "20"))
                                       (rule "qeq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "19"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "div_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,1,1,0,0,0") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,1,1,0,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,1,0,0,0"))
                                       (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,0") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "div_axiom" (formula "19") (term "0,0") (inst "quotient=quotient_4"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "14") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "2"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "14"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEqRigid" (formula "18") (term "0,0,0,0,0,1,0") (ifseqformula "13"))
                                       (rule "times_zero_2" (formula "18") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "22") (term "0,1") (ifseqformula "13"))
                                       (rule "times_zero_2" (formula "22") (term "1"))
                                       (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "13"))
                                       (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "4"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "div_axiom" (formula "20") (term "0") (inst "quotient=quotient_5"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "24"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "false_right" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "17") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradInEq3" (formula "17") (ifseqformula "2"))
                                       (rule "greater_literals" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "false_right" (formula "24"))
                                       (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "commute_or_2" (formula "18") (term "0,0"))
                                       (rule "div_axiom" (formula "24") (term "0,0") (inst "quotient=quotient_4"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "25") (term "0,1,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "2"))
                                       (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "17"))
                                       (rule "times_zero_2" (formula "4") (term "1,1"))
                                       (rule "add_zero_right" (formula "4") (term "1"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "16"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "15"))
                                       (rule "times_zero_2" (formula "27") (term "1"))
                                       (rule "applyEq" (formula "25") (term "0,0,0,0,0") (ifseqformula "15"))
                                       (rule "times_zero_2" (formula "25") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "21") (term "0,0,0,0,0,1,0") (ifseqformula "15"))
                                       (rule "times_zero_2" (formula "21") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "4"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "div_axiom" (formula "25") (term "0") (inst "quotient=quotient_5"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "29"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "19") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1"))
                                       (rule "inEqSimp_contradInEq3" (formula "19") (ifseqformula "2"))
                                       (rule "greater_literals" (formula "19") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                 )
                                 (branch "CUT: pow(2, index_0) = 0 FALSE"
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "7"))
                                    (rule "mod_axiom" (formula "29") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "26"))
                                    (rule "add_zero_right" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "cut_direct" (formula "25") (term "0,0"))
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,0,1,1,1,0,0,0") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,1,1,0,0,0"))
                                       (rule "div_literals" (formula "22") (term "0,1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,1,1,0,0,0"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "25"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "div_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "div_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "applyEq" (formula "19") (term "0,1,1,1,0,0,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "19") (term "1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "div_axiom" (formula "22") (term "0,0") (inst "quotient=quotient_4"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0"))
                                       (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "25"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "18"))
                                       (rule "times_zero_2" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "17"))
                                       (rule "times_zero_2" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "21") (term "0,0,0,0,0,1,0") (ifseqformula "16"))
                                       (rule "times_zero_2" (formula "21") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "16"))
                                       (rule "times_zero_2" (formula "25") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "4"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "false_right" (formula "25"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "div_axiom" (formula "23") (term "0") (inst "quotient=quotient_5"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "27"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq3" (formula "20") (ifseqformula "2"))
                                       (rule "greater_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "25"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "commute_or_2" (formula "21") (term "0,0"))
                                       (rule "div_axiom" (formula "27") (term "0,0") (inst "quotient=quotient_4"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "28") (term "0,1,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                       (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "20"))
                                       (rule "times_zero_2" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                                       (rule "qeq_literals" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "18"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "24") (term "0,0,0,0,0,1,0") (ifseqformula "18"))
                                       (rule "times_zero_2" (formula "24") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,1,0"))
                                       (rule "applyEq" (formula "28") (term "0,0,0,0,0") (ifseqformula "18"))
                                       (rule "times_zero_2" (formula "28") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "18"))
                                       (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "18"))
                                       (rule "times_zero_2" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "30") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0"))
                                       (rule "qeq_literals" (formula "30") (term "0"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "div_axiom" (formula "28") (term "0") (inst "quotient=quotient_5"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "32"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "false_right" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "22") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq3" (formula "22") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0"))
                                       (rule "greater_literals" (formula "22") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                 )
                              )
                              (branch "pow(2, index_0) ≥ 0 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "21"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "powPositiveConcrete" (formula "1"))
                                 (rule "qeq_literals" (formula "22") (term "1"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_geqRight" (formula "22"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "7") (term "0") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "8"))
                                 (rule "mod_axiom" (formula "27") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                           )
                        )
                        (branch "Assume 31 % 64 != 31"
                           (rule "expand_inInt" (formula "11"))
                           (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                           (rule "replace_int_MAX" (formula "11") (term "1,0"))
                           (rule "replace_int_MIN" (formula "11") (term "0,1"))
                           (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                           (rule "notRight" (formula "19"))
                           (rule "notLeft" (formula "2"))
                           (rule "andLeft" (formula "11"))
                           (rule "polySimp_elimNeg" (formula "16") (term "1,1,1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimNeg" (formula "20") (term "1,1,1,0,1,0,0"))
                           (rule "polySimp_elimNeg" (formula "3") (term "1,0,1"))
                           (rule "polySimp_elimNeg" (formula "17") (term "1,1,1,0,1,0,0,0,0,1,1"))
                           (rule "inEqSimp_geqRight" (formula "19"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,0,0,0,0,1,1"))
                           (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "4"))
                           (rule "mod_axiom" (formula "20") (term "1,0,2,0,1,0,0"))
                           (rule "div_literals" (formula "20") (term "0,0,1,1,0,2,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,2,0,1,0,0"))
                           (rule "times_zero_2" (formula "20") (term "1,1,0,2,0,1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "1,0,2,0,1,0,0"))
                           (rule "pow_literals" (formula "20") (term "0,2,0,1,0,0"))
                           (rule "mul_literals" (formula "20") (term "2,0,1,0,0"))
                           (rule "mod_axiom" (formula "18") (term "1,0,2,0,1,0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,2,0,1,0,0,0,0,1,1"))
                           (rule "div_literals" (formula "18") (term "0,1,1,0,2,0,1,0,0,0,0,1,1"))
                           (rule "times_zero_2" (formula "18") (term "1,1,0,2,0,1,0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "18") (term "1,0,2,0,1,0,0,0,0,1,1"))
                           (rule "pow_literals" (formula "18") (term "0,2,0,1,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "18") (term "2,0,1,0,0,0,0,1,1"))
                           (rule "mod_axiom" (formula "17") (term "1,0,2,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,2,0,1,0,0,0,0,1,1,0"))
                           (rule "div_literals" (formula "17") (term "0,1,1,0,2,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_2" (formula "17") (term "1,1,0,2,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "17") (term "1,0,2,0,1,0,0,0,0,1,1,0"))
                           (rule "pow_literals" (formula "17") (term "0,2,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "2,0,1,0,0,0,0,1,1,0"))
                           (rule "mod_axiom" (formula "16") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                           (rule "div_literals" (formula "16") (term "0,1,0"))
                           (rule "times_zero_2" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "mod_axiom" (formula "18") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                           (rule "div_literals" (formula "18") (term "0,1,0"))
                           (rule "times_zero_2" (formula "18") (term "1,0"))
                           (rule "add_zero_right" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "closeTrue" (formula "18"))
                        )
                     )
                     (branch "Assume 32 % 64 != 32"
                        (rule "expand_inInt" (formula "10"))
                        (rule "expand_inInt" (formula "14") (term "0,0,0,0"))
                        (rule "replace_int_MIN" (formula "10") (term "0,1"))
                        (rule "replace_int_MAX" (formula "10") (term "1,0"))
                        (rule "replace_int_MIN" (formula "14") (term "0,1,0,0,0,0"))
                        (rule "replace_int_MAX" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "notRight" (formula "18"))
                        (rule "notLeft" (formula "14"))
                        (rule "andLeft" (formula "11"))
                        (rule "replace_known_right" (formula "15") (term "0,0,0,0,0,1,1,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,1,1") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_elimNeg" (formula "19") (term "1,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimNeg" (formula "19") (term "1,1,1,0,1,0,0"))
                        (rule "polySimp_elimNeg" (formula "19") (term "1,0,1,0,2,0,1,0,0"))
                        (rule "polySimp_elimNeg" (formula "19") (term "1,0,1,0,0,0,0"))
                        (rule "polySimp_elimNeg" (formula "3") (term "1,0,1"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1,0,1,0,2,0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1,0,1,0,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1,1,1,0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "16") (term "1,0,0,0,0,1,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "16") (term "1,0,1,0,2,0,1,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "16") (term "1,0,0,1,1,1,0,1,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "16") (term "1,0,1,0,0,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "19") (term "1,0,0,1,1,1,0,1,0,0"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1,0,0,1,1,1,0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "16") (term "1,1,1,0,1,0,0,0,0,1,1"))
                        (rule "inEqSimp_geqRight" (formula "18"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "4"))
                        (rule "mod_axiom" (formula "19") (term "1,1,2,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,2,0,0,0,0"))
                        (rule "div_literals" (formula "19") (term "0,1,1,1,2,0,0,0,0"))
                        (rule "times_zero_2" (formula "19") (term "1,1,1,2,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "1,1,2,0,0,0,0"))
                        (rule "pow_literals" (formula "19") (term "1,2,0,0,0,0"))
                        (rule "mod_axiom" (formula "18") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                        (rule "div_literals" (formula "18") (term "0,1,0"))
                        (rule "times_zero_2" (formula "18") (term "1,0"))
                        (rule "add_zero_right" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "12"))
                  (rule "andRight" (formula "13"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "expand_inInt" (formula "10") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "7"))
                     (rule "replace_int_MAX" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "7") (term "1,0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1"))
                     (rule "notLeft" (formula "1"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_geqRight" (formula "14"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,2,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,2,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,2,0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,2,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1"))
                     (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,2,0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8"))
                     (rule "mod_axiom" (formula "14") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "pow_literals" (formula "11") (term "0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "12") (term "0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "14") (term "1,1,2,0,0,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,2,0,0,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,1,1,2,0,0,2,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,1,1,2,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "1,1,2,0,0,2,0,0"))
                     (rule "pow_literals" (formula "14") (term "1,2,0,0,2,0,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "pow_literals" (formula "11") (term "0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "14") (term "1,1,2,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,2,0,1,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,1,1,2,0,1,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,1,1,2,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "1,1,2,0,1,0,0"))
                     (rule "pow_literals" (formula "14") (term "1,2,0,1,0,0"))
                     (rule "mod_axiom" (formula "14") (term "0,1,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,1,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,0,1,0,1,0,1,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,0,1,0,1,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,0,1,0,0"))
                     (rule "pow_literals" (formula "14") (term "0,1,0,1,0,0"))
                     (rule "mod_axiom" (formula "12") (term "1,1,2,0,0,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,2,0,0,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,1,1,2,0,0,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,1,1,2,0,0,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,1,2,0,0,2,0,0,0,0,1,1"))
                     (rule "pow_literals" (formula "12") (term "1,2,0,0,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,1,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,1,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,1,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,1,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,1,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,1,0,1,0,0,0,0,1,1"))
                     (rule "pow_literals" (formula "12") (term "0,1,0,1,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "pow_literals" (formula "12") (term "0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "14") (term "0,1,0,1,0,0,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,0,1,0,1,0,1,0,0,2,0,0"))
                     (rule "times_zero_2" (formula "14") (term "0,1,0,1,0,1,0,0,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,0,1,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,0,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,0,0,2,0,0"))
                     (rule "pow_literals" (formula "14") (term "0,1,0,0,2,0,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "11") (term "1,1,2,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,2,0,1,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,1,2,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,1,2,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,1,2,0,1,0,0,0,0,1,1,0"))
                     (rule "pow_literals" (formula "11") (term "1,2,0,1,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "14") (term "0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,2,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,0,2,0,1,2,0,0"))
                     (rule "add_literals" (formula "14") (term "0,1,0,2,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "12") (term "1,1,2,0,1,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,2,0,1,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,1,1,2,0,1,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,1,1,2,0,1,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,1,2,0,1,0,0,0,0,1,1"))
                     (rule "pow_literals" (formula "12") (term "1,2,0,1,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "12") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "11") (term "1,1,2,0,0,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,1,2,0,0,2,0,0,0,0,1,1,0"))
                     (rule "pow_literals" (formula "11") (term "1,2,0,0,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "14") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "pow_literals" (formula "14") (term "0,1,0,0,2,0,0"))
                     (rule "mod_axiom" (formula "11") (term "1,0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,2,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0,2,0,0,0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "pow_literals" (formula "11") (term "0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "12") (term "1,0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,1,0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,1,0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0,2,0,0,0,0,1,1"))
                     (rule "leq_literals" (formula "12") (term "0,0,0,2,0,0,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "pow_literals" (formula "12") (term "0,1,0,1,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "14") (term "0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,0,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,0,0,0,1,2,0,0"))
                     (rule "add_literals" (formula "14") (term "0,1,0,0,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "14") (term "1,0,2,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,2,0,1,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,1,0,2,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,2,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "1,0,2,0,1,2,0,0"))
                     (rule "pow_literals" (formula "14") (term "0,2,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "2,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "14") (term "0,1,1,1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0,1,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,0,1,1,1,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,1,1,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,1,1,1,0,1,2,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,1,0,1,2,0,0"))
                     (rule "pow_literals" (formula "14") (term "1,1,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "14") (term "1,0,0,0,0,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,1,0,0,0,0,2,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,1,0,0,0,0,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "1,0,0,0,0,2,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,2,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0,2,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "pow_literals" (formula "14") (term "1,1,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "pow_literals" (formula "11") (term "1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,0,1,1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,1,0,0,0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "pow_literals" (formula "11") (term "1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,1,0,0,0,1,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,1,0,0,0,1,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,0,0,0,1,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,1,1"))
                     (rule "leq_literals" (formula "12") (term "0,0,1,0,0,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "mod_axiom" (formula "14") (term "1,0,0,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,2,0,0"))
                     (rule "div_literals" (formula "14") (term "0,1,1,0,0,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,1,0,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "14") (term "1,0,0,0,1,2,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,2,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,1,2,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "mod_axiom" (formula "11") (term "1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "pow_literals" (formula "11") (term "0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,1,2,0,0,0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "mod_axiom" (formula "12") (term "1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "pow_literals" (formula "12") (term "0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "2,0,1,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "pow_literals" (formula "12") (term "1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "12") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "12") (term "0,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "12") (term "0,1,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "leq_literals" (formula "12") (term "0,0,1,2,0,0,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0"))
                     (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "10"))
                     (rule "mul_literals" (formula "13") (term "1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "false_right" (formula "13"))
                     (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                     (rule "leq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                     (rule "leq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "0,1,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                     (rule "expand_moduloLong" (formula "11") (term "1,0,0"))
                     (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,0"))
                     (rule "replace_long_MIN" (formula "11") (term "0,1,0,0"))
                     (rule "expand_addJlong" (formula "11") (term "2,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,2,0,0"))
                     (rule "expand_moduloInteger" (formula "9") (term "0,0,0,1,1,0"))
                     (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,0,1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "replace_int_MIN" (formula "9") (term "0,0,0,0,1,1,0"))
                     (rule "expand_subJint" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0"))
                     (rule "expand_subJint" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "expand_moduloLong" (formula "10") (term "0,2,0,0,0,0,1,1"))
                     (rule "replace_long_MIN" (formula "10") (term "0,0,2,0,0,0,0,1,1"))
                     (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,0,2,0,0,0,0,1,1"))
                     (rule "replace_long_RANGE" (formula "10") (term "1,1,0,2,0,0,0,0,1,1"))
                     (rule "expand_moduloLong" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "replace_long_MIN" (formula "10") (term "0,1,0,0,0,0,1,1"))
                     (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,1,0,0,0,0,1,1"))
                     (rule "replace_long_RANGE" (formula "10") (term "1,1,1,0,0,0,0,1,1"))
                     (rule "expand_addJint" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,1"))
                     (rule "expand_moduloLong" (formula "10") (term "1,2,0,0,0,0,1,1"))
                     (rule "replace_long_RANGE" (formula "10") (term "1,1,1,2,0,0,0,0,1,1"))
                     (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,1,2,0,0,0,0,1,1"))
                     (rule "replace_long_MIN" (formula "10") (term "0,1,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,1,1,2,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "10") (term "1,1,2,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,2,0,0,0,0,1,1"))
                     (rule "div_literals" (formula "10") (term "0,1,1,1,2,0,0,0,0,1,1"))
                     (rule "times_zero_2" (formula "10") (term "1,1,1,2,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "1,1,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "1,2,0,0,0,0,1,1"))
                     (rule "expand_moduloInteger" (formula "1") (term "1,0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                     (rule "mod_axiom" (formula "1") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,1,0"))
                     (rule "equal_literals" (formula "1") (term "0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,0"))
                     (rule "expand_moduloLong" (formula "11") (term "1,0,2,0,0"))
                     (rule "replace_long_MIN" (formula "11") (term "0,1,0,2,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,2,0,0"))
                     (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,2,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0,2,0,0"))
                     (rule "expand_addJlong" (formula "9") (term "2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,2,1,0,1,0,0,0,1,1,0"))
                     (rule "expand_moduloLong" (formula "9") (term "1,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_RANGE" (formula "9") (term "1,1,1,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_MIN" (formula "9") (term "0,1,1,0,1,0,0,0,1,1,0"))
                     (rule "expand_moduloInteger" (formula "9") (term "1,1,0,0"))
                     (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                     (rule "mod_axiom" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                     (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,1,1,1,0,0"))
                     (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1,1,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                     (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "mod_axiom" (formula "10") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                     (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                     (rule "expand_subJint" (formula "1") (term "0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "expand_moduloLong" (formula "11") (term "2,0,0"))
                     (rule "replace_long_RANGE" (formula "11") (term "1,1,2,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "replace_long_MIN" (formula "11") (term "0,2,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,2,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,2,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,1,2,0,0"))
                     (rule "polyMod_pullOut" (formula "11") (term "1,2,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "expand_moduloLong" (formula "9") (term "2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_RANGE" (formula "9") (term "1,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_MIN" (formula "9") (term "0,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "expand_moduloInteger" (formula "10") (term "1,0,0,1"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,0,0,1"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                     (rule "mod_axiom" (formula "10") (term "1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                     (rule "expand_moduloInteger" (formula "1") (term "0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "mod_axiom" (formula "1") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                     (rule "equal_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "expand_moduloLong" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "replace_long_MIN" (formula "11") (term "0,1,0,1,2,0,0"))
                     (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,1,2,0,0"))
                     (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,1,2,0,0"))
                     (rule "add_literals" (formula "11") (term "0,1,1,0,1,2,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,2,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "mod_axiom" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,2,0,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,0,1,2,0,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,0,1,2,0,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,1,2,0,0"))
                     (rule "polyMod_pullOut" (formula "11") (term "1,2,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,1,2,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,1,2,0,0"))
                     (rule "expand_moduloLong" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_RANGE" (formula "9") (term "1,1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_MIN" (formula "9") (term "0,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polyMod_pullOut" (formula "9") (term "1,2,1,0,1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "expand_addJint" (formula "10") (term "0,1,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "expand_addJlong" (formula "10") (term "2,0,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,2,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,2,0,0,0,0,1,1"))
                     (rule "expand_subJint" (formula "10") (term "0,0,1"))
                     (rule "polySimp_elimSub" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,0,1"))
                     (rule "expand_moduloInteger" (formula "11") (term "0"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "11") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "expand_moduloLong" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_RANGE" (formula "9") (term "1,1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "replace_long_MIN" (formula "9") (term "0,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "9") (term "0,1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "div_literals" (formula "9") (term "0,1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "9") (term "1,1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polyMod_pullOut" (formula "9") (term "1,2,1,0,1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,2,1,0,1,0,0,0,1,1,0"))
                     (rule "expand_moduloInteger" (formula "10") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "10") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,0,1,1"))
                     (rule "mod_axiom" (formula "10") (term "0,1,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,1,1,0,0,1,1"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,0,1,1,0,0,1,1"))
                     (rule "equal_literals" (formula "10") (term "0,0,1,0,1,1,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0,1,1,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "10") (term "0,0,1,0,0,1,1,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1"))
                     (rule "nnf_imp2or" (formula "9") (term "0"))
                     (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "expand_addJint" (formula "10") (term "0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,1"))
                     (rule "polyMod_pullOut" (formula "10") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,1"))
                     (rule "mod_axiom" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,1"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0,0,1"))
                     (rule "equal_literals" (formula "10") (term "0,0,0,0,1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0"))
                     (rule "expand_moduloLong" (formula "10") (term "2,1,0,1,0,0,0,1,1"))
                     (rule "replace_long_RANGE" (formula "10") (term "1,1,2,1,0,1,0,0,0,1,1"))
                     (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "replace_long_MIN" (formula "10") (term "0,2,1,0,1,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "10") (term "1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polyMod_pullOut" (formula "10") (term "1,2,1,0,1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "1,1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polyMod_pullOut" (formula "10") (term "1,2,1,0,1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,2,1,0,1,0,0,0,1,1"))
                     (rule "expand_moduloInteger" (formula "10") (term "0,1,1,1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,1,1,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1"))
                     (rule "mod_axiom" (formula "10") (term "0,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,1,1,0,0,1,1"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "10") (term "0,0,1,0,0,1,1,0,0,1,1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "1,1,0,1,1,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,1,1,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                     (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                     (rule "equal_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "add_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "10"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "greater_literals" (formula "3") (term "0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "times_minus_one_1" (formula "12") (term "1,0,1,0,1,0,0"))
                     (rule "times_minus_one_1" (formula "12") (term "1,0,1,0,0,2,0,0"))
                     (rule "times_minus_one_1" (formula "12") (term "1,0,0,0,0,1,2,0,0"))
                     (rule "times_minus_one_1" (formula "12") (term "1,1,1,0,1,2,0,0"))
                     (rule "times_minus_one_1" (formula "12") (term "1,0,0,1,1,1,0,1,2,0,0"))
                     (rule "times_minus_one_1" (formula "12") (term "1,0,1,0,2,0,1,2,0,0"))
                     (rule "times_minus_one_1" (formula "11") (term "1,0,1,0,0,2,0,0,0,0,1,1"))
                     (rule "times_minus_one_1" (formula "11") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                     (rule "times_minus_one_1" (formula "11") (term "1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "times_minus_one_1" (formula "11") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                     (rule "times_minus_one_1" (formula "11") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                     (rule "times_minus_one_1" (formula "11") (term "1,0,1,0,1,0,0,0,0,1,1"))
                     (rule "times_minus_one_1" (formula "10") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_minus_one_1" (formula "10") (term "1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_minus_one_1" (formula "10") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_minus_one_1" (formula "10") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                     (rule "times_minus_one_1" (formula "10") (term "1,0,1,0,0,2,0,0,0,0,1,1,0"))
                     (rule "times_minus_one_1" (formula "10") (term "1,0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "eqTermCut" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0") (inst "s=Z(2(3(#)))") (userinteraction))
                     (branch "Assume 32 % 64 = 32"
                        (rule "applyEqRigid" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "0,1,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "0,0,0,0,2,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "1,1,2,0,1,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "0,1,0,1,0,0,2,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "1,1,2,0,0,2,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "0,1,0,0,0,0,1,2,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "11") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "0,0,0,1,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "0,1,0,1,0,1,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "1,1,2,0,1,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "0,0,0,0,2,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "0,1,0,1,0,0,2,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "1,1,2,0,0,2,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "0,1,0,0,0,0,1,2,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "0,1,0,0,1,1,1,0,1,2,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "12") (term "0,1,0,1,0,2,0,1,2,0,0,0,0,1,1") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "0,1,0,1,0,1,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "1,1,2,0,1,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "0,0,0,0,2,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "0,1,0,1,0,0,2,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "1,1,2,0,0,2,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "0,1,0,0,0,0,1,2,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1,1,1,0,1,2,0,0") (ifseqformula "10") (userinteraction))
                        (rule "applyEqRigid" (formula "13") (term "0,1,0,1,0,2,0,1,2,0,0") (ifseqformula "10") (userinteraction))
                        (rule "neg_literal" (formula "13") (term "1,0,1,0,2,0,1,2,0,0"))
                        (rule "add_literals" (formula "13") (term "0,1,0,2,0,1,2,0,0"))
                        (rule "less_literals" (formula "13") (term "0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "less_literals" (formula "11") (term "0,0,1,0,0,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "less_literals" (formula "12") (term "0,0,1,0,0,0,0,1,1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "less_literals" (formula "13") (term "0,0,0,2,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "less_literals" (formula "11") (term "0,0,0,2,0,0,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "pow_literals" (formula "12") (term "1,2,0,0,2,0,0,0,0,1,1"))
                        (rule "neg_literal" (formula "12") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                        (rule "neg_literal" (formula "12") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                        (rule "neg_literal" (formula "12") (term "1,0,1,0,0,2,0,0,0,0,1,1"))
                        (rule "less_literals" (formula "12") (term "0,0,0,2,0,0,0,0,1,1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "neg_literal" (formula "13") (term "1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "pow_literals" (formula "13") (term "1,0,1,0,0"))
                        (rule "neg_literal" (formula "13") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "pow_literals" (formula "13") (term "1,0,0,2,0,0"))
                        (rule "neg_literal" (formula "11") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                        (rule "neg_literal" (formula "11") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                        (rule "neg_literal" (formula "11") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                        (rule "pow_literals" (formula "11") (term "1,0,0,2,0,0,0,0,1,1,0"))
                        (rule "pow_literals" (formula "11") (term "1,0,1,0,0,0,0,1,1,0"))
                        (rule "neg_literal" (formula "12") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,1,2,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                        (rule "pow_literals" (formula "12") (term "1,0,1,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,1,2,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,1,2,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,1,2,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "11") (term "0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "12") (term "0,1,0,2,0,1,2,0,0,0,0,1,1"))
                        (rule "eqTermCut" (formula "12") (term "1,0,2,0,1,2,0,0,0,0,1,1") (inst "s=Z(1(3(#)))") (userinteraction))
                        (branch "Assume 31 % 64 = 31"
                           (rule "applyEqRigid" (formula "11") (term "0,0,0,1,2,0,0,0,0,1,1,0") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "11") (term "0,1,1,1,0,1,2,0,0,0,0,1,1,0") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "11") (term "1,0,2,0,1,2,0,0,0,0,1,1,0") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "13") (term "0,0,0,1,2,0,0,0,0,1,1") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "13") (term "0,1,1,1,0,1,2,0,0,0,0,1,1") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "13") (term "1,0,2,0,1,2,0,0,0,0,1,1") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "14") (term "0,0,0,1,2,0,0") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "14") (term "0,1,1,1,0,1,2,0,0") (ifseqformula "12") (userinteraction))
                           (rule "applyEqRigid" (formula "14") (term "1,0,2,0,1,2,0,0") (ifseqformula "12") (userinteraction))
                           (rule "less_literals" (formula "13") (term "0,0,1,2,0,0,0,0,1,1"))
                           (rule "neg_literal" (formula "13") (term "1,1,1,0,1,2,0,0,0,0,1,1"))
                           (rule "pow_literals" (formula "13") (term "0,2,0,1,2,0,0,0,0,1,1"))
                           (rule "pow_literals" (formula "13") (term "1,1,0,1,2,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "13") (term "2,0,1,2,0,0,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "ifthenelse_split" (formula "14") (term "0,0") (userinteraction))
                           (branch "i ≥ 0 TRUE"
                              (rule "eqTermCut" (formula "15") (term "0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                              (branch "Assume moduloInt(moduloLong(i / 4294967296)) = i / 4294967296"
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "1") (userinteraction))
                                 (rule "eqTermCut" (formula "13") (term "1,0,0,0,0,1,1,0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                                 (branch "Assume moduloLong(i / 4294967296) = i / 4294967296"
                                    (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                                    (rule "applyEq" (formula "14") (term "0,2,0,0,0,0,1,1,0") (ifseqformula "13") (userinteraction))
                                    (rule "less_literals" (formula "14") (term "0,0,1,2,0,0,0,0,1,1,0") (userinteraction))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "2")))
                                    (rule "eqTermCut" (formula "14") (term "0,0,0,1,1,0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                                    (branch "Assume moduloInt(i / 4294967296) = i / 4294967296"
                                       (rule "applyEq" (formula "15") (term "0,0,0,1,1,0") (ifseqformula "14") (userinteraction))
                                       (rule "applyEq" (formula "17") (term "1,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                                       (rule "applyEq" (formula "17") (term "0,2,0,0,0,0,1,1") (ifseqformula "13") (userinteraction))
                                       (rule "eqTermCut" (formula "17") (term "1,2,0,0,0,0,1,1") (inst "s=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (userinteraction))
                                       (branch "Assume moduloLong(4294967296) = 4294967296"
                                          (rule "applyEqRigid" (formula "18") (term "1,2,0,0,0,0,1,1") (ifseqformula "17") (userinteraction))
                                          (rule "eqTermCut" (formula "18") (term "2,0,0,0,0,1,1") (inst "s=add(div(i, Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                                          (branch "Assume addJlong(i / 4294967296, 4294967296) = i / 4294967296 + 4294967296"
                                             (rule "applyEq" (formula "19") (term "2,0,0,0,0,1,1") (ifseqformula "18") (userinteraction))
                                             (rule "eqTermCut" (formula "19") (term "1,1,0,0,1,1") (inst "s=sub(Z(2(3(#))),
    add(result_numberOfLeadingZeros_0, Z(1(#))))") (userinteraction))
                                             (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) = 32 - (result_numberOfLeadingZeros_0 + 1)"
                                                (rule "applyEq" (formula "20") (term "1,1,0,0,1,1") (ifseqformula "19") (userinteraction))
                                                (rule "eqTermCut" (formula "22") (term "1,1,1,0,0") (inst "s=add(Z(1(#)), result_numberOfLeadingZeros_0)") (userinteraction))
                                                (branch "Assume moduloInt(1 + result_numberOfLeadingZeros_0) = 1 + result_numberOfLeadingZeros_0"
                                                   (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "1") (userinteraction))
                                                   (rule "eqTermCut" (formula "23") (term "1,1,0,0") (inst "s=sub(Z(4(6(#))),
    add(Z(1(#)), result_numberOfLeadingZeros_0))") (userinteraction))
                                                   (branch "Assume subJint(64, 1 + result_numberOfLeadingZeros_0) = 64 - (1 + result_numberOfLeadingZeros_0)"
                                                      (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "1") (userinteraction))
                                                      (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "21") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "22") (term "0,0,0,0,1,1") (userinteraction))
                                                      (branch "i ≥ 0 TRUE"
                                                         (rule "sub" (formula "24") (term "1,1,0,0"))
                                                         (rule "minus_distribute_1" (formula "24") (term "1,1,1,0,0"))
                                                         (rule "neg_literal" (formula "24") (term "0,1,1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                                         (rule "sub" (formula "22") (term "1,1,0,0,1,1"))
                                                         (rule "minus_distribute_1" (formula "22") (term "1,1,1,0,0,1,1"))
                                                         (rule "neg_literal" (formula "22") (term "1,1,1,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0,1,1"))
                                                         (rule "sub" (formula "22") (term "0,0,1"))
                                                         (rule "minus_distribute_1" (formula "22") (term "1,0,0,1"))
                                                         (rule "neg_literal" (formula "22") (term "1,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                         (rule "sub" (formula "21") (term "1"))
                                                         (rule "minus_distribute_1" (formula "21") (term "1,1"))
                                                         (rule "neg_literal" (formula "21") (term "1,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                                         (rule "sub" (formula "1") (term "1"))
                                                         (rule "minus_distribute_1" (formula "1") (term "1,1"))
                                                         (rule "neg_literal" (formula "1") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                         (rule "add_literals" (formula "1") (term "0,1"))
                                                         (rule "cut" (inst "cutFormula=lt(i<<origin(\"User_Interaction @ node 183343 (cut)\",\"[]\")>>,
   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))<<origin(\"User_Interaction @ node 183343 (cut)\",\"[]\")>>") (userinteraction))
                                                         (branch "CUT: i < 4294967296 TRUE"
                                                            (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                                            (rule "expand_inInt" (formula "12"))
                                                            (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                                            (rule "replace_int_MAX" (formula "12") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "12") (term "0,1"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "polySimp_elimNeg" (formula "22") (term "1,0,1"))
                                                            (rule "polySimp_elimNeg" (formula "26") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimNeg" (formula "23") (term "1,0,1,1,0,0,1,1"))
                                                            (rule "polySimp_elimNeg" (formula "23") (term "1,0,0,0,1"))
                                                            (rule "polySimp_elimNeg" (formula "2") (term "1,1"))
                                                            (rule "polySimp_addComm0" (formula "21") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "1"))
                                                            (rule "add_literals" (formula "22") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0,1,1"))
                                                            (rule "add_literals" (formula "23") (term "0,1,1,0,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                                            (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "12"))
                                                            (rule "mod_axiom" (formula "19") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                            (rule "div_literals" (formula "19") (term "0,1,0"))
                                                            (rule "times_zero_2" (formula "19") (term "1,0"))
                                                            (rule "add_zero_right" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "mod_axiom" (formula "15") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                            (rule "div_literals" (formula "15") (term "0,1,0"))
                                                            (rule "times_zero_2" (formula "15") (term "1,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "20") (term "0,0,0,1,1") (ifseqformula "15"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0"))
                                                            (rule "qeq_literals" (formula "21") (term "0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "false_right" (formula "21"))
                                                            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                                            (rule "leq_literals" (formula "7") (term "0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "9") (term "0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                                                            (rule "expand_moduloInteger" (formula "3") (term "0"))
                                                            (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                                            (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0"))
                                                            (rule "elimGcdEq" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,0,1"))
                                                            (rule "add_literals" (formula "3") (term "1,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "leq_literals" (formula "3") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                            (rule "equal_literals" (formula "3") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "expand_addJint" (formula "15") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
                                                            (rule "expand_moduloLong" (formula "13") (term "0"))
                                                            (rule "replace_long_RANGE" (formula "13") (term "1,1,0"))
                                                            (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                            (rule "replace_long_MIN" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "add_literals" (formula "13") (term "0,0"))
                                                            (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                            (rule "div_literals" (formula "13") (term "0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,0"))
                                                            (rule "add_literals" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "expand_subJint" (formula "2") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "2") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "expand_moduloLong" (formula "10") (term "0"))
                                                            (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,0"))
                                                            (rule "replace_long_RANGE" (formula "10") (term "1,1,0"))
                                                            (rule "replace_long_MIN" (formula "10") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                            (rule "expand_addJlong" (formula "13") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                            (rule "expand_moduloInteger" (formula "11") (term "0"))
                                                            (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "11") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                            (rule "expand_subJint" (formula "14") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                            (rule "expand_moduloInteger" (formula "2") (term "0"))
                                                            (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0"))
                                                            (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(1(1(7(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "times_zero_1" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                                                            (rule "equal_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1"))
                                                            (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                                                            (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                                            (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                                            (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0"))
                                                            (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                                            (rule "expand_moduloLong" (formula "13") (term "0"))
                                                            (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                            (rule "replace_long_MIN" (formula "13") (term "0,0"))
                                                            (rule "replace_long_RANGE" (formula "13") (term "1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "13"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                            (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0"))
                                                            (rule "expand_moduloInteger" (formula "14") (term "0"))
                                                            (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0"))
                                                            (rule "mod_axiom" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                                                            (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,0"))
                                                            (rule "equal_literals" (formula "14") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0"))
                                                            (rule "mul_literals" (formula "14") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "14"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                            (rule "newSym_eq" (formula "14") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(result_numberOfLeadingZeros_0, Z(0(#)))),
    mul(moduloInt(add(Z(1(#)),
                      result_numberOfLeadingZeros_0)),
        Z(0(#))))") (inst "l=l_0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,1,1"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,1,1"))
                                                            (rule "add_zero_right" (formula "14") (term "0,1,1"))
                                                            (rule "add_zero_right" (formula "14") (term "1,1"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1"))
                                                            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                                                            (rule "polySimp_homoEq" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                            (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "15"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=l_0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
                                                            (rule "equal_literals" (formula "14") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "polySimp_homoEq" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,1,1,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,1,1,1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,1,1,1,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "14"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                            (rule "nnf_imp2or" (formula "12") (term "0"))
                                                            (rule "expand_moduloInteger" (formula "15") (term "0"))
                                                            (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                                            (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                            (rule "mod_axiom" (formula "15") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                                            (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=l_0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                                            (rule "add_literals" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "15") (term "0,1,0"))
                                                            (rule "add_literals" (formula "15") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "15") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "15") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1"))
                                                            (rule "add_literals" (formula "15") (term "1,0,0,1"))
                                                            (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                            (rule "equal_literals" (formula "15") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                            (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "mul_literals" (formula "15") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                            (rule "add_literals" (formula "15") (term "0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0"))
                                                            (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,1,1,0,0"))
                                                            (rule "div_axiom" (formula "17") (term "0") (inst "quotient=quotient_0"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "equal_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "19") (term "0,0,0,1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "15") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                                                            (rule "mod_axiom" (formula "13") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "0,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0"))
                                                            (rule "mod_axiom" (formula "14") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "0,0"))
                                                            (rule "add_zero_left" (formula "14") (term "0"))
                                                            (rule "mod_axiom" (formula "16") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                            (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "16") (term "0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "16"))
                                                            (rule "mul_literals" (formula "16") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "elimGcdEq" (formula "16") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                            (rule "add_literals" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "16") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "qeq_literals" (formula "16") (term "0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "add_zero_left" (formula "14") (term "0,0,1"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                                            (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "qeq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                                            (rule "add_literals" (formula "13") (term "1,0,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0,0,1"))
                                                            (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                            (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "13") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "qeq_literals" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                            (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                            (rule "neg_literal" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "21"))
                                                            (rule "add_zero_right" (formula "2") (term "1"))
                                                            (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "2"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0"))
                                                            (rule "qeq_literals" (formula "21") (term "0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "false_right" (formula "21"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                            (rule "times_zero_1" (formula "8") (term "0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "mul_literals" (formula "8") (term "1"))
                                                            (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "2"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                            (rule "greater_literals" (formula "8") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "closeFalse" (formula "8"))
                                                         )
                                                         (branch "CUT: i < 4294967296 FALSE"
                                                             (opengoal " ")
                                                         )
                                                      )
                                                      (branch "i ≥ 0 FALSE"
                                                         (rule "close" (formula "23") (ifseqformula "4"))
                                                      )
                                                   )
                                                   (branch "Assume subJint(64, 1 + result_numberOfLeadingZeros_0) != 64 - (1 + result_numberOfLeadingZeros_0)"
                                                      (rule "expand_inInt" (formula "11"))
                                                      (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                                      (rule "replace_int_MAX" (formula "11") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "11") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                                      (rule "notLeft" (formula "5"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "replace_known_left" (formula "21") (term "0,0,0,0,0,1,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "22") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "1,1,1"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "1,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                                      (rule "add_literals" (formula "22") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                                      (rule "add_literals" (formula "20") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "21") (term "0,1,1,0,0,1,1"))
                                                      (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "mod_axiom" (formula "13") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                      (rule "div_literals" (formula "13") (term "0,1,0"))
                                                      (rule "times_zero_2" (formula "13") (term "1,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "mod_axiom" (formula "16") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                      (rule "div_literals" (formula "16") (term "0,1,0"))
                                                      (rule "times_zero_2" (formula "16") (term "1,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "18") (term "0,0,0,1,1") (ifseqformula "13"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                                                      (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "11"))
                                                      (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "false_right" (formula "20"))
                                                      (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_notGeq" (formula "11") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,1,0"))
                                                      (rule "expand_subJint" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "expand_moduloInteger" (formula "1") (term "0"))
                                                      (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                                                      (rule "replace_int_MIN" (formula "1") (term "0,0"))
                                                      (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "elimGcdEq" (formula "1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,1,0"))
                                                      (rule "add_literals" (formula "1") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0,1,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "expand_addJint" (formula "14") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
                                                      (rule "expand_moduloLong" (formula "12") (term "0"))
                                                      (rule "replace_long_MIN" (formula "12") (term "0,0"))
                                                      (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                      (rule "replace_long_RANGE" (formula "12") (term "1,1,0"))
                                                      (rule "add_literals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                      (rule "div_literals" (formula "12") (term "0,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "12") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0"))
                                                      (rule "add_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "expand_subJint" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                                      (rule "expand_addJlong" (formula "12") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                      (rule "expand_moduloInteger" (formula "10") (term "0"))
                                                      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
                                                      (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
                                                      (rule "replace_int_MIN" (formula "10") (term "0,0"))
                                                      (rule "polySimp_homoEq" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "expand_moduloLong" (formula "9") (term "0"))
                                                      (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,0"))
                                                      (rule "replace_long_RANGE" (formula "9") (term "1,1,0"))
                                                      (rule "replace_long_MIN" (formula "9") (term "0,0"))
                                                      (rule "polySimp_homoEq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "expand_subJint" (formula "15") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0"))
                                                      (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0"))
                                                      (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                                      (rule "mod_axiom" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                      (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,1,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,0"))
                                                      (rule "mod_axiom" (formula "13") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "13") (term "0,0,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                      (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,1,0"))
                                                      (rule "expand_moduloInteger" (formula "17") (term "1,1,0,0"))
                                                      (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "replace_int_RANGE" (formula "17") (term "1,1,1,1,0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,1,1,0,0"))
                                                      (rule "mod_axiom" (formula "17") (term "1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                                      (rule "polyDiv_pullOut" (formula "17") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0,1,1,1,0,0"))
                                                      (rule "equal_literals" (formula "17") (term "0,0,1,1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,1,1,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,1,1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                                      (rule "expand_moduloLong" (formula "12") (term "0"))
                                                      (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                      (rule "replace_long_MIN" (formula "12") (term "0,0"))
                                                      (rule "replace_long_RANGE" (formula "12") (term "1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "polyMod_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "15") (term "0"))
                                                      (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                                      (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "15"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0"))
                                                      (rule "mod_axiom" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0"))
                                                      (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(1(1(7(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,1,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,1"))
                                                      (rule "add_literals" (formula "15") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "qeq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                                      (rule "equal_literals" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "nnf_imp2or" (formula "11") (term "0"))
                                                      (rule "expand_subJint" (formula "13") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "0"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0"))
                                                      (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0"))
                                                      (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(7(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "qeq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1"))
                                                      (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_0"))
                                                      (rule "equal_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "14") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "17") (term "0,0,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
                                                      (rule "mod_axiom" (formula "13") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0"))
                                                      (rule "mod_axiom" (formula "12") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0"))
                                                      (rule "mod_axiom" (formula "15") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "15"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                                      (rule "add_literals" (formula "12") (term "1,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "leq_literals" (formula "12") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0"))
                                                      (rule "qeq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "qeq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                      (rule "times_zero_1" (formula "6") (term "0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "leq_literals" (formula "6") (term "0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "21"))
                                                      (rule "add_zero_right" (formula "6") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "6"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "cut_direct" (formula "19") (term "0,0"))
                                                      (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "19"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0"))
                                                         (rule "div_literals" (formula "20") (term "0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "closeTrue" (formula "20"))
                                                      )
                                                      (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "andLeft" (formula "19"))
                                                         (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "19"))
                                                         (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "false_right" (formula "21"))
                                                         (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "19"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "div_axiom" (formula "5") (term "0") (inst "quotient=quotient_1"))
                                                         (rule "equal_literals" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "qeq_literals" (formula "5") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "mul_literals" (formula "5") (term "1,1,1"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                         (rule "add_literals" (formula "7") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "5"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "5"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "5"))
                                                         (rule "mul_literals" (formula "7") (term "1,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "mul_literals" (formula "6") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1"))
                                                         (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "21"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "6") (term "0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "shift_paren_or" (formula "16") (term "0"))
                                                         (rule "div_axiom" (formula "22") (term "0,1,1,1,0,0") (inst "quotient=quotient_2"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "22"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "25"))
                                                         (rule "add_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "3"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "false_right" (formula "25"))
                                                         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "17") (term "0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                         (rule "inEqSimp_contradInEq5" (formula "17") (ifseqformula "3"))
                                                         (rule "times_zero_1" (formula "17") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "17") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "qeq_literals" (formula "17") (term "0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "closeFalse" (formula "17"))
                                                      )
                                                   )
                                                )
                                                (branch "Assume moduloInt(1 + result_numberOfLeadingZeros_0) != 1 + result_numberOfLeadingZeros_0"
                                                   (rule "expand_inInt" (formula "10"))
                                                   (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "10") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "replace_known_left" (formula "20") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "polySimp_elimSub" (formula "19") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "1,1,1"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "1,1,1,1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,1,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                                   (rule "add_literals" (formula "19") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,1,1"))
                                                   (rule "add_literals" (formula "20") (term "0,1,1,0,0,1,1"))
                                                   (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9"))
                                                   (rule "mod_axiom" (formula "16") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                   (rule "div_literals" (formula "16") (term "0,1,0"))
                                                   (rule "times_zero_2" (formula "16") (term "1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "mod_axiom" (formula "12") (term "0"))
                                                   (rule "div_literals" (formula "12") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                   (rule "times_zero_2" (formula "12") (term "1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "17") (term "0,0,0,1,1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "16"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "10"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0"))
                                                   (rule "qeq_literals" (formula "19") (term "0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "false_right" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "7") (term "0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "4") (term "0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                                                   (rule "expand_moduloLong" (formula "8") (term "0"))
                                                   (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,0"))
                                                   (rule "replace_long_RANGE" (formula "8") (term "1,1,0"))
                                                   (rule "replace_long_MIN" (formula "8") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "8"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                   (rule "expand_subJint" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "17") (term "0,1,1,0,0"))
                                                   (rule "expand_moduloInteger" (formula "9") (term "0"))
                                                   (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "9") (term "0,0"))
                                                   (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "9"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                   (rule "expand_moduloLong" (formula "11") (term "0"))
                                                   (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                                   (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                                   (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                                   (rule "add_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "mod_axiom" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                   (rule "div_literals" (formula "11") (term "0,1,0,1,0"))
                                                   (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,0"))
                                                   (rule "add_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "expand_subJint" (formula "12") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                                   (rule "expand_addJlong" (formula "11") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                   (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "expand_moduloInteger" (formula "14") (term "0"))
                                                   (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                                   (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0"))
                                                   (rule "mod_axiom" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0"))
                                                   (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "0,1,0"))
                                                   (rule "times_zero_1" (formula "14") (term "0,0,1"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "leq_literals" (formula "14") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "qeq_literals" (formula "14") (term "0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
                                                   (rule "equal_literals" (formula "14") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "14"))
                                                   (rule "mul_literals" (formula "14") (term "1"))
                                                   (rule "expand_moduloInteger" (formula "16") (term "0,1,0,1,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,1,1,0,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,1,1,0,0"))
                                                   (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1,1,0,0"))
                                                   (rule "mod_axiom" (formula "16") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0"))
                                                   (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0,1,0,1,1,0,0"))
                                                   (rule "equal_literals" (formula "16") (term "0,0,1,0,1,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0"))
                                                   (rule "expand_moduloInteger" (formula "12") (term "0"))
                                                   (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                                   (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0"))
                                                   (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                                                   (rule "polyDiv_pullOut" (formula "12") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "equal_literals" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "newSym_eq" (formula "12") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(result_numberOfLeadingZeros_0, Z(0(#)))),
    mul(addJint(result_numberOfLeadingZeros_0, Z(1(#))),
        Z(0(#))))") (inst "l=l_0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,1,1"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,1,1"))
                                                   (rule "polySimp_addLiterals" (formula "12") (term "1,1"))
                                                   (rule "add_zero_right" (formula "12") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "1"))
                                                   (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
                                                   (rule "polySimp_homoEq" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                   (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=l_0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0"))
                                                   (rule "equal_literals" (formula "12") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,1,1,0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1,1,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                   (rule "expand_moduloLong" (formula "11") (term "0"))
                                                   (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                                   (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                                   (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0"))
                                                   (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                                                   (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                                   (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                                   (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,1,0,0"))
                                                   (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                                   (rule "expand_moduloInteger" (formula "17") (term "1,1,0,0"))
                                                   (rule "replace_int_RANGE" (formula "17") (term "1,1,1,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,1,1,1,0,0"))
                                                   (rule "polyMod_pullOut" (formula "17") (term "1,1,1,0,0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,1,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,1,1,1,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,1,1,1,0,0"))
                                                   (rule "mod_axiom" (formula "17") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                                   (rule "polyDiv_pullOut" (formula "17") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0,1,1,1,0,0"))
                                                   (rule "equal_literals" (formula "17") (term "0,0,1,1,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,1,1,1,1,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,1,1,1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,1,1,0,0"))
                                                   (rule "expand_addJint" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                   (rule "nnf_imp2or" (formula "10") (term "0"))
                                                   (rule "expand_moduloInteger" (formula "13") (term "0"))
                                                   (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                                   (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                   (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                                   (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=l_0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                   (rule "add_literals" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "13") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "13") (term "0"))
                                                   (rule "add_literals" (formula "13") (term "1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "equal_literals" (formula "13") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                                   (rule "polySimp_homoEq" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                   (rule "add_literals" (formula "15") (term "0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0"))
                                                   (rule "polySimp_invertEq" (formula "15"))
                                                   (rule "times_zero_2" (formula "15") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                   (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                                                   (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_0"))
                                                   (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                   (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "equal_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "17") (term "0,0,0,1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                                                   (rule "mod_axiom" (formula "12") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "12") (term "0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0"))
                                                   (rule "mod_axiom" (formula "11") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0"))
                                                   (rule "mod_axiom" (formula "14") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "14"))
                                                   (rule "mul_literals" (formula "14") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,1,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,1"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "leq_literals" (formula "14") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "qeq_literals" (formula "14") (term "0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "elimGcdEq" (formula "11") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "qeq_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "add_literals" (formula "12") (term "1,0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "12") (term "0,0,1"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "times_zero_1" (formula "12") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "12") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "qeq_literals" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                   (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                   (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                   (rule "times_zero_1" (formula "5") (term "0,0"))
                                                   (rule "add_zero_left" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0"))
                                                   (rule "leq_literals" (formula "5") (term "0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "21"))
                                                   (rule "add_zero_right" (formula "5") (term "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "5"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "cut_direct" (formula "19") (term "0,0"))
                                                   (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "applyEq" (formula "21") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "19"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,1,1,1,0,0"))
                                                      (rule "div_literals" (formula "21") (term "0,1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "18"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "div_literals" (formula "17") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0"))
                                                      (rule "close" (formula "19") (ifseqformula "17"))
                                                   )
                                                   (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "19"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_1"))
                                                      (rule "mul_literals" (formula "16") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "16") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "1"))
                                                      (rule "add_literals" (formula "18") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                                                      (rule "eqSymm" (formula "16"))
                                                      (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "16"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "16"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "20"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "div_axiom" (formula "22") (term "0,1,1,1,0,0") (inst "quotient=quotient_2"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "equal_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                      (rule "add_literals" (formula "3") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "14") (term "0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                      (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0"))
                                                      (rule "qeq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "23"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "15"))
                                                      (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "5") (term "1,1"))
                                                      (rule "add_literals" (formula "5") (term "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "2") (term "1,1"))
                                                      (rule "add_literals" (formula "2") (term "1"))
                                                      (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "26") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,1,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "22"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "div_axiom" (formula "20") (term "0") (inst "quotient=quotient_3"))
                                                      (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "equal_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                                      (rule "add_literals" (formula "22") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "1"))
                                                      (rule "add_literals" (formula "22") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                                      (rule "polySimp_homoEq" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "applyEq" (formula "26") (term "0") (ifseqformula "20"))
                                                      (rule "applyEqRigid" (formula "23") (term "1,1") (ifseqformula "20"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "1"))
                                                      (rule "add_literals" (formula "23") (term "0,1"))
                                                      (rule "add_zero_left" (formula "23") (term "1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26"))
                                                      (rule "mul_literals" (formula "26") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "add_literals" (formula "21") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "leq_literals" (formula "21") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_strengthen0" (formula "21") (ifseqformula "27"))
                                                      (rule "add_literals" (formula "21") (term "1"))
                                                      (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                      (rule "qeq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "false_right" (formula "27"))
                                                      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "23"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1"))
                                                      (rule "inEqSimp_contradInEq3" (formula "13") (ifseqformula "22"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "qeq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "closeFalse" (formula "13"))
                                                   )
                                                )
                                             )
                                             (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) != 32 - (result_numberOfLeadingZeros_0 + 1)"
                                                (rule "expand_inInt" (formula "9"))
                                                (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "notLeft" (formula "18"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "18") (term "1"))
                                                (rule "polySimp_addComm0" (formula "20") (term "1,1,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                                (rule "add_literals" (formula "20") (term "0,1"))
                                                (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9"))
                                                (rule "mod_axiom" (formula "16") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                (rule "div_literals" (formula "16") (term "0,1,0"))
                                                (rule "times_zero_2" (formula "16") (term "1,0"))
                                                (rule "add_zero_right" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "mod_axiom" (formula "12") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                (rule "div_literals" (formula "12") (term "0,1,0"))
                                                (rule "times_zero_2" (formula "12") (term "1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "16") (term "0,0,0,1,1") (ifseqformula "12"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "10"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0"))
                                                (rule "qeq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "false_right" (formula "18"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                                                (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                                                (rule "expand_moduloLong" (formula "8") (term "0"))
                                                (rule "replace_long_MIN" (formula "8") (term "0,0"))
                                                (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,0"))
                                                (rule "replace_long_RANGE" (formula "8") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "expand_subJint" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "16") (term "0,1,1,0,0"))
                                                (rule "expand_addJlong" (formula "12") (term "0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "9") (term "0"))
                                                (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "9") (term "0,0"))
                                                (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "expand_moduloLong" (formula "11") (term "0"))
                                                (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                                (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                                (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_homoEq" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "mod_axiom" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                (rule "div_literals" (formula "11") (term "0,1,0,1,0"))
                                                (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0"))
                                                (rule "add_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "expand_subJint" (formula "13") (term "0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                                                (rule "expand_subJint" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_elimSub" (formula "12") (term "0,0,0,1"))
                                                (rule "expand_subJint" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "expand_moduloInteger" (formula "15") (term "1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,1,0,0"))
                                                (rule "replace_int_RANGE" (formula "15") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                                (rule "mod_axiom" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                                (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,1,1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                                (rule "expand_moduloLong" (formula "11") (term "0"))
                                                (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                                (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                                (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0"))
                                                (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                                                (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                                (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                                (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                                (rule "expand_addJint" (formula "13") (term "0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,0,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,0,1"))
                                                (rule "mod_axiom" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,0,0,1"))
                                                (rule "equal_literals" (formula "12") (term "0,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                                                (rule "expand_moduloInteger" (formula "15") (term "0,1,0,0,1,1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,0,1,0,0,1,1,1,0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,0,0,1,1,1,0,0"))
                                                (rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,0,0,1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,0,0"))
                                                (rule "mod_axiom" (formula "15") (term "0,1,0,0,1,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,0,1,0,0,1,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,1,1,0,0"))
                                                (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,1,1,0,0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                (rule "equal_literals" (formula "15") (term "0,0,1,0,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,1,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,1,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "15") (term "0,0,1,0,0,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "13") (term "0"))
                                                (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                                                (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "13") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0"))
                                                (rule "mul_literals" (formula "13") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "nnf_imp2or" (formula "10") (term "0"))
                                                (rule "expand_addJint" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                                                (rule "expand_addJint" (formula "12") (term "0,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0,1,1,0,1"))
                                                (rule "expand_addJint" (formula "12") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,0,0,0,1"))
                                                (rule "expand_moduloInteger" (formula "15") (term "0,1,1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,0,1,1,1,0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,1,1,0,0"))
                                                (rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0"))
                                                (rule "mod_axiom" (formula "15") (term "0,1,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "0,1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,0,1,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0"))
                                                (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "15") (term "0,0,1,0,0,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,1,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "13") (term "0,1,1"))
                                                (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,1"))
                                                (rule "replace_int_MIN" (formula "13") (term "0,0,1,1"))
                                                (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                (rule "polySimp_homoEq" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(6(1(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(moduloInt(add(Z(1(#)),
                          result_numberOfLeadingZeros_0)),
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            result_numberOfLeadingZeros_0),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                                (rule "qeq_literals" (formula "13") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "0,0"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "polyDiv_pullOut" (formula "13") (term "1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,1,1"))
                                                (rule "equal_literals" (formula "13") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                (rule "add_literals" (formula "13") (term "0,1"))
                                                (rule "add_zero_left" (formula "13") (term "1"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "mod_axiom" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1"))
                                                (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0"))
                                                (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0"))
                                                (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "mod_axiom" (formula "13") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                (rule "equal_literals" (formula "13") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_homoEq" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "polyDiv_pullOut" (formula "13") (term "0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "13") (term "0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,1"))
                                                (rule "add_literals" (formula "13") (term "0,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "13") (term "1"))
                                                (rule "add_literals" (formula "13") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "13") (term "1,1"))
                                                (rule "add_zero_right" (formula "13") (term "1"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,0,0,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,0,0,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,0,0,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                                                (rule "mod_axiom" (formula "12") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0,0,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,1,0,1"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,0,1"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,0,1"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "1,0,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,1,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,1"))
                                                (rule "div_axiom" (formula "14") (term "0") (inst "quotient=quotient_0"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "15") (term "0,0,0,1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                                                (rule "mod_axiom" (formula "14") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "mod_axiom" (formula "11") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                                                (rule "add_literals" (formula "11") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0"))
                                                (rule "mod_axiom" (formula "12") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "14") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "leq_literals" (formula "14") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                                (rule "add_literals" (formula "12") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "times_zero_1" (formula "12") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "12") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "elimGcdEq" (formula "11") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "qeq_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                (rule "times_zero_1" (formula "5") (term "0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "19"))
                                                (rule "add_zero_right" (formula "5") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "false_right" (formula "19"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "expand_moduloInteger" (formula "17") (term "1,1,0,0,1,1"))
                                                (rule "replace_int_RANGE" (formula "17") (term "1,1,1,1,0,0,1,1"))
                                                (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,1,0,0,1,1"))
                                                (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,1,1,1,0,0,1,1"))
                                                (rule "polyMod_pullOut" (formula "17") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,1,1,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,1,1,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                                (rule "mod_axiom" (formula "17") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "17") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                                (rule "equal_literals" (formula "17") (term "0,0,1,1,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,1,1,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,1,1,0,0,1,1"))
                                                (rule "expand_moduloInteger" (formula "17") (term "0,0,1"))
                                                (rule "replace_int_MIN" (formula "17") (term "0,0,0,1"))
                                                (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0,0,1"))
                                                (rule "replace_int_RANGE" (formula "17") (term "1,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "17") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0,1"))
                                                (rule "mod_axiom" (formula "17") (term "0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1"))
                                                (rule "mul_literals" (formula "17") (term "0,0,1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                                (rule "polyDiv_pullOut" (formula "17") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "17") (term "0,0,1,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,1,1,1,0,1,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,1,1,1,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,1"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "1,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,1,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,1,0,1"))
                                                (rule "add_zero_right" (formula "17") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "1,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,1,0,1"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "div_axiom" (formula "19") (term "0,1,1,1,0,0") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "14") (term "0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "15"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "2") (term "1,1"))
                                                (rule "add_literals" (formula "2") (term "1"))
                                                (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "5") (term "1,1"))
                                                (rule "add_literals" (formula "5") (term "1"))
                                                (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "23") (term "1,0,1,1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "div_axiom" (formula "17") (term "0,1,1,1,0,0") (inst "quotient=quotient_2"))
                                                (rule "mul_literals" (formula "17") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "17") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "equal_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                                (rule "add_literals" (formula "19") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "19") (term "1"))
                                                (rule "add_literals" (formula "19") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                                (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "19") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "18"))
                                                (rule "times_zero_1" (formula "13") (term "0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0"))
                                                (rule "qeq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "13"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "19"))
                                                (rule "mul_literals" (formula "21") (term "1,1"))
                                                (rule "add_literals" (formula "21") (term "1"))
                                                (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "19"))
                                                (rule "mul_literals" (formula "18") (term "1,1"))
                                                (rule "add_literals" (formula "18") (term "1"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "applyEqRigid" (formula "21") (term "0,1,0,1,1,0,0") (ifseqformula "19"))
                                                (rule "mul_literals" (formula "21") (term "1,0,1,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "19"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "13"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "div_axiom" (formula "22") (term "0") (inst "quotient=quotient_3"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "24") (term "0,0,0,1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                                                (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,1,1") (ifseqformula "1"))
                                                (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0,1,1"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "26"))
                                                (rule "add_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "3"))
                                                (rule "add_zero_left" (formula "26") (term "0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,0"))
                                                (rule "leq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "false_right" (formula "26"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "17") (term "0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "inEqSimp_contradInEq5" (formula "17") (ifseqformula "3"))
                                                (rule "times_zero_1" (formula "17") (term "1,1,0"))
                                                (rule "greater_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "qeq_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "closeFalse" (formula "17"))
                                             )
                                          )
                                          (branch "Assume addJlong(i / 4294967296, 4294967296) != i / 4294967296 + 4294967296"
                                             (rule "expand_inInt" (formula "9"))
                                             (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                                             (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                             (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "notLeft" (formula "17"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "replace_known_left" (formula "18") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "polySimp_addComm0" (formula "19") (term "1"))
                                             (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9"))
                                             (rule "mod_axiom" (formula "16") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                             (rule "div_literals" (formula "16") (term "0,1,0"))
                                             (rule "times_zero_2" (formula "16") (term "1,0"))
                                             (rule "add_zero_right" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "mod_axiom" (formula "12") (term "0"))
                                             (rule "div_literals" (formula "12") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                             (rule "times_zero_2" (formula "12") (term "1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "15") (term "0,0,0,1,1") (ifseqformula "12"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "10"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "qeq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "false_right" (formula "17"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                                             (rule "expand_moduloInteger" (formula "9") (term "0"))
                                             (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "9") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0"))
                                             (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                                             (rule "expand_subJint" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0"))
                                             (rule "expand_moduloLong" (formula "8") (term "0"))
                                             (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,0"))
                                             (rule "replace_long_RANGE" (formula "8") (term "1,1,0"))
                                             (rule "replace_long_MIN" (formula "8") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "expand_moduloLong" (formula "11") (term "0"))
                                             (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                             (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                             (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_homoEq" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "0,0"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                             (rule "div_literals" (formula "11") (term "0,1,0,1,0"))
                                             (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0"))
                                             (rule "add_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "expand_addJlong" (formula "12") (term "0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                             (rule "expand_addJint" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0,1"))
                                             (rule "expand_addJint" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "14") (term "1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloLong" (formula "12") (term "0"))
                                             (rule "replace_long_RANGE" (formula "12") (term "1,1,0"))
                                             (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                             (rule "replace_long_MIN" (formula "12") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "polyMod_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "expand_subJint" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_elimSub" (formula "11") (term "0,0,0,1"))
                                             (rule "expand_subJint" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "nnf_imp2or" (formula "10") (term "0"))
                                             (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,1,1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,1,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "14") (term "0,1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,1,1,0,0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,0,1,1,0,0"))
                                             (rule "equal_literals" (formula "14") (term "0,0,1,0,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,0,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "mod_axiom" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,0,0,1"))
                                             (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0"))
                                             (rule "mod_axiom" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "14") (term "0,0,1,0,0,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "mod_axiom" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,1,1,0,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,1,1,0,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,1,0,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,1,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,0,1"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,0,0,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,0,0,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,0,0,1"))
                                             (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,0,1,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "1,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,1,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,1,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,1,0,1"))
                                             (rule "div_axiom" (formula "13") (term "0") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "14") (term "0,0,0,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                                             (rule "mod_axiom" (formula "12") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0"))
                                             (rule "mod_axiom" (formula "11") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0"))
                                             (rule "mod_axiom" (formula "15") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "leq_literals" (formula "15") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "elimGcdEq" (formula "11") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                             (rule "leq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "qeq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "times_zero_1" (formula "12") (term "0,1,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "qeq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "4") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "17"))
                                             (rule "add_zero_right" (formula "4") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "17") (ifseqformula "4"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "false_right" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "commute_or" (formula "15") (term "0,0,0,0"))
                                             (rule "div_axiom" (formula "15") (term "0,1,1,1,0,0") (inst "quotient=quotient_1"))
                                             (rule "qeq_literals" (formula "15") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,1"))
                                             (rule "equal_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "17") (term "1"))
                                             (rule "add_literals" (formula "17") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0"))
                                             (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "15"))
                                             (rule "polySimp_addComm1" (formula "18") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "16"))
                                             (rule "times_zero_1" (formula "11") (term "0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0"))
                                             (rule "qeq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "18") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "11"))
                                             (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "18"))
                                             (rule "mul_literals" (formula "17") (term "1,1"))
                                             (rule "add_literals" (formula "17") (term "1"))
                                             (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                             (rule "qeq_literals" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "18"))
                                             (rule "mul_literals" (formula "19") (term "1,1"))
                                             (rule "add_literals" (formula "19") (term "1"))
                                             (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "17"))
                                             (rule "applyEq" (formula "19") (term "0,1,0,1,1,0,0") (ifseqformula "17"))
                                             (rule "mul_literals" (formula "19") (term "1,0,1,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "12"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "div_axiom" (formula "20") (term "0,1,1,1,0,0") (inst "quotient=quotient_2"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "14") (term "0,0"))
                                             (rule "add_zero_left" (formula "14") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "14") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "3") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "15"))
                                             (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "5") (term "1,1"))
                                             (rule "add_literals" (formula "5") (term "1"))
                                             (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "2") (term "1,1"))
                                             (rule "add_literals" (formula "2") (term "1"))
                                             (rule "applyEqRigid" (formula "24") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "24") (term "1,0,1,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                             (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption3" (formula "19") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "div_axiom" (formula "20") (term "0,1,1,1,0,0,1,1") (inst "quotient=quotient_3"))
                                             (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "equal_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                             (rule "add_literals" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "22") (term "1"))
                                             (rule "add_literals" (formula "22") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "23") (term "0,1,1,1,0,0,1,1") (ifseqformula "20"))
                                             (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0,1,1"))
                                             (rule "applyEq" (formula "23") (term "0,0,0,1") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
                                             (rule "times_zero_1" (formula "13") (term "0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "13") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "23") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                             (rule "qeq_literals" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "23"))
                                             (rule "mul_literals" (formula "24") (term "1,1"))
                                             (rule "add_literals" (formula "24") (term "1"))
                                             (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "24") (term "0,1,1,0,1") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "24") (term "1,1,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,0,1"))
                                             (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "21") (term "1,1"))
                                             (rule "add_literals" (formula "21") (term "1"))
                                             (rule "applyEqRigid" (formula "24") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "24") (term "1,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "24") (term "0,1,1,0,0,1,1"))
                                             (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "13"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "cut_direct" (formula "22") (term "0,0"))
                                             (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "22"))
                                                (rule "mul_literals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                (rule "pow_literals" (formula "24") (term "1,0,0"))
                                                (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "22"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "div_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "div_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "18"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "div_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "div_axiom" (formula "18") (term "0") (inst "quotient=quotient_4"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "9") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "22"))
                                                (rule "add_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "9"))
                                                (rule "add_zero_left" (formula "22") (term "0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0"))
                                                (rule "leq_literals" (formula "22") (term "0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "false_right" (formula "22"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "10"))
                                                (rule "greater_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "22"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "false_right" (formula "24"))
                                                (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "22"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "div_axiom" (formula "23") (term "0") (inst "quotient=quotient_4"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "10") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                (rule "mul_literals" (formula "10") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "leq_literals" (formula "10") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "27"))
                                                (rule "add_literals" (formula "10") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "10"))
                                                (rule "add_zero_left" (formula "27") (term "0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,0"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "false_right" (formula "27"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "11"))
                                                (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                (rule "greater_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                       (branch "Assume moduloLong(4294967296) != 4294967296"
                                          (rule "expand_inInt" (formula "9"))
                                          (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                                          (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "replace_known_left" (formula "17") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9"))
                                          (rule "mod_axiom" (formula "16") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                          (rule "div_literals" (formula "16") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "16") (term "1,0"))
                                          (rule "add_zero_right" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "mod_axiom" (formula "12") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                          (rule "div_literals" (formula "12") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "12") (term "1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "14") (term "0,0,0,1,1") (ifseqformula "12"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "10"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "false_right" (formula "16"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "9") (term "0"))
                                          (rule "replace_int_MIN" (formula "9") (term "0,0"))
                                          (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                                          (rule "polySimp_homoEq" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "expand_moduloInteger" (formula "14") (term "1,1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "expand_moduloLong" (formula "8") (term "0"))
                                          (rule "replace_long_MIN" (formula "8") (term "0,0"))
                                          (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,0"))
                                          (rule "replace_long_RANGE" (formula "8") (term "1,1,0"))
                                          (rule "polySimp_homoEq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                                          (rule "expand_moduloLong" (formula "12") (term "0"))
                                          (rule "replace_long_MIN" (formula "12") (term "0,0"))
                                          (rule "replace_long_RANGE" (formula "12") (term "1,1,0"))
                                          (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_homoEq" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                          (rule "div_literals" (formula "12") (term "0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "12") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0"))
                                          (rule "add_literals" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "closeTrue" (formula "12"))
                                       )
                                    )
                                    (branch "Assume moduloInt(i / 4294967296) != i / 4294967296"
                                       (rule "expand_inInt" (formula "9"))
                                       (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "replace_known_left" (formula "16") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9"))
                                       (rule "mod_axiom" (formula "12") (term "0"))
                                       (rule "div_literals" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                       (rule "times_zero_2" (formula "12") (term "1,0"))
                                       (rule "add_zero_right" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "mod_axiom" (formula "14") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                       (rule "div_literals" (formula "14") (term "0,1,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                                       (rule "close" (formula "15") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "Assume moduloLong(i / 4294967296) != i / 4294967296"
                                    (rule "expand_inInt" (formula "9"))
                                    (rule "expand_inInt" (formula "14") (term "0,0,0,0"))
                                    (rule "less_literals" (formula "14") (term "0,0,1,2,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "2")))
                                    (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1,0,0,0,0"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "replace_known_left" (formula "15") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9"))
                                    (rule "mod_axiom" (formula "12") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                    (rule "div_literals" (formula "12") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "12") (term "1,0"))
                                    (rule "add_zero_right" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "mod_axiom" (formula "13") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                    (rule "div_literals" (formula "13") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "13") (term "1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "11"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "false_right" (formula "14"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "expand_moduloInteger" (formula "13") (term "1,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "13") (term "0,0,1,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                    (rule "expand_subJint" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0"))
                                    (rule "expand_moduloLong" (formula "11") (term "0"))
                                    (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                    (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                    (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "expand_subJint" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_elimSub" (formula "10") (term "0,0,0,1"))
                                    (rule "expand_addJint" (formula "10") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "expand_moduloLong" (formula "1") (term "1,0,0"))
                                    (rule "replace_long_HALFRANGE" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "replace_long_RANGE" (formula "1") (term "1,1,1,0,0"))
                                    (rule "replace_long_MIN" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "9") (term "1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "9") (term "1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,1,1,1,0,0"))
                                    (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
                                    (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                                    (rule "mod_axiom" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0,0,1"))
                                    (rule "equal_literals" (formula "10") (term "0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                    (rule "polyMod_pullOut" (formula "13") (term "1,1,1,0,0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                    (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0"))
                                    (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "9") (term "0"))
                                    (rule "expand_moduloInteger" (formula "10") (term "1,1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                    (rule "mod_axiom" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "expand_addJint" (formula "10") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0,0,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0"))
                                    (rule "expand_subJint" (formula "10") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "10") (term "0,1,0,0,1,1,0,1"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,0,1,0,0,1,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,0,0,1,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,0,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                    (rule "mod_axiom" (formula "10") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,0,1"))
                                    (rule "equal_literals" (formula "10") (term "0,0,1,1,0,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,1,0,1"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,1,0,1"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,1,0,1"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "10") (term "0,0,1,0,1,0,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,0,1,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,0,1"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,0,1,1"))
                                    (rule "polyMod_pullOut" (formula "10") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,1,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "mod_axiom" (formula "10") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                    (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                    (rule "expand_addJint" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                                    (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
                                    (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,1"))
                                    (rule "mod_axiom" (formula "10") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,0,1,0,1"))
                                    (rule "equal_literals" (formula "10") (term "0,0,1,0,1,0,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,1,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "1,0,1"))
                                    (rule "add_literals" (formula "10") (term "1,1,1,0,1"))
                                    (rule "times_zero_1" (formula "10") (term "1,1,0,1"))
                                    (rule "add_zero_right" (formula "10") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "1,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,1,0,1"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "div_axiom" (formula "12") (term "0") (inst "quotient=quotient_0"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                    (rule "mod_axiom" (formula "4") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "mod_axiom" (formula "14") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                    (rule "add_literals" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "times_zero_1" (formula "14") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "14") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "elimGcdEq" (formula "4") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,1"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "4") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                    (rule "times_zero_1" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "16"))
                                    (rule "add_zero_right" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "false_right" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "div_axiom" (formula "17") (term "0,1,1,1,0,0") (inst "quotient=quotient_1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "leq_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "16"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "5") (term "1,1"))
                                    (rule "add_literals" (formula "5") (term "1"))
                                    (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "shift_paren_or" (formula "16") (term "0"))
                                    (rule "div_axiom" (formula "17") (term "0,1,1,1,0,0,1,1") (inst "quotient=quotient_2"))
                                    (rule "equal_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1,1"))
                                    (rule "qeq_literals" (formula "17") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "1"))
                                    (rule "add_literals" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "20") (term "0,0,0,1") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,1"))
                                    (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,1,1") (ifseqformula "17"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
                                    (rule "times_zero_1" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "leq_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                    (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "14"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEqRigid" (formula "21") (term "0,1,1,0,1") (ifseqformula "19"))
                                    (rule "mul_literals" (formula "21") (term "1,1,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,0,1"))
                                    (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "19"))
                                    (rule "mul_literals" (formula "20") (term "1,1"))
                                    (rule "add_literals" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "19"))
                                    (rule "mul_literals" (formula "18") (term "1,1"))
                                    (rule "add_literals" (formula "18") (term "1"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "19"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "0,1,1,0,0,1,1"))
                                    (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "commute_or_2" (formula "16") (term "0,0"))
                                    (rule "cut_direct" (formula "19") (term "0,0"))
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "19"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,1,1,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,1,1,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,1,1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "div_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "div_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "15"))
                                       (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "pow_literals" (formula "17") (term "1,0,0"))
                                       (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "15"))
                                       (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_3"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "10") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "20"))
                                       (rule "add_zero_right" (formula "10") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "10"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "false_right" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "11"))
                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "19"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "false_right" (formula "21"))
                                       (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "div_axiom" (formula "20") (term "0") (inst "quotient=quotient_3"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "11") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "24"))
                                       (rule "add_zero_right" (formula "11") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "11"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "false_right" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "2") (term "1,1,0"))
                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "Assume moduloInt(moduloLong(i / 4294967296)) != i / 4294967296"
                                 (rule "expand_inInt" (formula "9"))
                                 (rule "expand_inInt" (formula "13") (term "0,0,0,0"))
                                 (rule "less_literals" (formula "13") (term "0,0,1,2,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "2")))
                                 (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,0,0"))
                                 (rule "replace_int_MAX" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "replace_known_left" (formula "14") (term "0,0,0,0,0,1,1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_gtToGeq" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "mod_axiom" (formula "13") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "div_literals" (formula "13") (term "0,1,0"))
                                 (rule "times_zero_2" (formula "13") (term "1,0"))
                                 (rule "add_zero_right" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "mod_axiom" (formula "11") (term "0"))
                                 (rule "div_literals" (formula "11") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                 (rule "times_zero_2" (formula "11") (term "1,0"))
                                 (rule "add_zero_right" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "10"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,1,0"))
                                 (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "11") (term "0"))
                                 (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "11") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "expand_moduloLong" (formula "8") (term "0,0,0,0,1,1,0"))
                                 (rule "replace_long_RANGE" (formula "8") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "replace_long_MIN" (formula "8") (term "0,0,0,0,0,1,1,0"))
                                 (rule "expand_subJint" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "8") (term "0,1,1,0,0"))
                                 (rule "expand_moduloLong" (formula "10") (term "0,0"))
                                 (rule "replace_long_RANGE" (formula "10") (term "1,1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,0,0"))
                                 (rule "replace_long_MIN" (formula "10") (term "0,0,0"))
                                 (rule "expand_subJint" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "9") (term "0,0,0,1"))
                                 (rule "expand_subJint" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloLong" (formula "11") (term "1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,0"))
                                 (rule "replace_long_MIN" (formula "11") (term "0,1,0,0"))
                                 (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                 (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "expand_moduloInteger" (formula "8") (term "0,0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "8") (term "1,1,0,0,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "8") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "8") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "expand_moduloInteger" (formula "8") (term "1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "8") (term "1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "8") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "8") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0,1,1,1,0,0"))
                                 (rule "equal_literals" (formula "8") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "10") (term "0"))
                                 (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "10") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                 (rule "mod_axiom" (formula "10") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "polyMod_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0"))
                                 (rule "expand_addJint" (formula "9") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "0,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,1,0,0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,1,1,0,0"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,0,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0,1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,0,0,1,1,0,0"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,0,0,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "8") (term "0"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,0,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,0,0,1"))
                                 (rule "equal_literals" (formula "9") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1"))
                                 (rule "expand_moduloInteger" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,0,0,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "expand_addJint" (formula "9") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "expand_moduloLong" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                 (rule "replace_long_RANGE" (formula "9") (term "1,1,1,0,1,0,0,0,1,1"))
                                 (rule "replace_long_MIN" (formula "9") (term "0,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "9") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,1,1,0,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,1,1,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,1,1,0,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,1,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
                                 (rule "mod_axiom" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,1,0,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1,1,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,1"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "expand_addJint" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,1,0,0,0,0,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,1,0,0,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,1,0,0,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,1"))
                                 (rule "mod_axiom" (formula "9") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,0,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "equal_literals" (formula "9") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,0,1,0,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,0,1,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "1,0,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,1,0,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "9") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "1,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,1,0,1"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,0,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "div_axiom" (formula "11") (term "1,0,0") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,0,1,0,0,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "13") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "mod_axiom" (formula "14") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0"))
                                 (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "13") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(7(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                 (rule "times_zero_1" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "5") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "div_axiom" (formula "17") (term "0,1,1,1,0,0") (inst "quotient=quotient_1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "14") (term "0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "15"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "2") (term "1,1"))
                                 (rule "add_literals" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "4") (term "1,1"))
                                 (rule "add_literals" (formula "4") (term "1"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "21") (term "1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "commute_or" (formula "15") (term "0,0,0,0"))
                                 (rule "div_axiom" (formula "15") (term "0,1,1,1,0,0") (inst "quotient=quotient_2"))
                                 (rule "mul_literals" (formula "15") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "15") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "equal_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "1"))
                                 (rule "add_literals" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "15"))
                                 (rule "polySimp_addComm1" (formula "18") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "16"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "13"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "16") (term "1,1"))
                                 (rule "add_literals" (formula "16") (term "1"))
                                 (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "19") (term "1,1"))
                                 (rule "add_literals" (formula "19") (term "1"))
                                 (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "17"))
                                 (rule "qeq_literals" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEqRigid" (formula "19") (term "0,1,0,1,1,0,0") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "19") (term "1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "17"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "div_axiom" (formula "18") (term "0,0,0,1") (inst "quotient=quotient_3"))
                                 (rule "qeq_literals" (formula "18") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "equal_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1,1,1"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1"))
                                 (rule "add_literals" (formula "20") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,1,1") (ifseqformula "18"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0,1,1"))
                                 (rule "applyEq" (formula "21") (term "0,0,0,1") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "13"))
                                 (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "21"))
                                 (rule "mul_literals" (formula "20") (term "1,1"))
                                 (rule "add_literals" (formula "20") (term "1"))
                                 (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                 (rule "qeq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "applyEq" (formula "23") (term "0,1,1,0,1") (ifseqformula "21"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,0,1"))
                                 (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "21"))
                                 (rule "mul_literals" (formula "22") (term "1,1"))
                                 (rule "add_literals" (formula "22") (term "1"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "20"))
                                 (rule "mul_literals" (formula "22") (term "1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "22") (term "0,1,1,0,0,1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "commute_or_2" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption3" (formula "17") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "div_axiom" (formula "20") (term "0,1,0,0,0,1,1") (inst "quotient=quotient_4"))
                                 (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "equal_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "1"))
                                 (rule "add_literals" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "applyEqRigid" (formula "25") (term "0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "applyEqRigid" (formula "17") (term "0,1,0,0,0,1,1,0") (ifseqformula "20"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,1") (ifseqformula "20"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,1"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "22"))
                                 (rule "times_zero_1" (formula "7") (term "0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "25"))
                                 (rule "add_zero_right" (formula "7") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "7"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "22") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "22") (term "1,1,0"))
                                 (rule "greater_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                           )
                           (branch "i ≥ 0 FALSE"
                              (rule "eqTermCut" (formula "15") (term "0,0,0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                              (branch "Assume moduloLong(i / 4294967296) = i / 4294967296"
                                 (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1") (userinteraction))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                                 (rule "applyEq" (formula "12") (term "0,2,0,0,0,0,1,1,0") (ifseqformula "1") (userinteraction))
                                 (rule "applyEq" (formula "14") (term "0,2,0,0,0,0,1,1") (ifseqformula "1") (userinteraction))
                                 (rule "ifthenelse_split" (formula "12") (term "0,0,0,0,1,1,0") (userinteraction))
                                 (branch "i ≥ 0 TRUE"
                                    (rule "close" (formula "16") (ifseqformula "12"))
                                 )
                                 (branch "i ≥ 0 FALSE"
                                    (rule "less_literals" (formula "12") (term "0,0,1,0,0,0,0,1,1,0") (userinteraction))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "expand_moduloLong" (formula "12") (term "1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "pow_literals" (formula "12") (term "0,1,0,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "mul_literals" (formula "12") (term "1,0,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "add_literals" (formula "12") (term "0,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "replace_long_RANGE" (formula "12") (term "1,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "mod_axiom" (formula "12") (term "1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "div_literals" (formula "12") (term "0,0,1,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "mul_literals" (formula "12") (term "1,1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "replace_long_MIN" (formula "12") (term "0,1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "add_literals" (formula "12") (term "1,0,0,0,0,1,1,0") (userinteraction))
                                    (rule "eqTermCut" (formula "14") (term "1,2,0,0,0,0,1,1") (inst "s=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (userinteraction))
                                    (branch "Assume moduloLong(4294967296) = 4294967296"
                                       (rule "applyEqRigid" (formula "15") (term "1,2,0,0,0,0,1,1") (ifseqformula "14") (userinteraction))
                                       (rule "less_literals" (formula "17") (term "0,0,1,0,0") (userinteraction))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "pow_literals" (formula "17") (term "0,0,1,0,0") (userinteraction))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0") (userinteraction))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,0") (ifseqformula "14") (userinteraction))
                                       (rule "eqTermCut" (formula "18") (term "1,1,1,0,0") (inst "s=add(Z(1(#)), result_numberOfLeadingZeros_0)") (userinteraction))
                                       (branch "Assume moduloInt(1 + result_numberOfLeadingZeros_0) = 1 + result_numberOfLeadingZeros_0"
                                          (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "1") (userinteraction))
                                          (rule "eqTermCut" (formula "19") (term "1,1,0,0") (inst "s=sub(Z(4(6(#))),
    add(Z(1(#)), result_numberOfLeadingZeros_0))") (userinteraction))
                                          (branch "Assume subJint(64, 1 + result_numberOfLeadingZeros_0) = 64 - (1 + result_numberOfLeadingZeros_0)"
                                             (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "1") (userinteraction))
                                             (rule "eqTermCut" (formula "17") (term "2,0,0,0,0,1,1") (inst "s=add(div(i, Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                                             (branch "Assume addJlong(i / 4294967296, 4294967296) = i / 4294967296 + 4294967296"
                                                (rule "applyEq" (formula "18") (term "2,0,0,0,0,1,1") (ifseqformula "17") (userinteraction))
                                                (rule "ifthenelse_split" (formula "18") (term "0,0,0,0,1,1") (userinteraction))
                                                (branch "i ≥ 0 TRUE"
                                                   (rule "close" (formula "20") (ifseqformula "18"))
                                                )
                                                (branch "i ≥ 0 FALSE"
                                                   (rule "sub" (formula "21") (term "1,1,0,0"))
                                                   (rule "minus_distribute_1" (formula "21") (term "1,1,1,0,0"))
                                                   (rule "neg_literal" (formula "21") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                                   (rule "sub" (formula "1") (term "1"))
                                                   (rule "minus_distribute_1" (formula "1") (term "1,1"))
                                                   (rule "neg_literal" (formula "1") (term "0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                   (rule "add_literals" (formula "1") (term "0,1"))
                                                   (rule "eqTermCut" (formula "20") (term "0") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                                                   (branch "Assume moduloInt(addJlong(i / 4294967296, 4294967296)) = i / 4294967296"
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "1") (userinteraction))
                                                      (rule "cut" (inst "cutFormula=lt(i<<origin(\"User_Interaction @ node 194808 (cut)\",\"[]\")>>,
   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))<<origin(\"User_Interaction @ node 194808 (cut)\",\"[]\")>>") (userinteraction))
                                                      (branch "CUT: i < 4294967296 TRUE"
                                                         (rule "eqTermCut" (formula "16") (term "1,1,0,0") (inst "s=sub(Z(2(3(#))), result_numberOfLeadingZeros_0)") (userinteraction))
                                                         (branch "Assume subJint(32, result_numberOfLeadingZeros_0) = 32 - result_numberOfLeadingZeros_0"
                                                            (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "16") (userinteraction))
                                                            (rule "eqTermCut" (formula "21") (term "0,0,0,1,1") (inst "s=div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (userinteraction))
                                                            (branch "Assume moduloInt(i / 4294967296 + 4294967296) = i / 4294967296"
                                                               (rule "applyEq" (formula "22") (term "0,0,0,1,1") (ifseqformula "21") (userinteraction))
                                                               (rule "eqTermCut" (formula "22") (term "1,1,0,0,1,1") (inst "s=sub(Z(2(3(#))),
    add(result_numberOfLeadingZeros_0, Z(1(#))))") (userinteraction))
                                                               (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) = 32 - (result_numberOfLeadingZeros_0 + 1)"
                                                                  (rule "applyEq" (formula "23") (term "1,1,0,0,1,1") (ifseqformula "22") (userinteraction))
                                                                  (rule "applyEq" (formula "17") (term "0,0,0,1,1,0") (ifseqformula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "notLeft" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "1") (userinteraction))
                                                                  (rule "hide_left" (formula "4") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "2") (userinteraction))
                                                                  (rule "hide_left" (formula "4") (userinteraction))
                                                                  (rule "hide_left" (formula "4") (userinteraction))
                                                                  (rule "hide_left" (formula "5") (userinteraction))
                                                                  (rule "hide_left" (formula "5") (userinteraction))
                                                                  (rule "hide_left" (formula "5") (userinteraction))
                                                                  (rule "hide_left" (formula "5") (userinteraction))
                                                                  (rule "hide_left" (formula "5") (userinteraction))
                                                                  (rule "nnf_imp2or" (formula "5") (userinteraction))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "orLeft" (formula "5") (userinteraction))
                                                                  (branch "result_numberOfLeadingZeros_0 = 32"
                                                                     (rule "applyEq" (formula "9") (term "0,1,1,1,0,0") (ifseqformula "5") (userinteraction))
                                                                     (rule "neg_literal" (formula "9") (term "1,1,1,0,0") (userinteraction))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0") (userinteraction))
                                                                     (rule "pow_literals" (formula "9") (term "1,0,0") (userinteraction))
                                                                     (rule "cut" (inst "cutFormula=geq(i<<origin(\"User_Interaction @ node 207778 (cut)\",\"[]\")>>,
    Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))))<<origin(\"User_Interaction @ node 207778 (cut)\",\"[]\")>>") (userinteraction))
                                                                     (branch "CUT: i ≥ -2147483648 TRUE"
                                                                        (rule "expand_inInt" (formula "5") (term "0,0,0,0"))
                                                                        (rule "replace_int_MAX" (formula "5") (term "1,0,0,0,0,0"))
                                                                        (rule "replace_int_MIN" (formula "5") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_geqRight" (formula "8"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "6") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                                                                        (rule "add_literals" (formula "6") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0,0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0,1,1,1,0,0") (ifseqformula "7"))
                                                                        (rule "mul_literals" (formula "6") (term "1,1,1,0,0"))
                                                                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                                        (rule "equal_literals" (formula "8"))
                                                                        (rule "false_right" (formula "8"))
                                                                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "7"))
                                                                        (rule "leq_literals" (formula "5"))
                                                                        (rule "true_left" (formula "5"))
                                                                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                                                        (rule "qeq_literals" (formula "4"))
                                                                        (rule "true_left" (formula "4"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "mul_literals" (formula "1") (term "1"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                                                                        (rule "leq_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "true_left" (formula "3"))
                                                                        (rule "inEqSimp_notGeq" (formula "3") (term "0,1,0"))
                                                                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,0,1,0"))
                                                                        (rule "nnf_imp2or" (formula "3") (term "0"))
                                                                        (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0"))
                                                                        (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                                                        (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                                                        (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0,0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,1,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                                        (rule "shift_paren_or" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "commute_or_2" (formula "3") (term "0,0"))
                                                                        (rule "inEqSimp_or_subsumption1" (formula "3") (term "0,0,0"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "commute_or" (formula "3") (term "0,0,0"))
                                                                        (rule "commute_or_2" (formula "3") (term "0,0"))
                                                                        (rule "inEqSimp_or_subsumption3" (formula "3") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "div_axiom" (formula "6") (term "0,0") (inst "quotient=quotient_0"))
                                                                        (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                                        (rule "equal_literals" (formula "1") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                        (rule "add_literals" (formula "3") (term "0,1"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                                                        (rule "mod_axiom" (formula "9") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_homoEq" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                        (rule "mul_literals" (formula "3") (term "0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                        (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                                        (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                        (rule "leq_literals" (formula "2") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "2") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                                        (rule "mul_literals" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                        (rule "add_literals" (formula "6") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                        (rule "mul_literals" (formula "6") (term "1"))
                                                                        (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                        (rule "leq_literals" (formula "6") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                        (rule "leq_literals" (formula "6") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                                                                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "6"))
                                                                        (rule "div_literals" (formula "12") (term "0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0"))
                                                                        (rule "polySimp_homoEq" (formula "12"))
                                                                        (rule "mul_literals" (formula "12") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                        (rule "add_literals" (formula "12") (term "0,0"))
                                                                        (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "6"))
                                                                        (rule "mul_literals" (formula "3") (term "1"))
                                                                        (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "5"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1"))
                                                                        (rule "add_literals" (formula "3") (term "1"))
                                                                        (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "5"))
                                                                        (rule "true_left" (formula "5"))
                                                                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "4"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "applyEqRigid" (formula "8") (term "1,0") (ifseqformula "3"))
                                                                        (rule "add_literals" (formula "8") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "closeTrue" (formula "8"))
                                                                     )
                                                                     (branch "CUT: i ≥ -2147483648 FALSE"
                                                                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                                                                        (rule "equal_literals" (formula "7"))
                                                                        (rule "false_right" (formula "7"))
                                                                        (rule "hide_left" (formula "5") (userinteraction))
                                                                        (rule "hide_left" (formula "3") (userinteraction))
                                                                        (rule "hide_left" (formula "2") (userinteraction))
                                                                        (rule "cut" (inst "cutFormula=(  i<<origin(\"User_Interaction @ node 209876 (cut)\",\"[]\")>>
 = mul(Z(2(#)),
       Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))))<<origin(\"User_Interaction @ node 209876 (cut)\",\"[]\")>>") (userinteraction))
                                                                        (branch "CUT: i = 2 * -2147483648 TRUE"
                                                                           (rule "mul_literals" (formula "1") (term "1") (userinteraction))
                                                                           (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1") (userinteraction))
                                                                           (rule "div_literals" (formula "7") (term "0,0") (userinteraction))
                                                                            (opengoal " ")
                                                                        )
                                                                        (branch "CUT: i = 2 * -2147483648 FALSE"
                                                                            (opengoal " ")
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch " subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) ≥ 0 ∧ i / 4294967296 / pow(2, 32 - (result_numberOfLeadingZeros_0 + 1)) % 2 = 1"
                                                                      (opengoal " ")
                                                                  )
                                                               )
                                                               (branch "Assume subJint(32, addJint(result_numberOfLeadingZeros_0, 1)) != 32 - (result_numberOfLeadingZeros_0 + 1)"
                                                                  (rule "expand_inInt" (formula "12"))
                                                                  (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                                                  (rule "replace_int_MAX" (formula "12") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "12") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                                                  (rule "notLeft" (formula "6"))
                                                                  (rule "notLeft" (formula "21"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "polySimp_elimNeg" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimSub" (formula "16") (term "1"))
                                                                  (rule "polySimp_elimNeg" (formula "27") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "23") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "20") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "23") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                                  (rule "inEqSimp_geqRight" (formula "25"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "1"))
                                                                  (rule "add_literals" (formula "24") (term "0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "13"))
                                                                  (rule "mod_axiom" (formula "19") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                  (rule "div_literals" (formula "19") (term "0,1,0"))
                                                                  (rule "times_zero_2" (formula "19") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "mod_axiom" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                                  (rule "div_literals" (formula "16") (term "0,1,0"))
                                                                  (rule "times_zero_2" (formula "16") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "applyEq" (formula "17") (term "0,0,0,0,1,1,0") (ifseqformula "19"))
                                                                  (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "19"))
                                                                  (rule "applyEq" (formula "16") (term "0,0,0,1,1,0") (ifseqformula "19"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "14"))
                                                                  (rule "mul_literals" (formula "22") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "false_right" (formula "22"))
                                                                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "6") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                                  (rule "leq_literals" (formula "9") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_notGeq" (formula "12") (term "0,1,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                                                                  (rule "expand_subJint" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "expand_moduloLong" (formula "13") (term "0"))
                                                                  (rule "replace_long_RANGE" (formula "13") (term "1,1,0"))
                                                                  (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                                  (rule "replace_long_MIN" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                                                  (rule "div_literals" (formula "13") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                                  (rule "times_zero_2" (formula "13") (term "1,0,1,0"))
                                                                  (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0"))
                                                                  (rule "add_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "expand_subJint" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                                                                  (rule "expand_moduloInteger" (formula "3") (term "0"))
                                                                  (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "3") (term "0"))
                                                                  (rule "elimGcdEq" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,1,0"))
                                                                  (rule "leq_literals" (formula "3") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                                  (rule "equal_literals" (formula "3") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "expand_addJint" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "expand_addJint" (formula "15") (term "1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,0,0,1,1"))
                                                                  (rule "expand_addJlong" (formula "13") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                                  (rule "expand_moduloLong" (formula "4") (term "0"))
                                                                  (rule "replace_long_RANGE" (formula "4") (term "1,1,0"))
                                                                  (rule "replace_long_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                                                  (rule "replace_long_MIN" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                  (rule "expand_addJint" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                                                                  (rule "expand_moduloInteger" (formula "14") (term "0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                                                  (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                  (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "2") (term "0"))
                                                                  (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0"))
                                                                  (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(1(1(7(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "equal_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "nnf_imp2or" (formula "12") (term "0"))
                                                                  (rule "expand_moduloInteger" (formula "11") (term "0"))
                                                                  (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0"))
                                                                  (rule "elimGcdEq" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(0(8(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "11") (term "1,0,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                                                  (rule "leq_literals" (formula "11") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "equal_literals" (formula "11") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1"))
                                                                  (rule "expand_moduloInteger" (formula "15") (term "1,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,0,0,1"))
                                                                  (rule "replace_int_RANGE" (formula "15") (term "1,1,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1,1,0,0,1"))
                                                                  (rule "mod_axiom" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1,0,0,1"))
                                                                  (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,1,0,0,1"))
                                                                  (rule "equal_literals" (formula "15") (term "0,0,1,1,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "1,1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1,0,0,1"))
                                                                  (rule "applyEq" (formula "15") (term "0,1,1,0,0,1") (ifseqformula "3"))
                                                                  (rule "mul_literals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "expand_moduloLong" (formula "13") (term "0"))
                                                                  (rule "replace_long_RANGE" (formula "13") (term "1,1,0"))
                                                                  (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                                  (rule "replace_long_MIN" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                  (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "16") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "16") (term "0,1,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1,0"))
                                                                  (rule "replace_int_RANGE" (formula "16") (term "1,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,1,1,0"))
                                                                  (rule "mod_axiom" (formula "16") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                                                  (rule "polyDiv_pullOut" (formula "16") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "equal_literals" (formula "16") (term "0,0,1,1,0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                                                  (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "3"))
                                                                  (rule "mul_literals" (formula "16") (term "1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,1,0"))
                                                                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                  (rule "expand_subJint" (formula "15") (term "1,1,0,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0,1,1"))
                                                                  (rule "expand_subJint" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "15") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                                                  (rule "expand_subJint" (formula "16") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "15") (term "1,1,0,0,1,1"))
                                                                  (rule "replace_int_RANGE" (formula "15") (term "1,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1,1,1,0,0,1,1"))
                                                                  (rule "mod_axiom" (formula "15") (term "1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "polyDiv_pullOut" (formula "15") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                                                  (rule "equal_literals" (formula "15") (term "0,0,1,1,1,0,0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "1,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "expand_moduloInteger" (formula "16") (term "0"))
                                                                  (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "16") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "16") (term "0"))
                                                                  (rule "elimGcdEq" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(7(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "add_zero_left" (formula "16") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "times_zero_1" (formula "16") (term "0,1,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                                                                  (rule "equal_literals" (formula "16") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1"))
                                                                  (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "15") (term "0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "15") (term "0,0,0,1"))
                                                                  (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,0,1"))
                                                                  (rule "replace_int_RANGE" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1,0,0,1"))
                                                                  (rule "mod_axiom" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1"))
                                                                  (rule "polyDiv_pullOut" (formula "15") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,0,0,1"))
                                                                  (rule "equal_literals" (formula "15") (term "0,0,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1"))
                                                                  (rule "div_axiom" (formula "17") (term "0") (inst "quotient=quotient_0"))
                                                                  (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "equal_literals" (formula "1") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                  (rule "add_literals" (formula "3") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "15") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "18") (term "0,0,0,1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "1"))
                                                                  (rule "mod_axiom" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0"))
                                                                  (rule "mod_axiom" (formula "17") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "17") (term "0"))
                                                                  (rule "mod_axiom" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "elimGcdEq" (formula "16") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,1,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "leq_literals" (formula "16") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "elimGcdEq" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "add_zero_left" (formula "17") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "17") (term "0,1,0"))
                                                                  (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "0,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "0,1,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "leq_literals" (formula "17") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "qeq_literals" (formula "17") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "elimGcdEq" (formula "7") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0,1,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "7") (term "1,0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "0,1,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "times_zero_1" (formula "7") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "leq_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "9") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "9") (term "0,0"))
                                                                  (rule "leq_literals" (formula "9") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                  (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "2"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "false_right" (formula "22"))
                                                                  (rule "div_axiom" (formula "22") (term "0,0") (inst "quotient=quotient_1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                                                  (rule "expand_moduloInteger" (formula "21") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_MIN" (formula "21") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_RANGE" (formula "21") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "mod_axiom" (formula "21") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polyDiv_pullOut" (formula "21") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,2,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "equal_literals" (formula "21") (term "0,0,1,0,1,1,0,0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "1,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,1,1,0,0,1,1"))
                                                                  (rule "polyDiv_pullOut" (formula "21") (term "0,1,0,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "equal_literals" (formula "21") (term "0,0,1,0,0,1,1,0,0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0,1,1,1,0,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,1,1,1,0,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,1,1,0,0,1,1"))
                                                                  (rule "applyEq" (formula "21") (term "0,1,0,0,1,1,0,0,1,1") (ifseqformula "8"))
                                                                  (rule "mul_literals" (formula "21") (term "1,0,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0"))
                                                                  (rule "div_axiom" (formula "8") (term "0") (inst "quotient=quotient_2"))
                                                                  (rule "mul_literals" (formula "8") (term "1,1,1,1,1"))
                                                                  (rule "qeq_literals" (formula "8") (term "0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "equal_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "1"))
                                                                  (rule "add_literals" (formula "10") (term "0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "10") (term "0,1,0,0") (ifseqformula "11"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "11"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "11"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                  (rule "mul_literals" (formula "10") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1"))
                                                                  (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "10") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "17"))
                                                                  (rule "leq_literals" (formula "9") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "div_axiom" (formula "7") (term "0") (inst "quotient=quotient_3"))
                                                                  (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
                                                                  (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "equal_literals" (formula "7") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                                  (rule "add_literals" (formula "9") (term "0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "7"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,1,0,0") (ifseqformula "7"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "expand_moduloInteger" (formula "23") (term "0,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_MIN" (formula "23") (term "0,0,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_HALFRANGE" (formula "23") (term "0,0,1,0,1,1,1,0,0,1,1"))
                                                                  (rule "replace_int_RANGE" (formula "23") (term "1,1,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "mod_axiom" (formula "23") (term "0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "0,1,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,0,1,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,1,1,0,0,1,1"))
                                                                  (rule "polyDiv_pullOut" (formula "23") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                                  (rule "equal_literals" (formula "23") (term "0,0,1,0,1,1,0,0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "23") (term "1,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,1,1,0,0,1,1"))
                                                                  (rule "applyEq" (formula "23") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "9"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,1,1,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,1,1,0,0,1,1"))
                                                                  (rule "div_axiom" (formula "19") (term "0") (inst "quotient=quotient_4"))
                                                                  (rule "mul_literals" (formula "19") (term "1,1,1,1,1"))
                                                                  (rule "qeq_literals" (formula "19") (term "0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "equal_literals" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "andLeft" (formula "19"))
                                                                  (rule "andLeft" (formula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "1"))
                                                                  (rule "add_literals" (formula "21") (term "0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "22"))
                                                                  (rule "eqSymm" (formula "19"))
                                                                  (rule "applyEqRigid" (formula "20") (term "0,1,0,0") (ifseqformula "19"))
                                                                  (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0"))
                                                                  (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "19"))
                                                                  (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "17"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "18"))
                                                                  (rule "leq_literals" (formula "20") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "div_axiom" (formula "25") (term "0") (inst "quotient=quotient_5"))
                                                                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                                  (rule "equal_literals" (formula "1") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                  (rule "add_literals" (formula "3") (term "0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "0,0,0,1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                                                                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "27") (term "0,1,1,1,0,0,1,1") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "1,1,0,0,1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "0,0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "2"))
                                                                  (rule "times_zero_1" (formula "20") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                  (rule "neg_literal" (formula "20") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "20") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "20") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_strengthen0" (formula "20") (ifseqformula "29"))
                                                                  (rule "add_literals" (formula "20") (term "1"))
                                                                  (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "20"))
                                                                  (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "29") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "false_right" (formula "29"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "22"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "21"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                  (rule "greater_literals" (formula "3") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                            (branch "Assume moduloInt(i / 4294967296 + 4294967296) != i / 4294967296"
                                                               (rule "expand_inInt" (formula "12"))
                                                               (rule "expand_inInt" (formula "17") (term "0,0,0,0"))
                                                               (rule "replace_int_MAX" (formula "12") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "12") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                                                               (rule "notLeft" (formula "6"))
                                                               (rule "notLeft" (formula "20"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "polySimp_elimNeg" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                                               (rule "polySimp_elimNeg" (formula "26") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "24"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "13"))
                                                               (rule "mod_axiom" (formula "19") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                               (rule "div_literals" (formula "19") (term "0,1,0"))
                                                               (rule "times_zero_2" (formula "19") (term "1,0"))
                                                               (rule "add_zero_right" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "mod_axiom" (formula "16") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                               (rule "div_literals" (formula "16") (term "0,1,0"))
                                                               (rule "times_zero_2" (formula "16") (term "1,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "applyEq" (formula "17") (term "0,0,0,0,1,1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "19"))
                                                               (rule "close" (formula "21") (ifseqformula "3"))
                                                            )
                                                         )
                                                         (branch "Assume subJint(32, result_numberOfLeadingZeros_0) != 32 - result_numberOfLeadingZeros_0"
                                                             (opengoal " ")
                                                         )
                                                      )
                                                      (branch "CUT: i < 4294967296 FALSE"
                                                         (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                                                         (rule "expand_inInt" (formula "11"))
                                                         (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                                                         (rule "replace_int_MAX" (formula "11") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "11") (term "0,1"))
                                                         (rule "notLeft" (formula "5"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "polySimp_elimNeg" (formula "24") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimNeg" (formula "2") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "18") (term "1"))
                                                         (rule "inEqSimp_ltRight" (formula "21"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "22"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13"))
                                                         (rule "mod_axiom" (formula "18") (term "0"))
                                                         (rule "div_literals" (formula "18") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                         (rule "times_zero_2" (formula "18") (term "1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "mod_axiom" (formula "16") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                         (rule "div_literals" (formula "16") (term "0,1,0"))
                                                         (rule "times_zero_2" (formula "16") (term "1,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "16") (term "0,0,0,0,1,1,0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "16") (term "0,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "19") (term "0,0,0,1,1") (ifseqformula "3"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "15"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0"))
                                                         (rule "qeq_literals" (formula "20") (term "0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "false_right" (formula "20"))
                                                         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "Assume moduloInt(addJlong(i / 4294967296, 4294967296)) != i / 4294967296"
                                                      (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                                                      (rule "expand_inInt" (formula "11"))
                                                      (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                                                      (rule "replace_int_MAX" (formula "11") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "11") (term "0,1"))
                                                      (rule "notLeft" (formula "5"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "polySimp_elimNeg" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimNeg" (formula "23") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "1"))
                                                      (rule "inEqSimp_geqRight" (formula "21"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11"))
                                                      (rule "mod_axiom" (formula "16") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                      (rule "div_literals" (formula "16") (term "0,1,0"))
                                                      (rule "times_zero_2" (formula "16") (term "1,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "mod_axiom" (formula "14") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                      (rule "div_literals" (formula "14") (term "0,1,0"))
                                                      (rule "times_zero_2" (formula "14") (term "1,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "applyEq" (formula "14") (term "0,0,0,0,1,1,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "16"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "13"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "false_right" (formula "19"))
                                                      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "13"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "6") (term "0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_notGeq" (formula "11") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,1,0"))
                                                      (rule "expand_subJint" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "expand_subJint" (formula "14") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0,1,1"))
                                                      (rule "expand_moduloInteger" (formula "3") (term "0"))
                                                      (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                                      (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0"))
                                                      (rule "elimGcdEq" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "expand_addJlong" (formula "13") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                      (rule "expand_moduloLong" (formula "12") (term "0"))
                                                      (rule "replace_long_MIN" (formula "12") (term "0,0"))
                                                      (rule "replace_long_RANGE" (formula "12") (term "1,1,0"))
                                                      (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                      (rule "div_literals" (formula "12") (term "0,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "12") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0"))
                                                      (rule "add_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "expand_subJint" (formula "2") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "expand_addJint" (formula "13") (term "1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0,1"))
                                                      (rule "expand_moduloLong" (formula "4") (term "0"))
                                                      (rule "replace_long_MIN" (formula "4") (term "0,0"))
                                                      (rule "replace_long_RANGE" (formula "4") (term "1,1,0"))
                                                      (rule "replace_long_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "0,0,0,1,1"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0,1,1"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0,1,1"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,1,1"))
                                                      (rule "polyMod_pullOut" (formula "13") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,1,0,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,1,1"))
                                                      (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1,0"))
                                                      (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "expand_moduloInteger" (formula "15") (term "0"))
                                                      (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                                      (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "polyMod_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "14") (term "0"))
                                                      (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                                      (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "14"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                      (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0"))
                                                      (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0"))
                                                      (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                                      (rule "mod_axiom" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                      (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0,1,1,1,0,0"))
                                                      (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                      (rule "expand_addJint" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                                      (rule "expand_moduloLong" (formula "12") (term "0"))
                                                      (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                      (rule "replace_long_RANGE" (formula "12") (term "1,1,0"))
                                                      (rule "replace_long_MIN" (formula "12") (term "0,0"))
                                                      (rule "polySimp_homoEq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "polyMod_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "2") (term "0"))
                                                      (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                                      (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                      (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                                      (rule "polySimp_homoEq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0"))
                                                      (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(1(1(7(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "expand_subJint" (formula "13") (term "0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "0,0,0,1"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0,1,1"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                                      (rule "mod_axiom" (formula "13") (term "1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "nnf_imp2or" (formula "11") (term "0"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0,0,1"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0,0,1"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0,0,1"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "mod_axiom" (formula "13") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "13") (term "0,0,1,0,0,0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0,0,0,1") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                                                      (rule "mod_axiom" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "mod_axiom" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                      (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0,1,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,1"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "equal_literals" (formula "13") (term "0,0,1,0,1,1,0,0,1,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,1,1"))
                                                      (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "expand_moduloInteger" (formula "13") (term "0,0,1"))
                                                      (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,1"))
                                                      (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,1"))
                                                      (rule "replace_int_MIN" (formula "13") (term "0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0,0,1"))
                                                      (rule "mod_axiom" (formula "13") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,0,0,1"))
                                                      (rule "equal_literals" (formula "13") (term "0,0,0,0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                                                      (rule "div_axiom" (formula "16") (term "0,0") (inst "quotient=quotient_0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                      (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_1"))
                                                      (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "equal_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                      (rule "add_literals" (formula "6") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                      (rule "add_literals" (formula "6") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "7"))
                                                      (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "7"))
                                                      (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "7"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "13"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "div_axiom" (formula "6") (term "1,1") (inst "quotient=quotient_2"))
                                                      (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "6") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "equal_literals" (formula "6") (term "0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                      (rule "add_literals" (formula "8") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "applyEq" (formula "16") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "18") (term "1,0,1,0,0,0,1,1") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "6"))
                                                      (rule "mod_axiom" (formula "16") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,0,0,0,1,1,0"))
                                                      (rule "mod_axiom" (formula "9") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0"))
                                                      (rule "mod_axiom" (formula "20") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "20") (term "0,0"))
                                                      (rule "mod_axiom" (formula "17") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "17"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0"))
                                                      (rule "mod_axiom" (formula "18") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,1"))
                                                      (rule "add_zero_left" (formula "18") (term "0,0,0,0,1,1"))
                                                      (rule "mod_axiom" (formula "19") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                      (rule "mul_literals" (formula "8") (term "0,1"))
                                                      (rule "elimGcdEq" (formula "17") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_2),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,1,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "qeq_literals" (formula "17") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "elimGcdEq" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), quotient_2),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "times_zero_1" (formula "19") (term "0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "elimGcdEq" (formula "9") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_2),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "add_zero_left" (formula "9") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "0,1,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "qeq_literals" (formula "9") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "times_zero_1" (formula "9") (term "0,0"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                                      (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                                      (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "7") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "9"))
                                                      (rule "mul_literals" (formula "12") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                                      (rule "leq_literals" (formula "12") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_3"))
                                                      (rule "equal_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "qeq_literals" (formula "3") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                      (rule "add_literals" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                      (rule "add_literals" (formula "5") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "commute_or" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "1") (term "0,1"))
                                                      (rule "div_axiom" (formula "19") (term "0,1,1,1,0,0") (inst "quotient=quotient_4"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,1,1,1"))
                                                      (rule "equal_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                      (rule "add_literals" (formula "21") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "1"))
                                                      (rule "add_literals" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "19"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
                                                      (rule "times_zero_1" (formula "17") (term "0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "leq_literals" (formula "17") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                      (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0"))
                                                      (rule "qeq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "19"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                      (rule "add_literals" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                      (rule "mul_literals" (formula "22") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "leq_literals" (formula "22") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "17"))
                                                      (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "22"))
                                                      (rule "leq_literals" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "20") (term "1,1"))
                                                      (rule "add_literals" (formula "20") (term "1"))
                                                      (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "22") (term "1,1"))
                                                      (rule "add_literals" (formula "22") (term "1"))
                                                      (rule "applyEq" (formula "23") (term "0,1,0,1,1,0,0") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "23") (term "1,0,1,1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "19") (term "1") (ifseqformula "21"))
                                                      (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "div_axiom" (formula "23") (term "0,1,1,1,0,0,1,1") (inst "quotient=quotient_5"))
                                                      (rule "equal_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "qeq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1,1,1"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                                      (rule "add_literals" (formula "25") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "1"))
                                                      (rule "add_literals" (formula "25") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                      (rule "applyEq" (formula "26") (term "0,1,1,1,0,0,1,1") (ifseqformula "23"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,1,1"))
                                                      (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                                                      (rule "times_zero_1" (formula "17") (term "0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "leq_literals" (formula "17") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                      (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0"))
                                                      (rule "qeq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "19"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                      (rule "mul_literals" (formula "26") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "17"))
                                                      (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "26"))
                                                      (rule "mul_literals" (formula "25") (term "1,1"))
                                                      (rule "add_literals" (formula "25") (term "1"))
                                                      (rule "applyEq" (formula "17") (term "0") (ifseqformula "26"))
                                                      (rule "leq_literals" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "27") (term "0,1,1,0,1") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "27") (term "1,1,0,1"))
                                                      (rule "add_literals" (formula "27") (term "1,0,1"))
                                                      (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "26") (term "1,1"))
                                                      (rule "add_literals" (formula "26") (term "1"))
                                                      (rule "applyEqRigid" (formula "27") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,1,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                                                      (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "25"))
                                                      (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "ifthenelse_split_for" (formula "1") (term "1,1"))
                                                      (branch "pow(2, 63 + result_numberOfLeadingZeros_0 * -1) ≥ 0 TRUE"
                                                         (rule "div_axiom" (formula "22") (term "0,1,0,0,0,1,1,0") (inst "quotient=quotient_6"))
                                                         (rule "mul_literals" (formula "22") (term "1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "22") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "equal_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                                         (rule "add_literals" (formula "24") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "1"))
                                                         (rule "add_literals" (formula "24") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,1,0") (ifseqformula "22"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1,0"))
                                                         (rule "applyEqRigid" (formula "29") (term "0,1,0,0,0,1,1") (ifseqformula "22"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,1"))
                                                         (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "22"))
                                                         (rule "eqSymm" (formula "31"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                         (rule "mul_literals" (formula "24") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "24"))
                                                         (rule "mul_literals" (formula "14") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                         (rule "add_literals" (formula "14") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0"))
                                                         (rule "leq_literals" (formula "14") (term "0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "31"))
                                                         (rule "add_zero_right" (formula "14") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "14"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0"))
                                                         (rule "leq_literals" (formula "31") (term "0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "false_right" (formula "31"))
                                                         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "9"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                         (rule "inEqSimp_contradInEq5" (formula "24") (ifseqformula "14"))
                                                         (rule "mul_literals" (formula "24") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "qeq_literals" (formula "24") (term "0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "pow(2, 63 + result_numberOfLeadingZeros_0 * -1) ≥ 0 FALSE"
                                                         (rule "inEqSimp_geqRight" (formula "26"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "powPositiveConcrete" (formula "1"))
                                                         (rule "qeq_literals" (formula "27") (term "1"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_geqRight" (formula "27"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradEq3" (formula "3") (term "0") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "4"))
                                                         (rule "mod_axiom" (formula "32") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                         (rule "mul_literals" (formula "32") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Assume addJlong(i / 4294967296, 4294967296) != i / 4294967296 + 4294967296"
                                                (rule "expand_inInt" (formula "10"))
                                                (rule "expand_inInt" (formula "14") (term "0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "10") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "10") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "replace_int_MIN" (formula "14") (term "0,1,0,0,0,0"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "replace_known_right" (formula "17") (term "0,0,0,0,0,1,1") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                (rule "add_literals" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_geqRight" (formula "20"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11"))
                                                (rule "mod_axiom" (formula "14") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                (rule "div_literals" (formula "14") (term "0,1,0"))
                                                (rule "times_zero_2" (formula "14") (term "1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "mod_axiom" (formula "15") (term "0"))
                                                (rule "div_literals" (formula "15") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                (rule "times_zero_2" (formula "15") (term "1,0"))
                                                (rule "add_zero_right" (formula "15") (term "0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "13"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0"))
                                                (rule "qeq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "false_right" (formula "18"))
                                                (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "13"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,1,0"))
                                                (rule "expand_moduloInteger" (formula "3") (term "0"))
                                                (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                                (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "elimGcdEq" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "3") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "expand_moduloInteger" (formula "15") (term "0"))
                                                (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                                (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "15"))
                                                (rule "mul_literals" (formula "15") (term "1"))
                                                (rule "expand_moduloLong" (formula "12") (term "0"))
                                                (rule "replace_long_RANGE" (formula "12") (term "1,1,0"))
                                                (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                                (rule "replace_long_MIN" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_homoEq" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                                (rule "div_literals" (formula "12") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                (rule "times_zero_2" (formula "12") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,1,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0"))
                                                (rule "add_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1,0"))
                                                (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                                (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1,0"))
                                                (rule "expand_subJint" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
                                                (rule "expand_subJint" (formula "2") (term "0"))
                                                (rule "polySimp_elimSub" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "expand_moduloLong" (formula "4") (term "0"))
                                                (rule "replace_long_RANGE" (formula "4") (term "1,1,0"))
                                                (rule "replace_long_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                                (rule "replace_long_MIN" (formula "4") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "expand_addJlong" (formula "13") (term "0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                (rule "expand_subJint" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_elimSub" (formula "12") (term "0,0,0,1"))
                                                (rule "expand_addJint" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                                (rule "expand_addJlong" (formula "12") (term "0,0,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0,1,1"))
                                                (rule "expand_addJlong" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0"))
                                                (rule "expand_addJlong" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "0,1,0,1,0,0,0,1,1,0"))
                                                (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0"))
                                                (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0"))
                                                (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0"))
                                                (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                                (rule "mod_axiom" (formula "11") (term "1,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "2") (term "0"))
                                                (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                                (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                                (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_homoEq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(1(1(7(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "qeq_literals" (formula "2") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "times_zero_1" (formula "2") (term "0,0"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "expand_moduloLong" (formula "13") (term "0"))
                                                (rule "replace_long_RANGE" (formula "13") (term "1,1,0"))
                                                (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                                (rule "replace_long_MIN" (formula "13") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "expand_addJint" (formula "12") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,0,0,1"))
                                                (rule "expand_subJint" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,0,0,1,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,0,1,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,0,0,1,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,0,1,1"))
                                                (rule "expand_moduloLong" (formula "14") (term "1,0,0"))
                                                (rule "replace_long_MIN" (formula "14") (term "0,1,0,0"))
                                                (rule "replace_long_HALFRANGE" (formula "14") (term "0,0,1,1,0,0"))
                                                (rule "replace_long_RANGE" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0"))
                                                (rule "mod_axiom" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "polyMod_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0"))
                                                (rule "expand_moduloLong" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,1,0,0,0,1,1,0"))
                                                (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                                (rule "replace_long_MIN" (formula "11") (term "0,1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "mod_axiom" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,0,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,0,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,0,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                                (rule "mod_axiom" (formula "12") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                                                (rule "applyEq" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                                (rule "nnf_imp2or" (formula "11") (term "0"))
                                                (rule "expand_moduloLong" (formula "12") (term "1,0,1,0,0,0,1,1"))
                                                (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                                (rule "replace_long_RANGE" (formula "12") (term "1,1,1,0,1,0,0,0,1,1"))
                                                (rule "replace_long_MIN" (formula "12") (term "0,1,0,1,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,1,0,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1"))
                                                (rule "mod_axiom" (formula "12") (term "1,0,1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,1,1"))
                                                (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,1,1"))
                                                (rule "polyMod_pullOut" (formula "12") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "1,0,1,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,1,1"))
                                                (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                                (rule "mod_axiom" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,0,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,0,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,0,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,0,1"))
                                                (rule "mod_axiom" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,0,0,1"))
                                                (rule "equal_literals" (formula "12") (term "0,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "mod_axiom" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1"))
                                                (rule "applyEq" (formula "12") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "expand_moduloInteger" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "replace_int_MIN" (formula "12") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                                                (rule "mod_axiom" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,1"))
                                                (rule "polyDiv_pullOut" (formula "12") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "12") (term "0,0,1,0,1,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,1,1"))
                                                (rule "applyEq" (formula "12") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "12") (term "1,0,1,1,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,1,1"))
                                                (rule "div_axiom" (formula "15") (term "0,0") (inst "quotient=quotient_0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "equal_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                (rule "add_literals" (formula "6") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                (rule "add_literals" (formula "6") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                                (rule "eqSymm" (formula "4"))
                                                (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "div_axiom" (formula "6") (term "1,1") (inst "quotient=quotient_2"))
                                                (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "6") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "equal_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                (rule "add_literals" (formula "8") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                (rule "applyEq" (formula "16") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "17") (term "1,0,1,0,0,0,1,1") (ifseqformula "6"))
                                                (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "6"))
                                                (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
                                                (rule "mod_axiom" (formula "16") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,0,0,1,1,0"))
                                                (rule "mod_axiom" (formula "19") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0"))
                                                (rule "mod_axiom" (formula "18") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "18"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                                (rule "mul_literals" (formula "18") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0"))
                                                (rule "mod_axiom" (formula "9") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0"))
                                                (rule "mod_axiom" (formula "17") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "17") (term "0,0,0,0,1,1"))
                                                (rule "polySimp_sepPosMonomial" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1"))
                                                (rule "polySimp_sepPosMonomial" (formula "18"))
                                                (rule "mul_literals" (formula "18") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "elimGcdEq" (formula "18") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(2(1(5(8(0(8(9(5(5(2(3(0(2(7(3(3(2(2(9(#))))))))))))))))))))),
        quotient_2),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "18") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "18") (term "0,1,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "qeq_literals" (formula "18") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "elimGcdEq" (formula "9") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_2),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "add_zero_left" (formula "9") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "qeq_literals" (formula "9") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                                                (rule "mul_literals" (formula "11") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                                (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "7") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0"))
                                                (rule "qeq_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_3"))
                                                (rule "equal_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "qeq_literals" (formula "3") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                (rule "add_literals" (formula "5") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                (rule "add_literals" (formula "5") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "commute_and" (formula "1") (term "0,1"))
                                                (rule "commute_or" (formula "19") (term "0,0,0,0"))
                                                (rule "div_axiom" (formula "19") (term "0,1,1,1,0,0") (inst "quotient=quotient_4"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "19") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "equal_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                (rule "add_literals" (formula "21") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "21") (term "1"))
                                                (rule "add_literals" (formula "21") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "19"))
                                                (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
                                                (rule "times_zero_1" (formula "17") (term "0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "17") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0"))
                                                (rule "qeq_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "19"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                (rule "mul_literals" (formula "22") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "leq_literals" (formula "22") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "0,0"))
                                                (rule "leq_literals" (formula "22") (term "0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "17"))
                                                (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "22"))
                                                (rule "mul_literals" (formula "24") (term "1,1"))
                                                (rule "add_literals" (formula "24") (term "1"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "22"))
                                                (rule "leq_literals" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                                (rule "qeq_literals" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "21"))
                                                (rule "mul_literals" (formula "20") (term "1,1"))
                                                (rule "add_literals" (formula "20") (term "1"))
                                                (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "21"))
                                                (rule "applyEqRigid" (formula "23") (term "0,1,0,1,1,0,0") (ifseqformula "21"))
                                                (rule "mul_literals" (formula "23") (term "1,0,1,1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "22") (term "0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "div_axiom" (formula "22") (term "0,0,0,1") (inst "quotient=quotient_5"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "22") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "equal_literals" (formula "22") (term "0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                                (rule "add_literals" (formula "24") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "24") (term "1"))
                                                (rule "add_literals" (formula "24") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "applyEq" (formula "25") (term "0,1,1,1,0,0,1,1") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "25") (term "1,1,0,0,1,1"))
                                                (rule "applyEq" (formula "25") (term "0,0,0,1") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "23"))
                                                (rule "times_zero_1" (formula "17") (term "0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0"))
                                                (rule "qeq_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "19"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "add_literals" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                (rule "mul_literals" (formula "25") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0"))
                                                (rule "leq_literals" (formula "25") (term "0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "17"))
                                                (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "25"))
                                                (rule "mul_literals" (formula "24") (term "1,1"))
                                                (rule "add_literals" (formula "24") (term "1"))
                                                (rule "applyEqRigid" (formula "27") (term "0,1,1") (ifseqformula "25"))
                                                (rule "mul_literals" (formula "27") (term "1,1"))
                                                (rule "add_literals" (formula "27") (term "1"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "25"))
                                                (rule "leq_literals" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "24"))
                                                (rule "qeq_literals" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "applyEq" (formula "26") (term "0,1,1,0,1") (ifseqformula "24"))
                                                (rule "mul_literals" (formula "26") (term "1,1,0,1"))
                                                (rule "add_literals" (formula "26") (term "1,0,1"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "24"))
                                                (rule "mul_literals" (formula "26") (term "1,0,1,1,0,0,1,1"))
                                                (rule "add_literals" (formula "26") (term "0,1,1,0,0,1,1"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                                (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "25") (term "0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "ifthenelse_split_for" (formula "1") (term "1,1"))
                                                (branch "pow(2, 63 + result_numberOfLeadingZeros_0 * -1) ≥ 0 TRUE"
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                   (rule "inEqSimp_or_subsumption3" (formula "22") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "22") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "cut_direct" (formula "25") (term "0,0"))
                                                   (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "2") (term "0,1,1,1,0,1,0,1") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "2") (term "1,1,1,0,1,0,1"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,1,0,1"))
                                                      (rule "pow_literals" (formula "2") (term "1,0,1,0,1"))
                                                      (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0"))
                                                      (rule "div_literals" (formula "5") (term "0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                                      (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "pow_literals" (formula "27") (term "1,0,0"))
                                                      (rule "applyEq" (formula "1") (term "0,1,1,0") (ifseqformula "24"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "pow_literals" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "17") (term "0") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "1") (term "0,1,1,0,0,0,0,1") (ifseqformula "22"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "1") (term "1,0,0,0,0,1"))
                                                      (rule "pow_literals" (formula "1") (term "0,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "1") (term "0,1,1,0,0") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,0,0"))
                                                      (rule "pow_literals" (formula "1") (term "0,0"))
                                                      (rule "equal_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "23"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0"))
                                                      (rule "div_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "22"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "div_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "div_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "3") (term "0,1,1,0,0") (ifseqformula "20"))
                                                      (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0"))
                                                      (rule "pow_literals" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "0,1,1,0,1,0") (ifseqformula "20"))
                                                      (rule "mul_literals" (formula "3") (term "1,1,0,1,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,1,0"))
                                                      (rule "pow_literals" (formula "3") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "mod_axiom" (formula "23") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                                      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=add(Z(1(#)), mul(quotient_2, Z(2(#))))"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "5"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=add(Z(0(#)), mul(quotient_2, Z(2(#))))"))
                                                      (rule "leq_literals" (formula "11") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "add_zero_left" (formula "11") (term "1,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "11") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "11") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "16"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "17") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "div_axiom" (formula "26") (term "0,0") (inst "quotient=quotient_6"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "equal_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                      (rule "add_literals" (formula "3") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "20"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1"))
                                                      (rule "add_zero_right" (formula "3") (term "1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "18"))
                                                      (rule "times_zero_2" (formula "2") (term "1,1"))
                                                      (rule "add_zero_right" (formula "2") (term "1"))
                                                      (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "18"))
                                                      (rule "times_zero_2" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "1") (term "1") (ifseqformula "18"))
                                                      (rule "applyEqRigid" (formula "25") (term "0,0,0,0,0,1,1,0") (ifseqformula "18"))
                                                      (rule "times_zero_2" (formula "25") (term "0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0,0,1,1,0"))
                                                      (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "12"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0"))
                                                      (rule "qeq_literals" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "false_right" (formula "29"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "div_axiom" (formula "27") (term "0") (inst "quotient=quotient_7"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "equal_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                      (rule "add_literals" (formula "3") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_7") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                                                      (rule "add_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0"))
                                                      (rule "qeq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "false_right" (formula "31"))
                                                      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "22") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                      (rule "add_literals" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                      (rule "mul_literals" (formula "22") (term "1"))
                                                      (rule "inEqSimp_contradInEq3" (formula "22") (ifseqformula "2"))
                                                      (rule "greater_literals" (formula "22") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "mul_literals" (formula "22") (term "0,0"))
                                                      (rule "qeq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "closeFalse" (formula "22"))
                                                   )
                                                   (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                      (rule "qeq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "false_right" (formula "27"))
                                                      (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "25"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cut_direct" (formula "2") (term "0"))
                                                      (branch "CUT: pow(2, 63 + result_numberOfLeadingZeros_0 * -1) = 0 TRUE"
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "div_axiom" (formula "26") (term "0,0") (inst "quotient=quotient_6"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "29"))
                                                         (rule "applyEqRigid" (formula "27") (term "0,1,0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                                         (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                                         (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                                                         (rule "mul_literals" (formula "16") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                         (rule "mul_literals" (formula "16") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                                         (rule "leq_literals" (formula "16") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0"))
                                                         (rule "leq_literals" (formula "16") (term "0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                         (rule "leq_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                                         (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "17"))
                                                         (rule "times_zero_2" (formula "4") (term "1,1"))
                                                         (rule "add_zero_right" (formula "4") (term "1"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "17"))
                                                         (rule "times_zero_2" (formula "3") (term "1,1"))
                                                         (rule "add_zero_right" (formula "3") (term "1"))
                                                         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "16"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "applyEqRigid" (formula "27") (term "0,0,0,0,0") (ifseqformula "15"))
                                                         (rule "times_zero_2" (formula "27") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "23") (term "0,0,0,0,0,1,1,0") (ifseqformula "15"))
                                                         (rule "times_zero_2" (formula "23") (term "0,0,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,0,1,1,0"))
                                                         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "15"))
                                                         (rule "times_zero_2" (formula "29") (term "1"))
                                                         (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "10"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0"))
                                                         (rule "qeq_literals" (formula "29") (term "0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "false_right" (formula "29"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "div_axiom" (formula "27") (term "0") (inst "quotient=quotient_7"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
                                                         (rule "mul_literals" (formula "18") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                         (rule "add_literals" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_7") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0"))
                                                         (rule "leq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "31"))
                                                         (rule "add_literals" (formula "18") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "18"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,0"))
                                                         (rule "leq_literals" (formula "31") (term "0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "false_right" (formula "31"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "19"))
                                                         (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "CUT: pow(2, 63 + result_numberOfLeadingZeros_0 * -1) = 0 FALSE"
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                         (rule "mod_axiom" (formula "31") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                         (rule "mul_literals" (formula "31") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                         (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "28"))
                                                         (rule "add_zero_right" (formula "1") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0"))
                                                         (rule "leq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "false_right" (formula "28"))
                                                         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "mul_literals" (formula "4") (term "1"))
                                                         (rule "div_axiom" (formula "29") (term "0,0") (inst "quotient=quotient_6"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "32"))
                                                         (rule "applyEqRigid" (formula "30") (term "0,1,0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "26") (term "0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                                                         (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "4"))
                                                         (rule "mul_literals" (formula "20") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                         (rule "add_literals" (formula "20") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                         (rule "mul_literals" (formula "20") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0"))
                                                         (rule "leq_literals" (formula "20") (term "0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "20"))
                                                         (rule "times_zero_2" (formula "4") (term "1,1"))
                                                         (rule "add_zero_right" (formula "4") (term "1"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "20"))
                                                         (rule "times_zero_2" (formula "3") (term "1,1"))
                                                         (rule "add_zero_right" (formula "3") (term "1"))
                                                         (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                                                         (rule "qeq_literals" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqRigid" (formula "26") (term "0,0,0,0,0,1,1,0") (ifseqformula "18"))
                                                         (rule "times_zero_2" (formula "26") (term "0,0,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "26") (term "0,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "1") (term "1") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,0,0") (ifseqformula "18"))
                                                         (rule "times_zero_2" (formula "30") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "32") (term "0,1") (ifseqformula "18"))
                                                         (rule "times_zero_2" (formula "32") (term "1"))
                                                         (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "13"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0"))
                                                         (rule "qeq_literals" (formula "32") (term "0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "false_right" (formula "32"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "div_axiom" (formula "30") (term "0") (inst "quotient=quotient_7"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_7") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                         (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "34"))
                                                         (rule "add_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "false_right" (formula "34"))
                                                         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                                         (rule "mul_literals" (formula "22") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                         (rule "mul_literals" (formula "22") (term "1"))
                                                         (rule "inEqSimp_contradInEq3" (formula "22") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "greater_literals" (formula "22") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "qeq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                   )
                                                )
                                                (branch "pow(2, 63 + result_numberOfLeadingZeros_0 * -1) ≥ 0 FALSE"
                                                   (rule "inEqSimp_geqRight" (formula "25"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "powPositiveConcrete" (formula "1"))
                                                   (rule "qeq_literals" (formula "26") (term "1"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "4"))
                                                   (rule "mod_axiom" (formula "31") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                   (rule "mul_literals" (formula "31") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "22") (term "0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "closeFalse" (formula "22"))
                                                )
                                             )
                                          )
                                          (branch "Assume subJint(64, 1 + result_numberOfLeadingZeros_0) != 64 - (1 + result_numberOfLeadingZeros_0)"
                                             (rule "expand_inInt" (formula "10"))
                                             (rule "expand_inInt" (formula "14") (term "0,0,0,0"))
                                             (rule "replace_int_MAX" (formula "10") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "10") (term "0,1"))
                                             (rule "replace_int_MAX" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,1,0,0,0,0"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,1,1") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                             (rule "add_literals" (formula "17") (term "0,1"))
                                             (rule "inEqSimp_geqRight" (formula "19"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "mod_axiom" (formula "13") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                             (rule "div_literals" (formula "13") (term "0,1,0"))
                                             (rule "times_zero_2" (formula "13") (term "1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "mod_axiom" (formula "14") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                             (rule "div_literals" (formula "14") (term "0,1,0"))
                                             (rule "times_zero_2" (formula "14") (term "1,0"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "12"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "qeq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "false_right" (formula "17"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                                             (rule "expand_moduloLong" (formula "3") (term "0"))
                                             (rule "replace_long_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                             (rule "replace_long_MIN" (formula "3") (term "0,0"))
                                             (rule "replace_long_RANGE" (formula "3") (term "1,1,0"))
                                             (rule "polySimp_homoEq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "expand_moduloInteger" (formula "14") (term "0"))
                                             (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1"))
                                             (rule "expand_addJlong" (formula "10") (term "0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,1,1,0"))
                                             (rule "expand_moduloLong" (formula "11") (term "0"))
                                             (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                             (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                             (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                             (rule "add_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_homoEq" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "0,0"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,0"))
                                             (rule "div_literals" (formula "11") (term "0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                             (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0"))
                                             (rule "add_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "expand_moduloInteger" (formula "2") (term "0"))
                                             (rule "replace_int_MIN" (formula "2") (term "0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                             (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_homoEq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "elimGcdEq" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "times_zero_1" (formula "2") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "expand_subJint" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "expand_subJint" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
                                             (rule "expand_subJint" (formula "12") (term "0"))
                                             (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "expand_subJint" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_elimSub" (formula "11") (term "0,0,0,1"))
                                             (rule "expand_subJint" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "expand_addJlong" (formula "11") (term "0,0,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,1,1"))
                                             (rule "expand_addJlong" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1,0"))
                                             (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1,0"))
                                             (rule "expand_moduloInteger" (formula "14") (term "1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1,1,0,0"))
                                             (rule "equal_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0"))
                                             (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0"))
                                             (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                             (rule "mod_axiom" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                             (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "12") (term "0"))
                                             (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                             (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                             (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                             (rule "polySimp_homoEq" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0"))
                                             (rule "elimGcdEq" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(1(1(7(3(8(4(7(4(1(2(#))))))))))),
        mul(result_numberOfLeadingZeros_0,
            Z(neglit(1(#))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "add_literals" (formula "12") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "times_zero_1" (formula "12") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "12") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "12"))
                                             (rule "mul_literals" (formula "12") (term "1"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,0,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "mod_axiom" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "expand_moduloLong" (formula "13") (term "1,0,0"))
                                             (rule "replace_long_HALFRANGE" (formula "13") (term "0,0,1,1,0,0"))
                                             (rule "replace_long_RANGE" (formula "13") (term "1,1,1,0,0"))
                                             (rule "replace_long_MIN" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "polyMod_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "expand_moduloLong" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "replace_long_MIN" (formula "10") (term "0,1,0,1,0,0,0,1,1,0"))
                                             (rule "replace_long_RANGE" (formula "10") (term "1,1,1,0,1,0,0,0,1,1,0"))
                                             (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                             (rule "mod_axiom" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polyMod_pullOut" (formula "10") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polyMod_pullOut" (formula "10") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,0,0,1,1"))
                                             (rule "expand_moduloInteger" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "mod_axiom" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "nnf_imp2or" (formula "10") (term "0"))
                                             (rule "expand_moduloLong" (formula "11") (term "1,0,1,0,0,0,1,1"))
                                             (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                             (rule "replace_long_MIN" (formula "11") (term "0,1,0,1,0,0,0,1,1"))
                                             (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1"))
                                             (rule "mod_axiom" (formula "11") (term "1,0,1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,1,1"))
                                             (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,1,1"))
                                             (rule "polyMod_pullOut" (formula "11") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1,1"))
                                             (rule "expand_addJint" (formula "11") (term "0,1,1,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,1,1,0,1"))
                                             (rule "expand_addJint" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,0,0,1"))
                                             (rule "expand_addJint" (formula "11") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,1,0,1,1,0,0,1,1"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,1,1,0,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,1,1,0,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,1,0,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,1,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                                             (rule "applyEq" (formula "11") (term "0,1,1,0,1") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,1,0,1"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                             (rule "expand_addJint" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,0,0,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,0,0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                                             (rule "applyEq" (formula "11") (term "0,1,1,0,1") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,1,0,1"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "expand_moduloInteger" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,1,1,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "mod_axiom" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "11") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "11") (term "0,0,1,0,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,1,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,1,1"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "11") (term "1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,1"))
                                             (rule "div_axiom" (formula "3") (term "1,1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "equal_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "5") (term "1"))
                                             (rule "add_literals" (formula "5") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "14") (term "1,0,1,0,0,0,1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                                             (rule "mod_axiom" (formula "16") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0"))
                                             (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1,0"))
                                             (rule "mod_axiom" (formula "6") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "mod_axiom" (formula "14") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,1"))
                                             (rule "polySimp_sepPosMonomial" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "elimGcdEq" (formula "6") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "8") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                             (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "4") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "mod_axiom" (formula "16") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "16") (term "0,0,1,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "16") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                             (rule "equal_literals" (formula "16") (term "0,0,1,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,1,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "16") (term "0,0,1,0,1,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0,1,1"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "16") (term "1,0,1,1,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0,0,1,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,1,0,0,1,1"))
                                             (rule "div_axiom" (formula "2") (term "0") (inst "quotient=quotient_1"))
                                             (rule "equal_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "qeq_literals" (formula "2") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,1,1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                             (rule "add_literals" (formula "4") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "4") (term "1"))
                                             (rule "add_literals" (formula "4") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "4") (term "1,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "div_axiom" (formula "20") (term "0,1,1,1,0,0") (inst "quotient=quotient_2"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "23") (term "1,1,0,0"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "17") (term "0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "17") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0"))
                                             (rule "qeq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_strengthen0" (formula "17") (ifseqformula "22"))
                                             (rule "add_literals" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "17"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "qeq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "false_right" (formula "22"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "18"))
                                             (rule "greater_literals" (formula "3") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch "Assume moduloInt(1 + result_numberOfLeadingZeros_0) != 1 + result_numberOfLeadingZeros_0"
                                          (rule "expand_inInt" (formula "9"))
                                          (rule "expand_inInt" (formula "13") (term "0,0,0,0"))
                                          (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,0,0"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "replace_known_right" (formula "15") (term "0,0,0,0,0,1,1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_geqRight" (formula "18"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9"))
                                          (rule "mod_axiom" (formula "12") (term "0"))
                                          (rule "div_literals" (formula "12") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                          (rule "times_zero_2" (formula "12") (term "1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "mod_axiom" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                          (rule "div_literals" (formula "13") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "13") (term "1,0"))
                                          (rule "add_zero_right" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "11"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "false_right" (formula "16"))
                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "13") (term "0"))
                                          (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1"))
                                          (rule "expand_moduloInteger" (formula "14") (term "1,1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "14") (term "0,1,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1,1,1,0,0"))
                                          (rule "equal_literals" (formula "14") (term "0,0,1,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                                          (rule "expand_moduloLong" (formula "10") (term "0"))
                                          (rule "replace_long_MIN" (formula "10") (term "0,0"))
                                          (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,0"))
                                          (rule "replace_long_RANGE" (formula "10") (term "1,1,0"))
                                          (rule "add_literals" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_homoEq" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "mod_axiom" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                          (rule "div_literals" (formula "10") (term "0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "10") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0"))
                                          (rule "add_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "expand_moduloInteger" (formula "9") (term "0,0,0,1,1,0"))
                                          (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,0,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "9") (term "0,0,0,0,1,1,0"))
                                          (rule "expand_moduloLong" (formula "2") (term "0"))
                                          (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                          (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                          (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_homoEq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "expand_subJint" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "11") (term "0"))
                                          (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "11") (term "0,0"))
                                          (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                                          (rule "polySimp_homoEq" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0"))
                                          (rule "elimGcdEq" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                          (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "11") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "11") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1"))
                                          (rule "expand_subJint" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_elimSub" (formula "10") (term "0,0,0,1"))
                                          (rule "expand_moduloInteger" (formula "10") (term "0,0,0,1,1"))
                                          (rule "replace_int_MIN" (formula "10") (term "0,0,0,0,1,1"))
                                          (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0,1,1"))
                                          (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0,1,1"))
                                          (rule "expand_addJint" (formula "10") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "expand_addJlong" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0,1,0,0"))
                                          (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0"))
                                          (rule "expand_addJlong" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "expand_moduloInteger" (formula "9") (term "1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "9") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,1,1,1,0,0"))
                                          (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
                                          (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                                          (rule "mod_axiom" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0,0,1"))
                                          (rule "equal_literals" (formula "10") (term "0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                          (rule "expand_moduloLong" (formula "12") (term "1,0,0"))
                                          (rule "replace_long_RANGE" (formula "12") (term "1,1,1,0,0"))
                                          (rule "replace_long_HALFRANGE" (formula "12") (term "0,0,1,1,0,0"))
                                          (rule "replace_long_MIN" (formula "12") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                          (rule "polyMod_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0"))
                                          (rule "polyMod_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "expand_moduloInteger" (formula "13") (term "1,1,0,0"))
                                          (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,0"))
                                          (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,0"))
                                          (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                          (rule "polyMod_pullOut" (formula "13") (term "1,1,1,0,0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,1,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,1,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,1,1,0,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,1,1,0,0"))
                                          (rule "equal_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,1,0,0"))
                                          (rule "expand_moduloLong" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                          (rule "replace_long_MIN" (formula "9") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "replace_long_RANGE" (formula "9") (term "1,1,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polyMod_pullOut" (formula "9") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polyMod_pullOut" (formula "9") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "expand_addJlong" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,0,0,0,1,1"))
                                          (rule "expand_moduloInteger" (formula "10") (term "1,1,1,0,0,1,1"))
                                          (rule "replace_int_MIN" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                          (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                          (rule "mod_axiom" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "expand_addJint" (formula "10") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0,0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0,0,1"))
                                          (rule "expand_moduloLong" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                          (rule "replace_long_RANGE" (formula "10") (term "1,1,1,0,1,0,0,0,1,1"))
                                          (rule "replace_long_MIN" (formula "10") (term "0,1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,1,1"))
                                          (rule "mod_axiom" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,1"))
                                          (rule "polyMod_pullOut" (formula "10") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "10") (term "0,1,0,0,0,1,1"))
                                          (rule "polyMod_pullOut" (formula "10") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "10") (term "1,0,1,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,1,1"))
                                          (rule "expand_subJint" (formula "10") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "10") (term "0,0,1,0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1"))
                                          (rule "expand_moduloInteger" (formula "10") (term "0,1,0,0,1,1,0,1"))
                                          (rule "replace_int_MIN" (formula "10") (term "0,0,1,0,0,1,1,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,0,0,1,1,0,1"))
                                          (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,0,0,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                          (rule "mod_axiom" (formula "10") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0,0,1"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "10") (term "0,0,1,0,0,1,1,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,1,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,1,1,0,1"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,0,1"))
                                          (rule "equal_literals" (formula "10") (term "0,0,1,1,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,1,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,1,0,1"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,0,1"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,0,1"))
                                          (rule "equal_literals" (formula "10") (term "0,0,1,1,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,1"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0"))
                                          (rule "expand_moduloInteger" (formula "10") (term "1,1,0,0,1,1"))
                                          (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                          (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                          (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0,0,1,1"))
                                          (rule "polyMod_pullOut" (formula "10") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,1,1,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,1,1,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "mod_axiom" (formula "10") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                          (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1,1"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "expand_addJint" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                                          (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
                                          (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
                                          (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,0,1"))
                                          (rule "mod_axiom" (formula "10") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0,1,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "10") (term "0,0,1,0,1,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,0,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "1,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,1,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,1,0,1"))
                                          (rule "add_zero_right" (formula "10") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,1,0,1"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "div_axiom" (formula "2") (term "1,1") (inst "quotient=quotient_0"))
                                          (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "equal_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "4") (term "1"))
                                          (rule "add_literals" (formula "4") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "12") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "2"))
                                          (rule "mod_axiom" (formula "5") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "15") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "elimGcdEq" (formula "5") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                          (rule "add_zero_left" (formula "5") (term "0,0,1"))
                                          (rule "add_literals" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "0,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "qeq_literals" (formula "5") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "times_zero_1" (formula "5") (term "0,0"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "3") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "div_axiom" (formula "16") (term "0") (inst "quotient=quotient_1"))
                                          (rule "equal_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                                          (rule "times_zero_1" (formula "15") (term "0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "20"))
                                          (rule "add_literals" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "15"))
                                          (rule "add_zero_left" (formula "20") (term "0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,0"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "false_right" (formula "20"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "16"))
                                          (rule "greater_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Assume moduloLong(4294967296) != 4294967296"
                                       (rule "neg_literal" (formula "17") (term "1,1,1,0,1,0,0"))
                                       (rule "less_literals" (formula "17") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "expand_inInt" (formula "8"))
                                       (rule "expand_inInt" (formula "12") (term "0,0,0,0"))
                                       (rule "pow_literals" (formula "17") (term "0,0,1,0,0"))
                                       (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "replace_known_right" (formula "14") (term "0,0,0,0,0,1,1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_geqRight" (formula "17"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9"))
                                       (rule "mod_axiom" (formula "14") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                       (rule "div_literals" (formula "14") (term "0,1,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "mod_axiom" (formula "12") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                       (rule "div_literals" (formula "12") (term "0,1,0"))
                                       (rule "times_zero_2" (formula "12") (term "1,0"))
                                       (rule "add_zero_right" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_contradEq3" (formula "15") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "qeq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "false_right" (formula "15"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "0,1,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                                       (rule "expand_subJint" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                                       (rule "expand_subJint" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0"))
                                       (rule "expand_addJlong" (formula "9") (term "0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0,1,1,0"))
                                       (rule "expand_moduloLong" (formula "2") (term "0"))
                                       (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                       (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                       (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "expand_moduloInteger" (formula "12") (term "0"))
                                       (rule "replace_int_RANGE" (formula "12") (term "1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1"))
                                       (rule "expand_moduloLong" (formula "11") (term "0"))
                                       (rule "replace_long_RANGE" (formula "11") (term "1,1,0"))
                                       (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                       (rule "replace_long_MIN" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_homoEq" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "mod_axiom" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "11") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,1,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0"))
                                       (rule "add_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "closeTrue" (formula "11"))
                                    )
                                 )
                              )
                              (branch "Assume moduloLong(i / 4294967296) != i / 4294967296"
                                 (rule "less_literals" (formula "16") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "expand_inInt" (formula "8"))
                                 (rule "expand_inInt" (formula "12") (term "0,0,0,0"))
                                 (rule "less_literals" (formula "12") (term "0,0,1,2,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
                                 (rule "pow_literals" (formula "16") (term "0,0,1,0,0"))
                                 (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "pow_literals" (formula "12") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,1,1") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_geqRight" (formula "16"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "mod_axiom" (formula "11") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                 (rule "div_literals" (formula "11") (term "0,1,0"))
                                 (rule "times_zero_2" (formula "11") (term "1,0"))
                                 (rule "add_zero_right" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "mod_axiom" (formula "12") (term "0"))
                                 (rule "div_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                 (rule "times_zero_2" (formula "12") (term "1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "10"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,1,0"))
                                 (rule "expand_moduloInteger" (formula "12") (term "1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0,1,1,1,1,0,0"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "expand_moduloLong" (formula "11") (term "0,0,0"))
                                 (rule "replace_long_MIN" (formula "11") (term "0,0,0,0"))
                                 (rule "replace_long_RANGE" (formula "11") (term "1,1,0,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,0,0,0"))
                                 (rule "expand_moduloLong" (formula "8") (term "0,0,0,0,0,1,1,0"))
                                 (rule "replace_long_RANGE" (formula "8") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "replace_long_MIN" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "expand_subJint" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "8") (term "0,1,1,0,0"))
                                 (rule "expand_moduloLong" (formula "11") (term "1,0,0"))
                                 (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,0"))
                                 (rule "replace_long_MIN" (formula "11") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "mod_axiom" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "div_literals" (formula "11") (term "0,1,1,1,0,0"))
                                 (rule "times_zero_2" (formula "11") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "1,0,0"))
                                 (rule "expand_moduloLong" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                 (rule "replace_long_RANGE" (formula "8") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "replace_long_MIN" (formula "8") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "8") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "div_literals" (formula "8") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_2" (formula "8") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "8") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                 (rule "expand_moduloLong" (formula "10") (term "0"))
                                 (rule "replace_long_MIN" (formula "10") (term "0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "10") (term "0,0,1,0"))
                                 (rule "replace_long_RANGE" (formula "10") (term "1,1,0"))
                                 (rule "polySimp_homoEq" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "expand_moduloLong" (formula "9") (term "1,0,0,0,0,1,1"))
                                 (rule "replace_long_MIN" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                 (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,1,0,0,0,0,1,1"))
                                 (rule "replace_long_RANGE" (formula "9") (term "1,1,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,1,1,0,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,1,0,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,1,1"))
                                 (rule "div_literals" (formula "9") (term "0,1,1,1,0,0,0,0,1,1"))
                                 (rule "times_zero_2" (formula "9") (term "1,1,1,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "9") (term "1,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,0,0,0,0,1,1"))
                                 (rule "expand_moduloLong" (formula "9") (term "0,0,0,0,0,1,1"))
                                 (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,0,0,0,0,0,1,1"))
                                 (rule "replace_long_RANGE" (formula "9") (term "1,1,0,0,0,0,0,1,1"))
                                 (rule "replace_long_MIN" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                 (rule "expand_addJint" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,1,0,0,1"))
                                 (rule "expand_addJint" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "expand_subJint" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "8") (term "1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "8") (term "1,1,1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "8") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "8") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0,1,1,1,0,0"))
                                 (rule "equal_literals" (formula "8") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "11") (term "0"))
                                 (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "11") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "expand_addJlong" (formula "9") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,1,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,1,0,0,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "12") (term "1,1,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "12") (term "0,1,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,1,1,0,0"))
                                 (rule "polyMod_pullOut" (formula "12") (term "1,1,1,0,0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "mod_axiom" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "polyDiv_pullOut" (formula "12") (term "0,1,1,1,0,0") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "equal_literals" (formula "12") (term "0,0,1,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "8") (term "0,0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "8") (term "1,1,0,0,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "8") (term "0,0,0,0,1,1,0"))
                                 (rule "expand_addJlong" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,1,1,1,1,0,0,1,1"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "expand_addJlong" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "expand_moduloLong" (formula "11") (term "1,0,0"))
                                 (rule "replace_long_RANGE" (formula "11") (term "1,1,1,0,0"))
                                 (rule "replace_long_HALFRANGE" (formula "11") (term "0,0,1,1,0,0"))
                                 (rule "replace_long_MIN" (formula "11") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                 (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=mul(div(add(Z(6(9(2(7(6(9(4(9(2(4(#))))))))))),
            mod(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                    div(i,
                        Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "polyMod_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "expand_subJint" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,0,0,1,1"))
                                 (rule "expand_subJint" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,0,0,1,1"))
                                 (rule "expand_moduloLong" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "replace_long_RANGE" (formula "8") (term "1,1,1,0,1,0,0,0,1,1,0"))
                                 (rule "replace_long_HALFRANGE" (formula "8") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                 (rule "replace_long_MIN" (formula "8") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "8") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "8") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                div(i,
                    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
            mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                        div(i,
                            Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
                Z(neglit(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "8") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "8") (term "1,0,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0,0,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,1"))
                                 (rule "mul_literals" (formula "9") (term "1,0,1"))
                                 (rule "polyMod_pullOut" (formula "9") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,0,1"))
                                 (rule "mod_axiom" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,0,0,1") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,0,0,1"))
                                 (rule "equal_literals" (formula "9") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1"))
                                 (rule "nnf_imp2or" (formula "8") (term "0"))
                                 (rule "expand_moduloInteger" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "9") (term "1,1,1,0,0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        result_numberOfLeadingZeros_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,1,1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,1,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0,1,1,1,0,0,1,1") (inst "polyDivCoeff=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,1,1,1,0,0,1,1"))
                                 (rule "equal_literals" (formula "9") (term "0,0,1,1,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,1,0,0"))
                                 (rule "expand_moduloLong" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "replace_long_HALFRANGE" (formula "9") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                 (rule "replace_long_RANGE" (formula "9") (term "1,1,1,0,1,0,0,0,1,1"))
                                 (rule "replace_long_MIN" (formula "9") (term "0,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,0,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "9") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(add(Z(4(0(1(3(4(7(9(4(1(1(4(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                div(i,
                    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
            mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
                        div(i,
                            Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
                Z(neglit(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "9") (term "1,0,0,0,1,1") (inst "polyDivCoeff=mul(div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
            div(i, Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
        Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))),
    Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "polyMod_pullOut" (formula "9") (term "1,0,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "1,0,1,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,1,1"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,0,0"))
                                 (rule "div_axiom" (formula "10") (term "1,1") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "12") (term "1,0,1,0,0,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "12") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "14") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0"))
                                 (rule "mod_axiom" (formula "13") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "mod_axiom" (formula "11") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=div(add(Z(8(0(8(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))))),
        quotient_0),
    Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#))))))))))))))))))))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "13") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "6") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "div_axiom" (formula "17") (term "0,1,1,1,0,0") (inst "quotient=quotient_1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "14") (term "0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "5") (term "1,1"))
                                 (rule "add_literals" (formula "5") (term "1"))
                                 (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "2") (term "1,1"))
                                 (rule "add_literals" (formula "2") (term "1"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "21") (term "1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "commute_or" (formula "15") (term "0,0,0,0"))
                                 (rule "div_axiom" (formula "16") (term "0,0,0,1") (inst "quotient=quotient_2"))
                                 (rule "equal_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "qeq_literals" (formula "16") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "1"))
                                 (rule "add_literals" (formula "18") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "applyEq" (formula "19") (term "0,1,1,1,0,0,1,1") (ifseqformula "16"))
                                 (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0,1,1"))
                                 (rule "applyEq" (formula "19") (term "0,0,0,1") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "17"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "13"))
                                 (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "21") (term "1,1"))
                                 (rule "add_literals" (formula "21") (term "1"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEqRigid" (formula "21") (term "0,1,1,0,1") (ifseqformula "18"))
                                 (rule "mul_literals" (formula "21") (term "1,1,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,0,1"))
                                 (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEqRigid" (formula "17") (term "0,1,1") (ifseqformula "18"))
                                 (rule "mul_literals" (formula "17") (term "1,1"))
                                 (rule "add_literals" (formula "17") (term "1"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "18"))
                                 (rule "mul_literals" (formula "20") (term "1,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "20") (term "0,1,1,0,0,1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "div_axiom" (formula "15") (term "0,1,1,1,0,0") (inst "quotient=quotient_3"))
                                 (rule "mul_literals" (formula "15") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "15") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "equal_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "1"))
                                 (rule "add_literals" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "15"))
                                 (rule "polySimp_addComm1" (formula "18") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "16"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "neg_literal" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "13"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                 (rule "qeq_literals" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "16") (term "1,1"))
                                 (rule "add_literals" (formula "16") (term "1"))
                                 (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "18") (term "1,1"))
                                 (rule "add_literals" (formula "18") (term "1"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,1,1,0,0") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "19") (term "1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "applyEq" (formula "15") (term "1") (ifseqformula "17"))
                                 (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "cut_direct" (formula "20") (term "0,0"))
                                 (branch "CUT: result_numberOfLeadingZeros_0 = 32 TRUE"
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "pow_literals" (formula "21") (term "1,0,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "div_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                    (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "17"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0"))
                                    (rule "div_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "16"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "div_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption3" (formula "13") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "13") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "div_axiom" (formula "17") (term "0,0") (inst "quotient=quotient_4"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "16") (term "0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "20"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "11") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "11") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "12"))
                                    (rule "times_zero_2" (formula "4") (term "1,1"))
                                    (rule "add_zero_right" (formula "4") (term "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "11"))
                                    (rule "times_zero_2" (formula "2") (term "1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,0,0,1,1,0") (ifseqformula "10"))
                                    (rule "times_zero_2" (formula "16") (term "0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "20") (term "0,1") (ifseqformula "10"))
                                    (rule "times_zero_2" (formula "20") (term "1"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "false_right" (formula "20"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "div_axiom" (formula "18") (term "0") (inst "quotient=quotient_5"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "add_literals" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "22"))
                                    (rule "add_zero_right" (formula "13") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "13"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "false_right" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "14"))
                                    (rule "greater_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: result_numberOfLeadingZeros_0 = 32 FALSE"
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "qeq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "false_right" (formula "22"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption3" (formula "16") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "div_axiom" (formula "22") (term "0,0") (inst "quotient=quotient_4"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "25"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "12") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "13"))
                                    (rule "times_zero_2" (formula "3") (term "1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "11"))
                                    (rule "times_zero_2" (formula "2") (term "1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "11"))
                                    (rule "times_zero_2" (formula "25") (term "1"))
                                    (rule "applyEq" (formula "23") (term "0,0,0,0,0") (ifseqformula "11"))
                                    (rule "times_zero_2" (formula "23") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,0,0,0,0,1,1,0") (ifseqformula "11"))
                                    (rule "times_zero_2" (formula "19") (term "0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "11"))
                                    (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "6"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "false_right" (formula "25"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "div_axiom" (formula "23") (term "0") (inst "quotient=quotient_5"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcd=Z(6(1(6(1(5(5(9(0(7(3(7(0(4(4(7(6(4(4(8(1(#)))))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "27"))
                                    (rule "add_zero_right" (formula "14") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "14"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "15"))
                                    (rule "mul_literals" (formula "2") (term "1,1,0"))
                                    (rule "greater_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                        )
                        (branch "Assume 31 % 64 != 31"
                           (rule "expand_inInt" (formula "7"))
                           (rule "expand_inInt" (formula "11") (term "0,0,0,0"))
                           (rule "replace_int_MIN" (formula "7") (term "0,1"))
                           (rule "replace_int_MAX" (formula "7") (term "1,0"))
                           (rule "replace_int_MAX" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "11") (term "0,1,0,0,0,0"))
                           (rule "notLeft" (formula "12"))
                           (rule "notLeft" (formula "1"))
                           (rule "andLeft" (formula "6"))
                           (rule "polySimp_elimNeg" (formula "12") (term "1,1,1,0,1,2,0,0,0,0,1,1"))
                           (rule "polySimp_elimNeg" (formula "11") (term "1,1,1,0,1,2,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimNeg" (formula "15") (term "1,1,1,0,1,2,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,2,0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,2,0,0,0,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,2,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,2,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,2,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,2,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,2,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "7"))
                           (rule "mod_axiom" (formula "11") (term "1,0,2,0,1,2,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                           (rule "div_literals" (formula "11") (term "0,1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "11") (term "1,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "11") (term "1,0,2,0,1,2,0,0,0,0,1,1,0"))
                           (rule "pow_literals" (formula "11") (term "0,2,0,1,2,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "11") (term "2,0,1,2,0,0,0,0,1,1,0"))
                           (rule "mod_axiom" (formula "12") (term "1,0,2,0,1,2,0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,2,0,1,2,0,0,0,0,1,1"))
                           (rule "div_literals" (formula "12") (term "0,1,1,0,2,0,1,2,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "1,1,0,2,0,1,2,0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "12") (term "1,0,2,0,1,2,0,0,0,0,1,1"))
                           (rule "pow_literals" (formula "12") (term "0,2,0,1,2,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "2,0,1,2,0,0,0,0,1,1"))
                           (rule "mod_axiom" (formula "15") (term "1,0,2,0,1,2,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,2,0,1,2,0,0"))
                           (rule "div_literals" (formula "15") (term "0,1,1,0,2,0,1,2,0,0"))
                           (rule "times_zero_2" (formula "15") (term "1,1,0,2,0,1,2,0,0"))
                           (rule "add_zero_right" (formula "15") (term "1,0,2,0,1,2,0,0"))
                           (rule "pow_literals" (formula "15") (term "0,2,0,1,2,0,0"))
                           (rule "mul_literals" (formula "15") (term "2,0,1,2,0,0"))
                           (rule "mod_axiom" (formula "10") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                           (rule "div_literals" (formula "10") (term "0,1,0"))
                           (rule "times_zero_2" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "mod_axiom" (formula "13") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                           (rule "div_literals" (formula "13") (term "0,1,0"))
                           (rule "times_zero_2" (formula "13") (term "1,0"))
                           (rule "add_zero_right" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "closeTrue" (formula "13"))
                        )
                     )
                     (branch "Assume 32 % 64 != 32"
                        (rule "expand_inInt" (formula "7"))
                        (rule "expand_inInt" (formula "11") (term "0,0,0,0"))
                        (rule "replace_int_MAX" (formula "7") (term "1,0"))
                        (rule "replace_int_MIN" (formula "7") (term "0,1"))
                        (rule "replace_int_MAX" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "replace_int_MIN" (formula "11") (term "0,1,0,0,0,0"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "9"))
                        (rule "andLeft" (formula "6"))
                        (rule "polySimp_elimNeg" (formula "11") (term "1,0,1,0,0,2,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "14") (term "1,0,0,1,1,1,0,1,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "11") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "11") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "14") (term "1,0,1,0,0,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "14") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "11") (term "1,0,1,0,2,0,1,2,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,1,0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "11") (term "1,0,1,0,1,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,1,1,0,1,2,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "14") (term "1,0,1,0,1,0,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,1,0,0,2,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimNeg" (formula "14") (term "1,0,1,0,2,0,1,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "14") (term "1,1,1,0,1,2,0,0"))
                        (rule "polySimp_elimNeg" (formula "11") (term "1,1,1,0,1,2,0,0,0,0,1,1"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,0,1,1,1,0,1,2,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,2,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,2,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,2,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,2,0,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,2,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,2,0,0,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,2,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,2,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,2,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,2,0,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,2,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,2,0,0,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,2,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,2,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,2,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,2,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,2,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "7"))
                        (rule "mod_axiom" (formula "14") (term "1,1,2,0,0,2,0,0"))
                        (rule "div_literals" (formula "14") (term "0,0,1,1,1,2,0,0,2,0,0"))
                        (rule "times_zero_2" (formula "14") (term "0,1,1,1,2,0,0,2,0,0"))
                        (rule "times_zero_2" (formula "14") (term "1,1,1,2,0,0,2,0,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,2,0,0,2,0,0"))
                        (rule "pow_literals" (formula "14") (term "1,2,0,0,2,0,0"))
                        (rule "mod_axiom" (formula "11") (term "1,1,2,0,1,0,0,0,0,1,1"))
                        (rule "div_literals" (formula "11") (term "0,0,1,1,1,2,0,1,0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,2,0,1,0,0,0,0,1,1"))
                        (rule "times_zero_2" (formula "11") (term "1,1,1,2,0,1,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "11") (term "1,1,2,0,1,0,0,0,0,1,1"))
                        (rule "pow_literals" (formula "11") (term "1,2,0,1,0,0,0,0,1,1"))
                        (rule "mod_axiom" (formula "10") (term "1,1,2,0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,2,0,1,0,0,0,0,1,1,0"))
                        (rule "div_literals" (formula "10") (term "0,1,1,1,2,0,1,0,0,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,2,0,1,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,2,0,1,0,0,0,0,1,1,0"))
                        (rule "pow_literals" (formula "10") (term "1,2,0,1,0,0,0,0,1,1,0"))
                        (rule "mod_axiom" (formula "14") (term "1,1,2,0,1,0,0"))
                        (rule "div_literals" (formula "14") (term "0,0,1,1,1,2,0,1,0,0"))
                        (rule "times_zero_2" (formula "14") (term "0,1,1,1,2,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,2,0,1,0,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,2,0,1,0,0"))
                        (rule "pow_literals" (formula "14") (term "1,2,0,1,0,0"))
                        (rule "mod_axiom" (formula "11") (term "1,1,2,0,0,2,0,0,0,0,1,1"))
                        (rule "div_literals" (formula "11") (term "0,0,1,1,1,2,0,0,2,0,0,0,0,1,1"))
                        (rule "times_zero_2" (formula "11") (term "0,1,1,1,2,0,0,2,0,0,0,0,1,1"))
                        (rule "mul_literals" (formula "11") (term "1,1,1,2,0,0,2,0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "11") (term "1,1,2,0,0,2,0,0,0,0,1,1"))
                        (rule "pow_literals" (formula "11") (term "1,2,0,0,2,0,0,0,0,1,1"))
                        (rule "mod_axiom" (formula "10") (term "1,1,2,0,0,2,0,0,0,0,1,1,0"))
                        (rule "div_literals" (formula "10") (term "0,0,1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,2,0,0,2,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,2,0,0,2,0,0,0,0,1,1,0"))
                        (rule "pow_literals" (formula "10") (term "1,2,0,0,2,0,0,0,0,1,1,0"))
                        (rule "mod_axiom" (formula "12") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                        (rule "div_literals" (formula "12") (term "0,1,0"))
                        (rule "times_zero_2" (formula "12") (term "1,0"))
                        (rule "add_zero_right" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "closeTrue" (formula "12"))
                     )
                  )
               )
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "12"))
         (rule "closeTrue" (formula "12"))
      )
   )
   (branch "Exceptional Post (numberOfLeadingZeros)"
       (builtin "One Step Simplification" (formula "5"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "5"))
      (rule "close" (formula "9") (ifseqformula "8"))
   )
   (branch "Pre (numberOfLeadingZeros)"
       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "6"))
   )
)
)
}
