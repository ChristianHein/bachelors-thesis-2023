\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Mar 28 00:23:40 CEST 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]Presburger=false
[NewSMT]sqrtSMTTranslation=SMT
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=7000
[Strategy]Timeout=-1
"
}

\javaSource "..";

\include "../taclets/intSet.key",  "../taclets/binaryAxiomsExtension.key",  "../taclets/bitwiseOperations.key";

\proofObligation "#Proof Obligation Settings
#Tue Mar 28 00:23:40 CEST 2023
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
contract=BitSet[BitSet\\:\\:checkInvariants()].JML exceptional_behavior operation contract.0
name=BitSet[BitSet\\:\\:checkInvariants()].JML exceptional_behavior operation contract.0
";

\proof {
(keyLog "0" (keyUser "christianhein" ) (keyVersion "208396f69e"))

(autoModeTime "3768")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "5") (term "0,2,0,0,1,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "expand_subJint" (formula "5") (term "0,2,0,0,1,0,1,0,0"))
(rule "polySimp_elimSub" (formula "5") (term "0,0,2,0,0,1,0,1,0,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,2,0,0,1,0,1,0,0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0,2,0,0,1,0,1,0,0"))
(rule "expand_moduloInteger" (formula "5") (term "0,2,0,0,1,0,1,0,0"))
(rule "replace_int_RANGE" (formula "5") (term "1,1,0,2,0,0,1,0,1,0,0"))
(rule "replace_int_MIN" (formula "5") (term "0,0,2,0,0,1,0,1,0,0"))
(rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,2,0,0,1,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,1,0,2,0,0,1,0,1,0,0"))
(rule "add_literals" (formula "5") (term "0,0,1,0,2,0,0,1,0,1,0,0"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_checkInvariants,savedHeapBefore_checkInvariants"))
 (builtin "One Step Simplification" (formula "8"))
(rule "evaluateAssertCondition_1" (formula "8") (term "1") (inst "#condition=x"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
(rule "remove_parentheses_right" (formula "8") (term "1"))
(rule "compound_assignment_5_nonsimple" (formula "8") (term "1"))
(rule "ifElseUnfold" (formula "8") (term "1") (inst "#boolv=x_1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
(rule "compound_equality_comparison_1" (formula "8") (term "1") (inst "#v0=x_2"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_2"))
(rule "assignment_read_attribute_this" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "equality_comparison_simple" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "ifElseSplit" (formula "8"))
(branch "if x_1 true"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "replace_known_left" (formula "6") (term "0,0,1,0,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "assignment" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "6") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "applyEq" (formula "6") (term "0,0,0,1") (ifseqformula "1"))
   (rule "eqSymm" (formula "6") (term "0,0,1"))
   (rule "applyEq" (formula "6") (term "0,2,0,1,0,1") (ifseqformula "1"))
   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0"))
   (rule "assert" (formula "9") (term "1"))
   (branch "Assertion (x) OK"
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "evaluateAssertCondition_1" (formula "9") (term "1") (inst "#condition=x"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3"))
      (rule "remove_parentheses_right" (formula "9") (term "1"))
      (rule "compound_assignment_3_nonsimple" (formula "9") (term "1"))
      (rule "ifElseUnfold" (formula "9") (term "1") (inst "#boolv=x_4"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_4"))
      (rule "compound_assignment_2" (formula "9") (term "1") (inst "#v=x_5"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_5"))
      (rule "compound_greater_equal_than_comparison_1" (formula "9") (term "1") (inst "#v0=x_6"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_6"))
      (rule "assignment_read_attribute_this" (formula "9") (term "1"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "1"))
      (rule "greater_equal_than_comparison_simple" (formula "9") (term "1"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "qeq_literals" (formula "9") (term "0,0,1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "compound_assignment_1_new" (formula "9") (term "1"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "ifElseSplit" (formula "9"))
      (branch "if x_4 true"
          (builtin "One Step Simplification" (formula "10"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_4 false"
          (builtin "One Step Simplification" (formula "10"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "compound_less_equal_than_comparison_2" (formula "9") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_7"))
         (rule "assignment_read_attribute_this" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_8"))
         (rule "eval_order_array_access6" (formula "9") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr"))
         (rule "assignment_read_attribute_this" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "assignment_read_length" (formula "9") (term "1"))
         (branch "Normal Execution (x_arr != null)"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
            (rule "false_right" (formula "9"))
            (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
            (rule "less_equal_than_comparison_simple" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1,0"))
            (rule "blockEmpty" (formula "9") (term "1"))
            (rule "assert" (formula "9") (term "1"))
            (branch "Assertion (x_3) OK"
                (builtin "One Step Simplification" (formula "10"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "notLeft" (formula "7"))
               (rule "orRight" (formula "7"))
               (rule "evaluateAssertCondition_1" (formula "11") (term "1") (inst "#condition=x"))
               (rule "variableDeclarationAssign" (formula "11") (term "1"))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_9"))
               (rule "remove_parentheses_right" (formula "11") (term "1"))
               (rule "compound_assignment_5_nonsimple" (formula "11") (term "1"))
               (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x_10"))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_10"))
               (rule "compound_equality_comparison_2" (formula "11") (term "1") (inst "#v1=x_12") (inst "#v0=x_11"))
               (rule "variableDeclarationAssign" (formula "11") (term "1"))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_11"))
               (rule "assignment_read_attribute_this" (formula "11") (term "1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "variableDeclarationAssign" (formula "11") (term "1"))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_12"))
               (rule "eval_order_access2" (formula "11") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "11") (term "1"))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_1"))
               (rule "assignment_read_attribute_this" (formula "11") (term "1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "assignment_read_length" (formula "11") (term "1"))
               (branch "Normal Execution (x_arr_1 != null)"
                   (builtin "One Step Simplification" (formula "12"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
                  (rule "false_right" (formula "11"))
                  (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "2"))
                  (rule "equality_comparison_simple" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "eqSymm" (formula "11") (term "0,0,1,0"))
                  (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifElseSplit" (formula "12"))
                  (branch "if x_10 true"
                      (builtin "One Step Simplification" (formula "13"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_10 false"
                      (builtin "One Step Simplification" (formula "13"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "compound_equality_comparison_1" (formula "12") (term "1") (inst "#v0=x_10"))
                     (rule "variableDeclarationAssign" (formula "12") (term "1"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_13"))
                     (rule "eval_order_array_access4" (formula "12") (term "1") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "12") (term "1"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_2"))
                     (rule "assignment_read_attribute_this" (formula "12") (term "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "eval_order_array_access5" (formula "12") (term "1") (inst "#v1=x_14") (inst "#ar1=x_arr_3"))
                     (rule "variableDeclarationAssign" (formula "12") (term "1"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_3"))
                     (rule "assignment" (formula "12") (term "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "variableDeclarationAssign" (formula "12") (term "1"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_14"))
                     (rule "assignment_read_attribute_this" (formula "12") (term "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "assignment_array2" (formula "12") (term "1"))
                     (branch "Normal Execution (x_arr_3 != null)"
                         (builtin "One Step Simplification" (formula "13"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
                        (rule "orRight" (formula "12"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "applyEq" (formula "14") (term "0,2,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                        (rule "less_literals" (formula "13"))
                        (rule "false_right" (formula "13"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_commuteGeq" (formula "12"))
                        (rule "equality_comparison_simple" (formula "13") (term "1"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "13") (term "0,0,1,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "blockEmpty" (formula "13") (term "1"))
                        (rule "assert" (formula "13") (term "1"))
                        (branch "Assertion (x_9) OK"
                            (builtin "One Step Simplification" (formula "14"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Assertion (x_9) Failure"
                            (builtin "One Step Simplification" (formula "14"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "throwUnfold" (formula "13") (term "1") (inst "#v0=a"))
                           (rule "variableDeclarationAssign" (formula "13") (term "1"))
                           (rule "variableDeclaration" (formula "13") (term "1") (newnames "a"))
                           (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                           (rule "arrayLengthIsAnInt" (formula "2") (term "0"))
                           (rule "expand_inInt" (formula "2"))
                           (rule "replace_int_MAX" (formula "2") (term "1,0"))
                           (rule "replace_int_MIN" (formula "2") (term "0,1"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "instanceCreationAssignment" (formula "15") (term "1") (inst "#v0=a_1"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_1"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=a_2"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_2"))
                           (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "__NEW__"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=a_3"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_3"))
                           (rule "allocateInstance" (formula "15"))
                            (builtin "One Step Simplification" (formula "16"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockEmpty" (formula "18") (term "1"))
                           (rule "assignment" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "assignment_write_attribute_this" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallWithinClass" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallSuper" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallSuper" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallSuper" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "blockEmpty" (formula "18") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "assignment_write_attribute_this" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "blockEmpty" (formula "18") (term "1"))
                           (rule "methodCallReturnIgnoreResult" (formula "18") (term "1"))
                           (rule "methodCallReturn" (formula "18") (term "1"))
                           (rule "assignment" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "blockEmpty" (formula "18") (term "1"))
                           (rule "assignment" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallSuper" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallSuper" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallSuper" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "blockEmpty" (formula "18") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "assignment_write_attribute_this" (formula "18") (term "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "blockEmpty" (formula "18") (term "1"))
                           (rule "assignment_write_attribute" (formula "18") (term "1"))
                           (branch "Normal Execution (a_1 != null)"
                               (builtin "One Step Simplification" (formula "19"))
                               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "11")))
                              (rule "false_right" (formula "18"))
                              (rule "assignment" (formula "18") (term "1"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "methodCallThrow" (formula "18") (term "1"))
                              (rule "tryCatchThrow" (formula "18") (term "1"))
                              (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_15"))
                              (rule "equality_comparison_simple" (formula "18") (term "1"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "ifElseSplit" (formula "18"))
                              (branch "if x_15 true"
                                  (builtin "One Step Simplification" (formula "19"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_15 false"
                                  (builtin "One Step Simplification" (formula "19"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "elim_double_block" (formula "18") (term "1"))
                                 (rule "ifElseSplit" (formula "18"))
                                 (branch "if a instanceof java.lang.Throwable true"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "18") (term "1") (newnames "e"))
                                    (rule "delete_unnecessary_cast" (formula "18") (term "1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "18") (term "1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "emptyModality" (formula "18") (term "1"))
                                    (rule "andRight" (formula "18"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "18"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "11")))
                                          (rule "closeTrue" (formula "18"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "18"))
                                          (branch "Case 1"
                                             (rule "impRight" (formula "18"))
                                             (rule "orRight" (formula "19"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "orRight" (formula "18"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "11")))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "closeTrue" (formula "18"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "allRight" (formula "18") (inst "sk=f_0"))
                                       (rule "allRight" (formula "18") (inst "sk=o_0"))
                                       (rule "orRight" (formula "18"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "inEqSimp_leqRight" (formula "17"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "14") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "false_right" (formula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "notRight" (formula "20"))
                                          (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "close" (formula "13") (ifseqformula "3"))
                                       )
                                       (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqRigid" (formula "20") (term "2,0") (ifseqformula "1"))
                                             (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "9"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "applyEq" (formula "19") (term "1,0,0,1") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "notRight" (formula "19"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "19"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "false_right" (formula "13"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                             (rule "close" (formula "13") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "false_right" (formula "12"))
                                                (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "false_right" (formula "12"))
                                                (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "2"))
                                                (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "13"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "notRight" (formula "17"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "close" (formula "13") (ifseqformula "3"))
                                             )
                                             (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "false_right" (formula "13"))
                                                   (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "1"))
                                                   (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "notRight" (formula "19"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "false_right" (formula "13"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "false_right" (formula "13"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "14") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                                                   (rule "close" (formula "21") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "if a instanceof java.lang.Throwable false"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (a_1 = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (x_arr_3 = null)"
                         (builtin "One Step Simplification" (formula "13"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_3 != null, but x_14 Out of Bounds!)"
                         (builtin "One Step Simplification" (formula "13"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "0"))
                        (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "4"))
                        (rule "less_literals" (formula "1") (term "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "blockThrow" (formula "13") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                        (rule "close" (formula "10") (ifseqformula "3"))
                     )
                  )
               )
               (branch "Null Reference (x_arr_1 = null)"
                   (builtin "One Step Simplification" (formula "12"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Assertion (x_3) Failure"
                (builtin "One Step Simplification" (formula "10"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "throwUnfold" (formula "9") (term "1") (inst "#v0=a"))
               (rule "variableDeclarationAssign" (formula "9") (term "1"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "a"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
               (rule "expand_inInt" (formula "1"))
               (rule "replace_int_MIN" (formula "1") (term "0,1"))
               (rule "replace_int_MAX" (formula "1") (term "1,0"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "arrayLengthNotNegative" (formula "9") (term "0"))
               (rule "close" (formula "10") (ifseqformula "1"))
            )
         )
         (branch "Null Reference (x_arr = null)"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Assertion (x) Failure"
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if x_1 false"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "replace_known_right" (formula "5") (term "0,0,1,0,0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "compound_inequality_comparison_1" (formula "9") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3"))
   (rule "eval_order_array_access4" (formula "9") (term "1") (inst "#v0=x_arr"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr"))
   (rule "assignment_read_attribute_this" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "eval_order_array_access5" (formula "9") (term "1") (inst "#v1=x_4") (inst "#ar1=x_arr_1"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr_1"))
   (rule "assignment" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_4"))
   (rule "compound_subtraction_1" (formula "9") (term "1") (inst "#v=x_5"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_5"))
   (rule "assignment_read_attribute_this" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "assignmentSubtractionInt" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaSubInt" (formula "9") (term "0,1,0"))
   (rule "assignment_array2" (formula "9") (term "1"))
   (branch "Normal Execution (x_arr_1 != null)"
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
      (rule "orRight" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "expand_subJint" (formula "11") (term "0,2,0,1,0"))
      (rule "polySimp_elimSub" (formula "11") (term "0,0,2,0,1,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,2,0,1,0"))
      (rule "expand_subJint" (formula "10") (term "0"))
      (rule "polySimp_elimSub" (formula "10") (term "0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0"))
      (rule "expand_subJint" (formula "9") (term "0"))
      (rule "polySimp_elimSub" (formula "9") (term "0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
      (rule "expand_moduloInteger" (formula "11") (term "0,2,0,1,0"))
      (rule "replace_int_RANGE" (formula "11") (term "1,1,0,2,0,1,0"))
      (rule "replace_int_MIN" (formula "11") (term "0,0,2,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,2,0,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,2,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,1,0,2,0,1,0"))
      (rule "expand_moduloInteger" (formula "10") (term "0"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
      (rule "replace_int_MIN" (formula "10") (term "0,0"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0"))
      (rule "expand_moduloInteger" (formula "9") (term "0"))
      (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
      (rule "replace_int_MIN" (formula "9") (term "0,0"))
      (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,1,0"))
      (rule "inequality_comparison_simple" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "blockEmpty" (formula "11") (term "1"))
      (rule "assert" (formula "11") (term "1"))
      (branch "Assertion (x) OK"
          (builtin "One Step Simplification" (formula "12"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "evaluateAssertCondition_1" (formula "12") (term "1") (inst "#condition=x"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_6"))
         (rule "remove_parentheses_right" (formula "12") (term "1"))
         (rule "compound_assignment_3_nonsimple" (formula "12") (term "1"))
         (rule "ifElseUnfold" (formula "12") (term "1") (inst "#boolv=x_7"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_7"))
         (rule "compound_assignment_2" (formula "12") (term "1") (inst "#v=x_8"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_8"))
         (rule "compound_greater_equal_than_comparison_1" (formula "12") (term "1") (inst "#v0=x_9"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_9"))
         (rule "assignment_read_attribute_this" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "greater_equal_than_comparison_simple" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "compound_assignment_1_new" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "arrayLengthNotNegative" (formula "10") (term "1"))
         (rule "arrayLengthIsAnInt" (formula "11") (term "1"))
         (rule "expand_inInt" (formula "1"))
         (rule "replace_int_MIN" (formula "1") (term "0,1"))
         (rule "replace_int_MAX" (formula "1") (term "1,0"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "ifElseSplit" (formula "15"))
         (branch "if x_7 true"
             (builtin "One Step Simplification" (formula "16"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "assignment" (formula "15") (term "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "assert" (formula "15") (term "1"))
            (branch "Assertion (x_6) OK"
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Assertion (x_6) Failure"
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "throwUnfold" (formula "15") (term "1") (inst "#v0=a"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "a"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0") (ifseqformula "4"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "instanceCreationAssignment" (formula "16") (term "1") (inst "#v0=a_1"))
               (rule "variableDeclarationAssign" (formula "16") (term "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "a_1"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "16") (term "1") (inst "#v0=a_2"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "a_2"))
               (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "__NEW__"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "16") (term "1") (inst "#v0=a_3"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "a_3"))
               (rule "allocateInstance" (formula "16"))
                (builtin "One Step Simplification" (formula "17"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "assignment_write_attribute_this" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallWithinClass" (formula "19") (term "1"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallSuper" (formula "19") (term "1"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallSuper" (formula "19") (term "1"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallSuper" (formula "19") (term "1"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "assignment_write_attribute_this" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "assignment_write_attribute_this" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "methodCallReturnIgnoreResult" (formula "19") (term "1"))
               (rule "methodCallReturn" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallSuper" (formula "19") (term "1"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallSuper" (formula "19") (term "1"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallSuper" (formula "19") (term "1"))
               (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "assignment_write_attribute_this" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "assignment_write_attribute_this" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "assignment_write_attribute" (formula "19") (term "1"))
               (branch "Normal Execution (a_1 != null)"
                   (builtin "One Step Simplification" (formula "20"))
                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "11")))
                  (rule "false_right" (formula "19"))
                  (rule "assignment" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "methodCallThrow" (formula "19") (term "1"))
                  (rule "tryCatchThrow" (formula "19") (term "1"))
                  (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_10"))
                  (rule "equality_comparison_simple" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "replace_known_right" (formula "19") (term "0,0,1,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "ifElseSplit" (formula "19"))
                  (branch "if x_10 true"
                      (builtin "One Step Simplification" (formula "20"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_10 false"
                      (builtin "One Step Simplification" (formula "20"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "elim_double_block" (formula "19") (term "1"))
                     (rule "ifElseSplit" (formula "19"))
                     (branch "if a instanceof java.lang.Throwable true"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "19") (term "1") (newnames "e"))
                        (rule "delete_unnecessary_cast" (formula "19") (term "1"))
                         (builtin "One Step Simplification" (formula "20"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "19") (term "1"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "emptyModality" (formula "19") (term "1"))
                        (rule "andRight" (formula "19"))
                        (branch "Case 1"
                           (rule "andRight" (formula "19"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "11")))
                              (rule "closeTrue" (formula "19"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "19"))
                              (branch "Case 1"
                                 (rule "impRight" (formula "19"))
                                 (rule "orRight" (formula "20"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "19"))
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "11")))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "closeTrue" (formula "19"))
                              )
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "allRight" (formula "19") (inst "sk=f_0"))
                           (rule "allRight" (formula "19") (inst "sk=o_0"))
                           (rule "orRight" (formula "19"))
                           (rule "eqSymm" (formula "20"))
                           (rule "inEqSimp_geqRight" (formula "12"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_ltRight" (formula "18"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "mod_axiom" (formula "15") (term "1,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,2,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,2,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,2,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,2,0"))
                           (rule "mod_axiom" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "2") (term "0,0,0"))
                           (rule "mod_axiom" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "false_right" (formula "16"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                           (rule "leq_literals" (formula "7") (term "0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "19"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "greater_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=length(long[]::select(heap, self, BitSet::$words))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "4"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "commute_and" (formula "1") (term "0,0"))
                           (rule "div_axiom" (formula "18") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "21") (term "0,1,0,2,0") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,2,0"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "mul_literals" (formula "8") (term "0,1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "cut_direct" (formula "24") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "false_right" (formula "25"))
                              (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "6") (term "1,0,0"))
                              (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEqRigid" (formula "24") (term "1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "5") (term "1,0,0"))
                              (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "notRight" (formula "25"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                                 (rule "andLeft" (formula "4"))
                                 (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "4"))
                                 (rule "narrowSelectType" (formula "25") (term "0") (ifseqformula "15"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "close" (formula "23") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                                    (rule "andLeft" (formula "4"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                    (rule "close" (formula "19") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 TRUE"
                                       (rule "andLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "false_right" (formula "19"))
                                       (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "false_right" (formula "19"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                       (rule "close" (formula "18") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "false_right" (formula "18"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "false_right" (formula "18"))
                                          (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "4"))
                                          (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                          (rule "close" (formula "18") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                                          (rule "close" (formula "27") (ifseqformula "4"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "if a instanceof java.lang.Throwable false"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (a_1 = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "if x_7 false"
             (builtin "One Step Simplification" (formula "16"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "compound_less_equal_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_10"))
            (rule "assignment_read_attribute_this" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_11"))
            (rule "eval_order_array_access6" (formula "16") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_arr_2"))
            (rule "assignment_read_attribute_this" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "assignment_read_length" (formula "16") (term "1"))
            (branch "Normal Execution (x_arr_2 != null)"
                (builtin "One Step Simplification" (formula "17"))
                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
               (rule "false_right" (formula "16"))
               (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "assert" (formula "16") (term "1"))
               (branch "Assertion (x_6) OK"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "orRight" (formula "10"))
                  (rule "evaluateAssertCondition_1" (formula "18") (term "1") (inst "#condition=x"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_12"))
                  (rule "remove_parentheses_right" (formula "18") (term "1"))
                  (rule "compound_assignment_5_nonsimple" (formula "18") (term "1"))
                  (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x_13"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_13"))
                  (rule "compound_equality_comparison_2" (formula "18") (term "1") (inst "#v1=x_15") (inst "#v0=x_14"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_14"))
                  (rule "assignment_read_attribute_this" (formula "18") (term "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_15"))
                  (rule "eval_order_access2" (formula "18") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr_3"))
                  (rule "assignment_read_attribute_this" (formula "18") (term "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "assignment_read_length" (formula "18") (term "1"))
                  (branch "Normal Execution (x_arr_3 != null)"
                      (builtin "One Step Simplification" (formula "19"))
                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                     (rule "false_right" (formula "18"))
                     (rule "equality_comparison_simple" (formula "18") (term "1"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifElseSplit" (formula "19"))
                     (branch "if x_13 true"
                         (builtin "One Step Simplification" (formula "20"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_13 false"
                         (builtin "One Step Simplification" (formula "20"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "compound_equality_comparison_1" (formula "19") (term "1") (inst "#v0=x_13"))
                        (rule "variableDeclarationAssign" (formula "19") (term "1"))
                        (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_16"))
                        (rule "eval_order_array_access4" (formula "19") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclarationAssign" (formula "19") (term "1"))
                        (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_4"))
                        (rule "assignment_read_attribute_this" (formula "19") (term "1"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "eval_order_array_access5" (formula "19") (term "1") (inst "#v1=x_17") (inst "#ar1=x_arr_5"))
                        (rule "variableDeclarationAssign" (formula "19") (term "1"))
                        (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_5"))
                        (rule "assignment" (formula "19") (term "1"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "variableDeclarationAssign" (formula "19") (term "1"))
                        (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_17"))
                        (rule "assignment_read_attribute_this" (formula "19") (term "1"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "assignment_array2" (formula "19") (term "1"))
                        (branch "Normal Execution (x_arr_5 != null)"
                            (builtin "One Step Simplification" (formula "20"))
                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")))
                           (rule "orRight" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "19"))
                           (rule "equality_comparison_simple" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_right" (formula "21") (term "0,0,1,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "blockEmpty" (formula "21") (term "1"))
                           (rule "assert" (formula "21") (term "1"))
                           (branch "Assertion (x_12) OK"
                               (builtin "One Step Simplification" (formula "22"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Assertion (x_12) Failure"
                               (builtin "One Step Simplification" (formula "22"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "throwUnfold" (formula "21") (term "1") (inst "#v0=a"))
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "a"))
                              (rule "instanceCreationAssignment" (formula "21") (term "1") (inst "#v0=a_1"))
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_1"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "21") (term "1") (inst "#v0=a_2"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_2"))
                              (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "__NEW__"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "21") (term "1") (inst "#v0=a_3"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_3"))
                              (rule "allocateInstance" (formula "21"))
                               (builtin "One Step Simplification" (formula "22"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "blockEmpty" (formula "24") (term "1"))
                              (rule "assignment" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallWithinClass" (formula "24") (term "1"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallSuper" (formula "24") (term "1"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallSuper" (formula "24") (term "1"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallSuper" (formula "24") (term "1"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "blockEmpty" (formula "24") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "blockEmpty" (formula "24") (term "1"))
                              (rule "methodCallReturnIgnoreResult" (formula "24") (term "1"))
                              (rule "methodCallReturn" (formula "24") (term "1"))
                              (rule "assignment" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "blockEmpty" (formula "24") (term "1"))
                              (rule "assignment" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallSuper" (formula "24") (term "1"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallSuper" (formula "24") (term "1"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallSuper" (formula "24") (term "1"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "blockEmpty" (formula "24") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "blockEmpty" (formula "24") (term "1"))
                              (rule "assignment_write_attribute" (formula "24") (term "1"))
                              (branch "Normal Execution (a_1 != null)"
                                  (builtin "One Step Simplification" (formula "25"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "12")))
                                 (rule "false_right" (formula "24"))
                                 (rule "assignment" (formula "24") (term "1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "methodCallThrow" (formula "24") (term "1"))
                                 (rule "tryCatchThrow" (formula "24") (term "1"))
                                 (rule "ifElseUnfold" (formula "24") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_18"))
                                 (rule "equality_comparison_simple" (formula "24") (term "1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "ifElseSplit" (formula "24"))
                                 (branch "if x_18 true"
                                     (builtin "One Step Simplification" (formula "25"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_18 false"
                                     (builtin "One Step Simplification" (formula "25"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "elim_double_block" (formula "24") (term "1"))
                                    (rule "ifElseSplit" (formula "24"))
                                    (branch "if a instanceof java.lang.Throwable true"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "24") (term "1") (newnames "e"))
                                       (rule "delete_unnecessary_cast" (formula "24") (term "1"))
                                        (builtin "One Step Simplification" (formula "25"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment" (formula "24") (term "1"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "emptyModality" (formula "24") (term "1"))
                                       (rule "andRight" (formula "24"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "24"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "12")))
                                             (rule "closeTrue" (formula "24"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "24"))
                                             (branch "Case 1"
                                                (rule "impRight" (formula "24"))
                                                (rule "orRight" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "orRight" (formula "24"))
                                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "12")))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "closeTrue" (formula "24"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allRight" (formula "24") (inst "sk=f_0"))
                                          (rule "allRight" (formula "24") (inst "sk=o_0"))
                                          (rule "orRight" (formula "24"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "inEqSimp_geqRight" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "23"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "21"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "mod_axiom" (formula "19") (term "1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,2,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,2,0"))
                                          (rule "mod_axiom" (formula "3") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                          (rule "mod_axiom" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "false_right" (formula "17"))
                                          (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "19"))
                                          (rule "add_zero_right" (formula "7") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_0_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "greater_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=length(long[]::select(heap, self, BitSet::$words))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "5") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "9") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_and" (formula "4") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "div_axiom" (formula "20") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                                          (rule "equal_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,2,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,2,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "mul_literals" (formula "9") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "10"))
                                          (rule "mul_literals" (formula "14") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "15") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "17"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                          (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "17"))
                                          (rule "greater_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "times_zero_1" (formula "15") (term "1,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "8"))
                                          (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "16"))
                                          (rule "times_zero_2" (formula "15") (term "1,1"))
                                          (rule "add_zero_right" (formula "15") (term "1"))
                                          (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "16"))
                                          (rule "times_zero_2" (formula "9") (term "1,1"))
                                          (rule "add_zero_right" (formula "9") (term "1"))
                                          (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                                          (rule "qeq_literals" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "8") (term "1,1"))
                                          (rule "add_zero_right" (formula "8") (term "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                          (rule "times_zero_2" (formula "2") (term "1,1"))
                                          (rule "add_zero_right" (formula "2") (term "1"))
                                          (rule "applyEqRigid" (formula "8") (term "0,0,1") (ifseqformula "13"))
                                          (rule "times_zero_2" (formula "8") (term "0,1"))
                                          (rule "add_zero_left" (formula "8") (term "1"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,2,0") (ifseqformula "13"))
                                          (rule "times_zero_2" (formula "23") (term "1,0,0,2,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,2,0"))
                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "cut_direct" (formula "24") (term "0,0"))
                                          (branch "CUT: o_0 = null TRUE"
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "false_right" (formula "25"))
                                             (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "7") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "6") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "applyEqRigid" (formula "21") (term "1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "closeTrue" (formula "21"))
                                          )
                                          (branch "CUT: o_0 = null FALSE"
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "notRight" (formula "25"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                (rule "close" (formula "18") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "23") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "close" (formula "18") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "false_right" (formula "18"))
                                                      (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "false_right" (formula "17"))
                                                      (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "close" (formula "18") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "25") (term "0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "false_right" (formula "17"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "19") (ifseqformula "1"))
                                                      )
                                                      (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                                                         (rule "close" (formula "27") (ifseqformula "4"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "if a instanceof java.lang.Throwable false"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Null Reference (a_1 = null)"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Null Reference (x_arr_5 = null)"
                            (builtin "One Step Simplification" (formula "20"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_5 != null, but x_17 Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "20"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                           (rule "blockThrow" (formula "20") (term "1"))
                           (rule "commute_or" (formula "1"))
                           (rule "throwUnfold" (formula "20") (term "1") (inst "#v0=a"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "a"))
                           (rule "instanceCreationAssignment" (formula "20") (term "1") (inst "#v0=a_1"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_1"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (inst "#v0=a_2"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_2"))
                           (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "__NEW__"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (inst "#v0=a_3"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_3"))
                           (rule "allocateInstance" (formula "20"))
                            (builtin "One Step Simplification" (formula "21"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockEmpty" (formula "23") (term "1"))
                           (rule "assignment" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallWithinClass" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "blockEmpty" (formula "23") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "blockEmpty" (formula "23") (term "1"))
                           (rule "methodCallReturnIgnoreResult" (formula "23") (term "1"))
                           (rule "methodCallReturn" (formula "23") (term "1"))
                           (rule "assignment" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "blockEmpty" (formula "23") (term "1"))
                           (rule "assignment" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallSuper" (formula "23") (term "1"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "blockEmpty" (formula "23") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (rule "blockEmpty" (formula "23") (term "1"))
                           (rule "assignment_write_attribute" (formula "23") (term "1"))
                           (branch "Normal Execution (a_1 != null)"
                               (builtin "One Step Simplification" (formula "24"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "14")))
                              (rule "false_right" (formula "23"))
                              (rule "assignment" (formula "23") (term "1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "methodCallThrow" (formula "23") (term "1"))
                              (rule "tryCatchThrow" (formula "23") (term "1"))
                              (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_18"))
                              (rule "equality_comparison_simple" (formula "23") (term "1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "ifElseSplit" (formula "23"))
                              (branch "if x_18 true"
                                  (builtin "One Step Simplification" (formula "24"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_18 false"
                                  (builtin "One Step Simplification" (formula "24"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "elim_double_block" (formula "23") (term "1"))
                                 (rule "ifElseSplit" (formula "23"))
                                 (branch "if a instanceof java.lang.Throwable true"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "23") (term "1") (newnames "e"))
                                    (rule "delete_unnecessary_cast" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "24"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "emptyModality" (formula "23") (term "1"))
                                    (rule "andRight" (formula "23"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "23"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "14")))
                                          (rule "closeTrue" (formula "23"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "23"))
                                          (branch "Case 1"
                                             (rule "impRight" (formula "23"))
                                             (rule "orRight" (formula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_geqRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "22"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltRight" (formula "24"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "mod_axiom" (formula "21") (term "1,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,2,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,2,0"))
                                             (rule "mod_axiom" (formula "4") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                             (rule "mod_axiom" (formula "3") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                             (rule "mul_literals" (formula "6") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "inEqSimp_strengthen0" (formula "8") (ifseqformula "19"))
                                             (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "8"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "21"))
                                             (rule "add_zero_right" (formula "9") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "9"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "21") (term "0,0"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "false_right" (formula "21"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_contradInEq0" (formula "6") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                             (rule "leq_literals" (formula "6") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "closeFalse" (formula "9"))
                                          )
                                          (branch "Case 2"
                                             (rule "orRight" (formula "23"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeTrue" (formula "24"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "allRight" (formula "23") (inst "sk=f_0"))
                                       (rule "allRight" (formula "23") (inst "sk=o_0"))
                                       (rule "orRight" (formula "23"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "inEqSimp_ltRight" (formula "22"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "19") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,2,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                                       (rule "mul_literals" (formula "4") (term "1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "20"))
                                       (rule "add_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "7"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "false_right" (formula "20"))
                                       (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "17"))
                                       (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "false_right" (formula "17"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "4"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "leq_literals" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                 )
                                 (branch "if a instanceof java.lang.Throwable false"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (a_1 = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_3 = null)"
                      (builtin "One Step Simplification" (formula "19"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Assertion (x_6) Failure"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "throwUnfold" (formula "16") (term "1") (inst "#v0=a"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "a"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "instanceCreationAssignment" (formula "17") (term "1") (inst "#v0=a_1"))
                  (rule "variableDeclarationAssign" (formula "17") (term "1"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "a_1"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=a_2"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "a_2"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "__NEW__"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=a_3"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "a_3"))
                  (rule "allocateInstance" (formula "17"))
                   (builtin "One Step Simplification" (formula "18"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "assignment_write_attribute_this" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallWithinClass" (formula "20") (term "1"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallSuper" (formula "20") (term "1"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallSuper" (formula "20") (term "1"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallSuper" (formula "20") (term "1"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "assignment_write_attribute_this" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "methodCallReturnIgnoreResult" (formula "20") (term "1"))
                  (rule "methodCallReturn" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallSuper" (formula "20") (term "1"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallSuper" (formula "20") (term "1"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallSuper" (formula "20") (term "1"))
                  (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "assignment_write_attribute_this" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "assignment_write_attribute" (formula "20") (term "1"))
                  (branch "Normal Execution (a_1 != null)"
                      (builtin "One Step Simplification" (formula "21"))
                      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "12")))
                     (rule "false_right" (formula "20"))
                     (rule "assignment" (formula "20") (term "1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "methodCallThrow" (formula "20") (term "1"))
                     (rule "tryCatchThrow" (formula "20") (term "1"))
                     (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_12"))
                     (rule "equality_comparison_simple" (formula "20") (term "1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "replace_known_right" (formula "20") (term "0,0,1,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "ifElseSplit" (formula "20"))
                     (branch "if x_12 true"
                         (builtin "One Step Simplification" (formula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_12 false"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "1"))
                        (rule "elim_double_block" (formula "20") (term "1"))
                        (rule "ifElseSplit" (formula "20"))
                        (branch "if a instanceof java.lang.Throwable true"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "e"))
                           (rule "delete_unnecessary_cast" (formula "20") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "20") (term "1"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "emptyModality" (formula "20") (term "1"))
                           (rule "andRight" (formula "20"))
                           (branch "Case 1"
                              (rule "andRight" (formula "20"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "12")))
                                 (rule "closeTrue" (formula "20"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "20"))
                                 (branch "Case 1"
                                    (rule "impRight" (formula "20"))
                                    (rule "orRight" (formula "21"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "20"))
                                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "12")))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "closeTrue" (formula "20"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "allRight" (formula "20") (inst "sk=f_0"))
                              (rule "allRight" (formula "20") (inst "sk=o_0"))
                              (rule "orRight" (formula "20"))
                              (rule "eqSymm" (formula "21"))
                              (rule "inEqSimp_leqRight" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_geqRight" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltRight" (formula "19"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "mod_axiom" (formula "16") (term "1,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,2,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,2,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,2,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,2,0"))
                              (rule "mod_axiom" (formula "2") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,0"))
                              (rule "mod_axiom" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "6") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "17") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "false_right" (formula "17"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                              (rule "leq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "20"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "greater_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=length(long[]::select(heap, self, BitSet::$words))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "leq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "4"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_and" (formula "4") (term "0,0"))
                              (rule "commute_and" (formula "3") (term "0,0"))
                              (rule "commute_and" (formula "2") (term "0,0"))
                              (rule "commute_and" (formula "1") (term "0,0"))
                              (rule "div_axiom" (formula "19") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                              (rule "applyEq" (formula "22") (term "0,1,0,2,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,2,0"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "mul_literals" (formula "8") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                              (rule "mul_literals" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "14") (term "0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "leq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "9"))
                              (rule "mul_literals" (formula "15") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                              (rule "mul_literals" (formula "15") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "9"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0"))
                              (rule "add_zero_right" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "11"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                              (rule "mul_literals" (formula "8") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "12"))
                              (rule "greater_literals" (formula "8") (term "0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1,0"))
                              (rule "leq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "11"))
                              (rule "greater_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1,0"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "11"))
                              (rule "mul_literals" (formula "15") (term "1,1,0"))
                              (rule "greater_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "cut_direct" (formula "27") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "false_right" (formula "28"))
                                 (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "notRight" (formula "28"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                                    (rule "andLeft" (formula "4"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "4"))
                                    (rule "castTrueImpliesOriginalTrue" (formula "27") (ifseqformula "1"))
                                    (rule "closeTrue" (formula "27"))
                                 )
                                 (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                                       (rule "andLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "false_right" (formula "21"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "26") (term "2,0") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "26") (term "0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                       (rule "close" (formula "21") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "false_right" (formula "23"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "false_right" (formula "22"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEqRigid" (formula "26") (term "2,0") (ifseqformula "4"))
                                          (rule "narrowSelectType" (formula "26") (term "0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                          (rule "close" (formula "21") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "false_right" (formula "22"))
                                             (rule "applyEqRigid" (formula "29") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                             (rule "close" (formula "23") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                                             (rule "close" (formula "30") (ifseqformula "4"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "if a instanceof java.lang.Throwable false"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (a_1 = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Null Reference (x_arr_2 = null)"
                (builtin "One Step Simplification" (formula "17"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Assertion (x) Failure"
          (builtin "One Step Simplification" (formula "12"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "throwUnfold" (formula "11") (term "1") (inst "#v0=a"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "a"))
         (rule "arrayLengthNotNegative" (formula "9") (term "1"))
         (rule "arrayLengthIsAnInt" (formula "10") (term "1"))
         (rule "expand_inInt" (formula "1"))
         (rule "replace_int_MIN" (formula "1") (term "0,1"))
         (rule "replace_int_MAX" (formula "1") (term "1,0"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "instanceCreationAssignment" (formula "15") (term "1") (inst "#v0=a_1"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=a_2"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_2"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=a_3"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_3"))
         (rule "allocateInstance" (formula "15"))
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "assignment" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "assignment_write_attribute_this" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallWithinClass" (formula "18") (term "1"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallSuper" (formula "18") (term "1"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallSuper" (formula "18") (term "1"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallSuper" (formula "18") (term "1"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "assignment_write_attribute_this" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "assignment_write_attribute_this" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "18") (term "1"))
         (rule "methodCallReturn" (formula "18") (term "1"))
         (rule "assignment" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "assignment" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallSuper" (formula "18") (term "1"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallSuper" (formula "18") (term "1"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallSuper" (formula "18") (term "1"))
         (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "assignment_write_attribute_this" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "assignment_write_attribute_this" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "assignment_write_attribute" (formula "18") (term "1"))
         (branch "Normal Execution (a_1 != null)"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "11")))
            (rule "false_right" (formula "18"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallThrow" (formula "18") (term "1"))
            (rule "tryCatchThrow" (formula "18") (term "1"))
            (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_6"))
            (rule "equality_comparison_simple" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "ifElseSplit" (formula "18"))
            (branch "if x_6 true"
                (builtin "One Step Simplification" (formula "19"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_6 false"
                (builtin "One Step Simplification" (formula "19"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "elim_double_block" (formula "18") (term "1"))
               (rule "ifElseSplit" (formula "18"))
               (branch "if a instanceof java.lang.Throwable true"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "e"))
                  (rule "delete_unnecessary_cast" (formula "18") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "18") (term "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "emptyModality" (formula "18") (term "1"))
                  (rule "andRight" (formula "18"))
                  (branch "Case 1"
                     (rule "andRight" (formula "18"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "11")))
                        (rule "closeTrue" (formula "18"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "18"))
                        (branch "Case 1"
                           (rule "impRight" (formula "18"))
                           (rule "orRight" (formula "19"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "18"))
                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "11")))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "closeTrue" (formula "18"))
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "allRight" (formula "18") (inst "sk=f_0"))
                     (rule "allRight" (formula "18") (inst "sk=o_0"))
                     (rule "orRight" (formula "18"))
                     (rule "eqSymm" (formula "19"))
                     (rule "inEqSimp_geqRight" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltRight" (formula "17"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "mod_axiom" (formula "8") (term "1,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,2,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,2,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,2,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,2,0"))
                     (rule "mod_axiom" (formula "2") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0,0"))
                     (rule "mod_axiom" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                     (rule "leq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "19"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "greater_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=length(long[]::select(heap, self, BitSet::$words))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "4") (term "0,0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "leq_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "div_axiom" (formula "11") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "11") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "equal_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                     (rule "add_literals" (formula "13") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "13") (term "1"))
                     (rule "add_literals" (formula "13") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                     (rule "applyEq" (formula "14") (term "0,1,0,2,0") (ifseqformula "11"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,2,0"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1"))
                     (rule "polySimp_rightDist" (formula "12") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                     (rule "mul_literals" (formula "12") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                     (rule "mul_literals" (formula "13") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0"))
                     (rule "qeq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "mul_literals" (formula "5") (term "1"))
                     (rule "cut_direct" (formula "23") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "false_right" (formula "24"))
                        (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "5") (term "1,0,0"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "1,0,0"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "notRight" (formula "24"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "26") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "26") (term "0") (ifseqformula "16"))
                           (rule "eqSymm" (formula "26"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "22"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "18") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "false_right" (formula "17"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "18") (ifseqformula "1"))
                           )
                           (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "19") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "false_right" (formula "18"))
                                    (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "false_right" (formula "17"))
                                    (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "false_right" (formula "17"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "22") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "18") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                                    (rule "close" (formula "26") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "if a instanceof java.lang.Throwable false"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (a_1 = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (x_arr_1 = null)"
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr_1 != null, but x_4 Out of Bounds!)"
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "blockThrow" (formula "10") (term "1"))
      (rule "expand_subJint" (formula "1") (term "0,1"))
      (rule "polySimp_elimSub" (formula "1") (term "0,0,1"))
      (rule "mul_literals" (formula "1") (term "1,0,0,1"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
      (rule "expand_subJint" (formula "1") (term "0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
      (rule "expand_moduloInteger" (formula "1") (term "0,1"))
      (rule "replace_int_MIN" (formula "1") (term "0,0,1"))
      (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1"))
      (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1,0,1"))
      (rule "expand_moduloInteger" (formula "1") (term "0,0"))
      (rule "replace_int_MIN" (formula "1") (term "0,0,0"))
      (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0"))
      (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
      (rule "commute_or" (formula "1"))
      (rule "arrayLengthIsAnInt" (formula "6") (term "1,1,0,0,0,0"))
      (rule "expand_inInt" (formula "6"))
      (rule "replace_int_MAX" (formula "6") (term "1,0"))
      (rule "replace_int_MIN" (formula "6") (term "0,1"))
      (rule "andLeft" (formula "6"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0,0,0,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1,1,0,1,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "throwUnfold" (formula "14") (term "1") (inst "#v0=a"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "a"))
      (rule "instanceCreationAssignment" (formula "14") (term "1") (inst "#v0=a_1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "a_1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=a_2"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "a_2"))
      (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "__NEW__"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=a_3"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "a_3"))
      (rule "allocateInstance" (formula "14"))
       (builtin "One Step Simplification" (formula "15"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "assignment_write_attribute_this" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallWithinClass" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment_write_attribute_this" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "assignment_write_attribute_this" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "17") (term "1"))
      (rule "methodCallReturn" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment_write_attribute_this" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "assignment_write_attribute_this" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment_write_attribute" (formula "17") (term "1"))
      (branch "Normal Execution (a_1 != null)"
          (builtin "One Step Simplification" (formula "18"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")))
         (rule "false_right" (formula "17"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "methodCallThrow" (formula "17") (term "1"))
         (rule "tryCatchThrow" (formula "17") (term "1"))
         (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_6"))
         (rule "equality_comparison_simple" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "13"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "ifElseSplit" (formula "17"))
         (branch "if x_6 true"
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_6 false"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "elim_double_block" (formula "17") (term "1"))
            (rule "ifElseSplit" (formula "17"))
            (branch "if a instanceof java.lang.Throwable true"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "17") (term "1") (newnames "e"))
               (rule "delete_unnecessary_cast" (formula "17") (term "1"))
                (builtin "One Step Simplification" (formula "18"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "17") (term "1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "emptyModality" (formula "17") (term "1"))
               (rule "andRight" (formula "17"))
               (branch "Case 1"
                  (rule "andRight" (formula "17"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")))
                     (rule "closeTrue" (formula "17"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "17"))
                     (branch "Case 1"
                        (rule "impRight" (formula "17"))
                        (rule "orRight" (formula "18"))
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "19"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "18") (term "1"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0"))
                        (rule "dismissNonSelectedField" (formula "18") (term "1"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0"))
                        (rule "dismissNonSelectedField" (formula "18") (term "1"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_ltRight" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltRight" (formula "18"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                        (rule "mod_axiom" (formula "13") (term "1,0,2,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,2,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,2,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,2,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,2,0,1,0,0"))
                        (rule "mod_axiom" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "4") (term "0,0,0"))
                        (rule "mod_axiom" (formula "4") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1"))
                        (rule "mul_literals" (formula "4") (term "0,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,1"))
                        (rule "mul_literals" (formula "4") (term "0,0,1,1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=BitSet_wordsInUse_0"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "12") (term "0,0,1,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                        (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "15"))
                        (rule "add_zero_right" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0"))
                        (rule "leq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "false_right" (formula "15"))
                        (rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=BitSet_words_0"))
                        (rule "simplifySelectOfCreate" (formula "2"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                        (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "inEqSimp_commuteGeq" (formula "2"))
                        (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "2")))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                        (rule "leq_literals" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "div_axiom" (formula "5") (term "0,0,0") (inst "quotient=quotient_0"))
                        (rule "mul_literals" (formula "5") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "5") (term "0,1,1"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "equal_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                        (rule "add_literals" (formula "7") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "1"))
                        (rule "add_literals" (formula "7") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "applyEq" (formula "15") (term "0,1,0,2,0,0") (ifseqformula "5"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,2,0,0"))
                        (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "8") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
                        (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "5"))
                        (rule "inEqSimp_commuteGeq" (formula "8") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "8") (term "0,1,1"))
                        (rule "mul_literals" (formula "8") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                        (rule "mul_literals" (formula "2") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "leq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "leq_literals" (formula "7") (term "0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "2"))
                        (rule "times_zero_2" (formula "9") (term "1,1"))
                        (rule "add_zero_right" (formula "9") (term "1"))
                        (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "2"))
                        (rule "times_zero_2" (formula "10") (term "1,1"))
                        (rule "add_zero_right" (formula "10") (term "1"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                        (rule "leq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "2"))
                        (rule "times_zero_2" (formula "9") (term "1,1"))
                        (rule "add_zero_right" (formula "9") (term "1"))
                        (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "2"))
                        (rule "times_zero_2" (formula "10") (term "1,0"))
                        (rule "applyEq" (formula "10") (term "0,1,0,1,1") (ifseqformula "2"))
                        (rule "times_zero_2" (formula "10") (term "1,0,1,1"))
                        (rule "add_literals" (formula "10") (term "0,1,1"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,2,0,0") (ifseqformula "2"))
                        (rule "times_zero_2" (formula "17") (term "1,0,0,2,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,2,0,0"))
                        (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                        (rule "leq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_contradInEq0" (formula "8") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                        (rule "add_literals" (formula "8") (term "0,0,1"))
                        (rule "leq_literals" (formula "8") (term "0,1"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "8"))
                        (rule "leq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "Case 2"
                        (rule "orRight" (formula "17"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "allRight" (formula "17") (inst "sk=f_0"))
                  (rule "allRight" (formula "17") (inst "sk=o_0"))
                  (rule "orRight" (formula "17"))
                  (rule "eqSymm" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1"))
                  (rule "mod_axiom" (formula "11") (term "1,0,2,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,2,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,2,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,2,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,2,0,1,0,0"))
                  (rule "mod_axiom" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1,1"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "18"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "div_axiom" (formula "14") (term "0,1,0,2,0,1,0,0") (inst "quotient=quotient_0"))
                  (rule "equal_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "qeq_literals" (formula "14") (term "0,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "mul_literals" (formula "14") (term "1,1,1"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                  (rule "add_literals" (formula "16") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "16") (term "1"))
                  (rule "add_literals" (formula "16") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "14"))
                  (rule "inEqSimp_commuteGeq" (formula "6") (term "0"))
                  (rule "applyEq" (formula "6") (term "0,0,1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,1"))
                  (rule "applyEq" (formula "17") (term "0,1,0,2,0,1,0,0") (ifseqformula "14"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,2,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "mul_literals" (formula "15") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "6") (term "0,0,1,1"))
                  (rule "cut_direct" (formula "17") (term "0,0,1,0"))
                  (branch "CUT: self.wordsInUse ≥ 0 TRUE"
                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                     (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "21"))
                     (rule "add_zero_right" (formula "17") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "17"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "leq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "false_right" (formula "21"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                     (rule "mul_literals" (formula "17") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                     (rule "commute_or_2" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "cut_direct" (formula "24") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "false_right" (formula "25"))
                        (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "24") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "1,0,0"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "notRight" (formula "25"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "2"))
                           (rule "castTrueImpliesOriginalTrue" (formula "24") (ifseqformula "1"))
                           (rule "closeTrue" (formula "24"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "cut_direct" (formula "6") (term "0"))
                           (branch "CUT: self.wordsInUse ≤ quotient_0 * 4294967296 TRUE"
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "6"))
                              (rule "mul_literals" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                              (rule "leq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "18") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "21") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "18") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                                       (rule "close" (formula "26") (ifseqformula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self.wordsInUse ≤ quotient_0 * 4294967296 FALSE"
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                                 (rule "andLeft" (formula "3"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                 (rule "close" (formula "21") (ifseqformula "2"))
                              )
                              (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "cut_direct" (formula "20") (term "1"))
                                 (branch "CUT: o_0 = a_3 TRUE"
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "22") (ifseqformula "3"))
                                 )
                                 (branch "CUT: o_0 = a_3 FALSE"
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "false_right" (formula "21"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: self.wordsInUse ≥ 0 FALSE"
                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "18")))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_geqRight" (formula "17"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "qeq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "false_right" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                     (rule "mul_literals" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                     (rule "neg_literal" (formula "16") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "16") (term "0,0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0"))
                     (rule "qeq_literals" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "cut_direct" (formula "23") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "false_right" (formula "24"))
                        (rule "applyEqRigid" (formula "24") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "5") (term "1,0,0"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "notRight" (formula "24"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "3"))
                           (rule "narrowSelectType" (formula "25") (term "0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "23"))
                           (rule "close" (formula "23") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "close" (formula "19") (ifseqformula "1"))
                           )
                           (branch "f_0 = java.lang.Throwable::$cause ∧ o_0 = a_3 FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 TRUE"
                                 (rule "andLeft" (formula "3"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                 (rule "close" (formula "21") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Throwable::$message ∧ o_0 = a_3 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "false_right" (formula "18"))
                                    (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                    (rule "close" (formula "18") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                                    (rule "close" (formula "26") (ifseqformula "3"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "if a instanceof java.lang.Throwable false"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (a_1 = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)
}
