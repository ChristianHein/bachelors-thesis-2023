\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri May 12 09:47:40 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "..";

\include "../taclets/intSet.key",  "../taclets/binaryAxiomsExtension.key",  "../taclets/bitwiseOperations.key";

\proofObligation "#Proof Obligation Settings
#Fri May 12 09:47:40 CEST 2023
contract=BitSet.System[BitSet.System\\:\\:arraycopy([J,int,[J,int,int)].JML normal_behavior operation contract.0
name=BitSet.System[BitSet.System\\:\\:arraycopy([J,int,[J,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "christianhein" ) (keyVersion "208396f69e"))

(autoModeTime "6396")

(branch "dummy ID"
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,0,1,1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "3"))
(rule "eqSymm" (formula "18") (term "1,0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "18") (term "2,2,0,0,0,0,1,0,1"))
(rule "eqSymm" (formula "18") (term "1,0,0,0,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "17"))
 (builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "assignment" (formula "18") (term "1"))
 (builtin "One Step Simplification" (formula "18"))
(rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
(rule "qeq_literals" (formula "4"))
(rule "true_left" (formula "4"))
(rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "11"))
(rule "applyEq" (formula "17") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
(rule "applyEq" (formula "6") (term "0") (ifseqformula "11"))
(rule "qeq_literals" (formula "6"))
(rule "true_left" (formula "6"))
(rule "applyEq" (formula "3") (term "0") (ifseqformula "9"))
(rule "leq_literals" (formula "3"))
(rule "true_left" (formula "3"))
(rule "applyEq" (formula "4") (term "0") (ifseqformula "9"))
(rule "leq_literals" (formula "4"))
(rule "true_left" (formula "4"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
(rule "leq_literals" (formula "5") (term "0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "true_left" (formula "5"))
(rule "elementOfArrayRange" (formula "13") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "expand_subJint" (formula "13") (term "1,1,0,1,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,1,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,1,1,0,1,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,1,1,0,1,0,0,0,0,1,0,1"))
(rule "expand_moduloInteger" (formula "13") (term "1,1,0,1,0,0,0,0,1,0,1"))
(rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0,1,0,0,0,0,1,0,1"))
(rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0,1,0,0,0,0,1,0,1"))
(rule "replace_int_MIN" (formula "13") (term "0,1,1,0,1,0,0,0,0,1,0,1"))
(rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0,1,0,0,0,0,1,0,1"))
(rule "add_literals" (formula "13") (term "0,0,1,1,1,0,1,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "13") (term "0,0,0,0,1"))
(rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "13") (term "1,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,0,0,0,1"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,0,1,1,0,0,0,0,0,1"))
(rule "add_literals" (formula "13") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,1,1,0,0,0,0,0,1"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_arraycopy,savedHeapBefore_arraycopy,_destBefore_arraycopy,_destPosBefore_arraycopy,_lengthBefore_arraycopy,_srcBefore_arraycopy,_srcPosBefore_arraycopy"))
 (builtin "One Step Simplification" (formula "13"))
(rule "for_to_while" (formula "13") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "i"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "loopScopeInvDia" (formula "13") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
(branch "Invariant Initially Valid"
    (builtin "One Step Simplification" (formula "13"))
   (rule "expand_inInt" (formula "13") (term "1,0,0,1"))
   (rule "leq_literals" (formula "13") (term "0,0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "replace_int_MAX" (formula "13") (term "1,0,1,0,0,1"))
   (rule "replace_int_MIN" (formula "13") (term "0,1,1,0,0,1"))
   (rule "eqSymm" (formula "13") (term "1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,1"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0,1"))
   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0"))
   (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "allRight" (formula "13") (inst "sk=j_0"))
   (rule "impRight" (formula "13"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "3"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "4"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Invariant Preserved and Used"
    (builtin "One Step Simplification" (formula "14"))
   (rule "expand_inInt" (formula "14") (term "1,0,0,1,0,0"))
   (rule "expand_inInt" (formula "14") (term "1,0,0,1,0"))
   (rule "expand_inInt" (formula "14") (term "1,0,0,1,0,0,1,1,0,1,1"))
   (rule "expand_inInt" (formula "14") (term "1,0,0,1,0,0,0,1,1,0,1,1"))
   (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0,0"))
   (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0,0"))
   (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0,1,1"))
   (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0,0,1,1,0,1,1"))
   (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1,0,1,1"))
   (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,1,0,0,0,1,1,0,1,1"))
   (rule "impRight" (formula "14"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "18") (term "1,0,1,0,0,0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0"))
   (rule "translateJavaSubInt" (formula "18") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "eqSymm" (formula "18") (term "1,0,0,1,0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "18") (term "0,1,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "4") (term "2,1,0,1,1,0"))
   (rule "eqSymm" (formula "3") (term "1,0"))
   (rule "eqSymm" (formula "4") (term "1,0"))
   (rule "translateJavaSubInt" (formula "3") (term "2,1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "3") (term "2,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0"))
   (rule "elementOfArrayRange" (formula "18") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
   (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
   (rule "polySimp_addComm0" (formula "2") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "expand_subJint" (formula "19") (term "0,1,1,0"))
   (rule "polySimp_elimSub" (formula "19") (term "0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "19") (term "0,0,1,1,0"))
   (rule "expand_subJint" (formula "19") (term "0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "19") (term "0,0,1,1,1,0,1"))
   (rule "expand_subJint" (formula "19") (term "2,1,0,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "19") (term "0,2,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "19") (term "1,0,2,1,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "19") (term "0,2,1,0,1,0,1,0"))
   (rule "expand_subJint" (formula "5") (term "2,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "5") (term "0,2,1,0,0,1,0"))
   (rule "mul_literals" (formula "5") (term "1,0,2,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "5") (term "0,2,1,0,0,1,0"))
   (rule "expand_subJint" (formula "4") (term "2,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "4") (term "0,2,1,0,1,1,0"))
   (rule "mul_literals" (formula "4") (term "1,0,2,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "4") (term "0,2,1,0,1,1,0"))
   (rule "expand_subJint" (formula "4") (term "2,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "4") (term "0,2,1,0,0,1,0"))
   (rule "mul_literals" (formula "4") (term "1,0,2,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "4") (term "0,2,1,0,0,1,0"))
   (rule "expand_subJint" (formula "19") (term "1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "19") (term "0,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "19") (term "0,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "expand_moduloInteger" (formula "19") (term "0,1,1,0"))
   (rule "replace_int_RANGE" (formula "19") (term "1,1,0,1,1,0"))
   (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0,1,1,0"))
   (rule "replace_int_MIN" (formula "19") (term "0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,1,0"))
   (rule "expand_moduloInteger" (formula "19") (term "0,1,1,1,0,1"))
   (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0,1,1,1,0,1"))
   (rule "replace_int_RANGE" (formula "19") (term "1,1,0,1,1,1,0,1"))
   (rule "replace_int_MIN" (formula "19") (term "0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,1,1,0,1"))
   (rule "expand_moduloInteger" (formula "19") (term "2,1,0,1,0,1,0"))
   (rule "replace_int_RANGE" (formula "19") (term "1,1,2,1,0,1,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,2,1,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "19") (term "0,2,1,0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,1,2,1,0,1,0,1,0"))
   (rule "add_literals" (formula "19") (term "0,0,1,2,1,0,1,0,1,0"))
   (rule "expand_moduloInteger" (formula "5") (term "2,1,0,0,1,0"))
   (rule "replace_int_RANGE" (formula "5") (term "1,1,2,1,0,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,2,1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "5") (term "0,2,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,1,2,1,0,0,1,0"))
   (rule "add_literals" (formula "5") (term "0,0,1,2,1,0,0,1,0"))
   (rule "mod_axiom" (formula "5") (term "1,2,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,2,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "2,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,2,1,0,0,1,0"))
   (rule "add_literals" (formula "5") (term "0,0,2,1,0,0,1,0"))
   (rule "expand_moduloInteger" (formula "4") (term "2,1,0,1,1,0"))
   (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,2,1,0,1,1,0"))
   (rule "replace_int_MIN" (formula "4") (term "0,2,1,0,1,1,0"))
   (rule "replace_int_RANGE" (formula "4") (term "1,1,2,1,0,1,1,0"))
   (rule "eqSymm" (formula "4") (term "1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,1,2,1,0,0,1,0"))
   (rule "add_literals" (formula "4") (term "0,0,1,2,1,0,0,1,0"))
   (rule "mod_axiom" (formula "4") (term "1,2,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,2,1,0,0,1,0"))
   (rule "eqSymm" (formula "4") (term "1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "2,1,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,1,1,0"))
   (rule "add_literals" (formula "4") (term "0,0,2,1,0,1,1,0"))
   (rule "expand_moduloInteger" (formula "19") (term "1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "replace_int_RANGE" (formula "19") (term "1,1,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,1,1,1,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,1,1,0,1"))
   (rule "nnf_imp2or" (formula "5") (term "0"))
   (rule "expand_moduloInteger" (formula "4") (term "2,1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "4") (term "0,2,1,0,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,2,1,0,0,1,0"))
   (rule "replace_int_RANGE" (formula "4") (term "1,1,2,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,1,2,1,0,0,1,0"))
   (rule "add_literals" (formula "4") (term "0,0,1,2,1,0,0,1,0"))
   (rule "mod_axiom" (formula "4") (term "1,2,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,2,1,0,0,1,0"))
   (rule "eqSymm" (formula "4") (term "1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "2,1,0,1,1,0"))
   (rule "eqSymm" (formula "4") (term "1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,0,1,0"))
   (rule "add_literals" (formula "4") (term "0,0,2,1,0,0,1,0"))
   (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "5") (term "0,0"))
   (rule "nnf_imp2or" (formula "4") (term "0"))
   (rule "nnf_notAnd" (formula "4") (term "0,0"))
   (rule "nnf_notAnd" (formula "5") (term "1,0,0"))
   (rule "inEqSimp_notGeq" (formula "5") (term "1,1,0,0"))
   (rule "mul_literals" (formula "5") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "5") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,1,0,0"))
   (rule "mul_literals" (formula "5") (term "1,1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "5") (term "0,1,0,0"))
   (rule "mul_literals" (formula "5") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,1,0,0"))
   (rule "mul_literals" (formula "5") (term "1,0,1,0,0"))
   (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "4") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "4") (term "1,0,0"))
   (rule "inEqSimp_notLeq" (formula "4") (term "0,1,0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,1,0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "4") (term "1,1,0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "4") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,1,0,0"))
   (rule "mul_literals" (formula "4") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "19") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,0,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "19") (term "0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "19") (term "1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,0,1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "commute_or_2" (formula "5") (term "0,0"))
   (rule "commute_or_2" (formula "4") (term "0,0"))
   (rule "arrayLengthNotNegative" (formula "16") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
   (rule "expand_inInt" (formula "17"))
   (rule "replace_int_MIN" (formula "17") (term "0,1"))
   (rule "replace_int_MAX" (formula "17") (term "1,0"))
   (rule "andLeft" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
   (rule "leq_literals" (formula "18") (term "0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "17"))
   (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
   (rule "polySimp_addComm0" (formula "18") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
   (rule "polySimp_elimOne" (formula "18") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "15") (term "0"))
   (rule "expand_inInt" (formula "15"))
   (rule "replace_int_MAX" (formula "15") (term "1,0"))
   (rule "replace_int_MIN" (formula "15") (term "0,1"))
   (rule "andLeft" (formula "15"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
   (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
   (rule "polySimp_addComm0" (formula "17") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "17"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
   (rule "polySimp_elimOne" (formula "17") (term "0"))
   (rule "arrayLengthNotNegative" (formula "17") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
   (rule "leq_literals" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "commute_or" (formula "5") (term "0,0,0"))
   (rule "commute_or" (formula "4") (term "1,0,0,0"))
   (rule "commute_or" (formula "5") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "4") (term "0,0,0"))
   (rule "commute_or" (formula "4") (term "0,0,0,0"))
   (rule "inEqSimp_or_subsumption0" (formula "4") (term "0,0,0,0"))
   (rule "qeq_literals" (formula "4") (term "0,0,0,0,0,0"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "div_axiom" (formula "5") (term "0,1,2,1,0,0,1,0") (inst "quotient=quotient_0"))
   (rule "mul_literals" (formula "5") (term "1,1,1,1,1"))
   (rule "qeq_literals" (formula "5") (term "0,1,1"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "equal_literals" (formula "5") (term "0"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
   (rule "add_literals" (formula "7") (term "0,0,1"))
   (rule "polySimp_addComm1" (formula "7") (term "1"))
   (rule "add_literals" (formula "7") (term "0,1"))
   (rule "inEqSimp_homoInEq0" (formula "6"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
   (rule "polySimp_addComm1" (formula "6") (term "0"))
   (rule "inEqSimp_homoInEq1" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0"))
   (rule "applyEq" (formula "4") (term "0,1,2,1,0,0,1,0") (ifseqformula "5"))
   (rule "polySimp_addComm1" (formula "4") (term "2,1,0,0,1,0"))
   (rule "applyEq" (formula "8") (term "0,1,2,1,0,0,1,0") (ifseqformula "5"))
   (rule "polySimp_addComm1" (formula "8") (term "2,1,0,0,1,0"))
   (rule "applyEq" (formula "4") (term "0,1,2,1,0,1,1,0") (ifseqformula "5"))
   (rule "polySimp_addComm1" (formula "4") (term "2,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
   (rule "polySimp_mulComm0" (formula "6") (term "1"))
   (rule "polySimp_rightDist" (formula "6") (term "1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
   (rule "mul_literals" (formula "6") (term "0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
   (rule "polySimp_mulComm0" (formula "7") (term "1"))
   (rule "polySimp_rightDist" (formula "7") (term "1"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
   (rule "mul_literals" (formula "7") (term "0,1"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "13"))
   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "6") (term "0"))
   (rule "add_literals" (formula "6") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
   (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
   (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "6") (term "0,0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
   (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
   (rule "add_literals" (formula "6") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "6") (term "1,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0"))
   (rule "qeq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
   (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
   (rule "polySimp_addComm0" (formula "3") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "9"))
   (rule "times_zero_1" (formula "19") (term "0,0"))
   (rule "add_zero_left" (formula "19") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19"))
   (rule "mul_literals" (formula "19") (term "1"))
   (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "19") (term "0,0"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
   (rule "add_literals" (formula "19") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
   (rule "add_literals" (formula "19") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "19") (term "1,0,0"))
   (rule "add_zero_right" (formula "19") (term "0,0"))
   (rule "leq_literals" (formula "19") (term "0"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "7"))
   (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "19"))
   (rule "times_zero_2" (formula "9") (term "1,1"))
   (rule "add_zero_right" (formula "9") (term "1"))
   (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "19"))
   (rule "times_zero_2" (formula "8") (term "1,1"))
   (rule "add_zero_right" (formula "8") (term "1"))
   (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
   (rule "qeq_literals" (formula "20"))
   (rule "true_left" (formula "20"))
   (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "19"))
   (rule "times_zero_2" (formula "3") (term "1,1"))
   (rule "add_zero_right" (formula "3") (term "1"))
   (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "19"))
   (rule "leq_literals" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "applyEq" (formula "5") (term "0,1,0,2,1,0,0,1,0") (ifseqformula "18"))
   (rule "times_zero_2" (formula "5") (term "1,0,2,1,0,0,1,0"))
   (rule "add_zero_right" (formula "5") (term "0,2,1,0,0,1,0"))
   (rule "eqSymm" (formula "5") (term "1,0"))
   (rule "applyEq" (formula "6") (term "1") (ifseqformula "18"))
   (rule "applyEqRigid" (formula "9") (term "0,1,0,2,1,0,0,1,0") (ifseqformula "18"))
   (rule "times_zero_2" (formula "9") (term "1,0,2,1,0,0,1,0"))
   (rule "add_zero_right" (formula "9") (term "0,2,1,0,0,1,0"))
   (rule "applyEqRigid" (formula "5") (term "0,1,0,2,1,0,0,1,0") (ifseqformula "18"))
   (rule "times_zero_2" (formula "5") (term "1,0,2,1,0,0,1,0"))
   (rule "add_zero_right" (formula "5") (term "0,2,1,0,0,1,0"))
   (rule "eqSymm" (formula "5") (term "1,0"))
   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
   (rule "leq_literals" (formula "3") (term "0"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "13"))
   (rule "leq_literals" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "17"))
   (rule "leq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x_2"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_2"))
   (rule "less_than_comparison_simple" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0"))
   (rule "ifElseSplit" (formula "25"))
   (branch "if x_2 true"
       (builtin "One Step Simplification" (formula "26"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eval_order_array_access3" (formula "26") (term "1") (inst "#v1=x_3") (inst "#v2=x_2") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_arr"))
      (rule "assignment" (formula "26") (term "1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_4"))
      (rule "assignment" (formula "26") (term "1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_3"))
      (rule "assignment_array2" (formula "26") (term "1"))
      (branch "Normal Execution (_src != null)"
          (builtin "One Step Simplification" (formula "27"))
          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
         (rule "orRight" (formula "26"))
         (rule "inEqSimp_ltRight" (formula "27"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "26"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "12")))
         (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
         (rule "assignment_to_primitive_array_component" (formula "28") (term "1"))
         (branch "Normal Execution (x_arr != null)"
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "5")))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "blockEmpty" (formula "29") (term "1"))
            (rule "mod_axiom" (formula "2") (term "1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
            (rule "applyEq" (formula "2") (term "0,1,0,1,0,0") (ifseqformula "9"))
            (rule "times_zero_2" (formula "2") (term "1,0,1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
            (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
            (rule "mul_literals" (formula "5") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "add_literals" (formula "5") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
            (rule "mul_literals" (formula "4") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "postincrement" (formula "28") (term "1"))
            (rule "compound_int_cast_expression" (formula "28") (term "1") (inst "#v=x_2"))
            (rule "variableDeclarationAssign" (formula "28") (term "1"))
            (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_5"))
            (rule "remove_parentheses_right" (formula "28") (term "1"))
            (rule "assignmentAdditionInt" (formula "28") (term "1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "translateJavaAddInt" (formula "28") (term "0,1,0"))
            (rule "expand_addJint" (formula "28") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "28") (term "0,0,1,0"))
            (rule "expand_moduloInteger" (formula "28") (term "0,1,0"))
            (rule "replace_int_RANGE" (formula "28") (term "1,1,0,1,0"))
            (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0,1,0"))
            (rule "replace_int_MIN" (formula "28") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,0,1,0"))
            (rule "polyMod_pullOut" (formula "28") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "28") (term "1,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,0,1,0"))
            (rule "widening_identity_cast_5" (formula "28") (term "1"))
            (rule "assignment" (formula "28") (term "1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "blockEmpty" (formula "28") (term "1"))
            (rule "lsContinue" (formula "28") (term "1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "eqSymm" (formula "28") (term "1,0,1,0,0"))
            (rule "eqSymm" (formula "28") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "1,0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,1,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,1"))
            (rule "precOfInt" (formula "28") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,1"))
            (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "28") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
            (rule "times_zero_2" (formula "28") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,1"))
            (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,0,1,0,1,0,0,0"))
            (rule "eqSymm" (formula "28") (term "1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "2,1,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0,0,1,1,0,1,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,2,1,0,0,1,1,0,1,0,0,0"))
            (rule "applyEq" (formula "28") (term "0,1,2,1,0,0,1,1,0,1,0,0,0") (ifseqformula "8"))
            (rule "times_zero_2" (formula "28") (term "1,2,1,0,0,1,1,0,1,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "2,1,0,0,1,1,0,1,0,0,0"))
            (rule "mod_axiom" (formula "28") (term "1,1,1,0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,1,0,1,0,0,0,0,1,0"))
            (rule "applyEq" (formula "28") (term "0,1,1,1,0,1,0,0,0,0,1,0") (ifseqformula "8"))
            (rule "times_zero_2" (formula "28") (term "1,1,1,0,1,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "28") (term "1,1,0,1,0,0,0,0,1,0"))
            (rule "mod_axiom" (formula "28") (term "1,1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,1,0,0,0,1,0,0,0"))
            (rule "mod_axiom" (formula "28") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,0"))
            (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,0,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "2,1,0,0,0,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0,0,0,1,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,2,1,0,0,0,1,0,1,0,0"))
            (rule "applyEq" (formula "28") (term "0,1,2,1,0,0,0,1,0,1,0,0") (ifseqformula "8"))
            (rule "times_zero_2" (formula "28") (term "1,2,1,0,0,0,1,0,1,0,0"))
            (rule "add_zero_right" (formula "28") (term "2,1,0,0,0,1,0,1,0,0"))
            (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "2,1,0,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,2,1,0,0,0,1,0,0,1,0"))
            (rule "applyEq" (formula "28") (term "0,1,2,1,0,0,0,1,0,0,1,0") (ifseqformula "8"))
            (rule "times_zero_2" (formula "28") (term "1,2,1,0,0,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "28") (term "2,1,0,0,0,1,0,0,1,0"))
            (rule "mod_axiom" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "1,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,0,0,0,0,1,0,0"))
            (rule "mod_axiom" (formula "28") (term "0,1,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,0,1,0,1,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,1,1"))
            (rule "mod_axiom" (formula "28") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,0,0,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1"))
            (rule "mod_axiom" (formula "28") (term "0,1,0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,0,1,0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0"))
            (rule "mod_axiom" (formula "28") (term "0,1,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,0,1,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1"))
            (rule "mod_axiom" (formula "28") (term "1,2,1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "2,1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0,0,0,1,0,1,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,2,1,0,0,0,1,0,1,0,0,0"))
            (rule "applyEq" (formula "28") (term "0,1,2,1,0,0,0,1,0,1,0,0,0") (ifseqformula "8"))
            (rule "times_zero_2" (formula "28") (term "1,2,1,0,0,0,1,0,1,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "2,1,0,0,0,1,0,1,0,0,0"))
            (rule "eqSymm" (formula "28") (term "1,0,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1,1"))
            (rule "mul_literals" (formula "28") (term "0,0,0,1,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1"))
            (rule "mul_literals" (formula "28") (term "1,0,1"))
            (rule "polyMod_pullOut" (formula "28") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,1"))
            (rule "mod_axiom" (formula "28") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,0,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1"))
            (rule "mul_literals" (formula "28") (term "0,0,1,0,1"))
            (rule "polyMod_pullOut" (formula "28") (term "0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1"))
            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,1,1"))
            (rule "mod_axiom" (formula "28") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1"))
            (rule "inEqSimp_homoInEq0" (formula "28") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,0,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,1,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,1"))
            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1"))
            (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1"))
            (rule "mul_literals" (formula "28") (term "0,1,1,1"))
            (rule "elimGcdGeq" (formula "28") (term "1,1") (inst "elimGcdRightDiv=add(Z(1(#)),
    div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(i_0, Z(neglit(1(#))))),
            length),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(3(4(9(0(5(4(2(4(4(6(#))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        length),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,0,0,0,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0,1,1"))
            (rule "sub_literals" (formula "28") (term "0,0,0,0,0,0,0,1,1"))
            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1,0,1,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,1,0,1,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,1,0,1,1"))
            (rule "add_zero_right" (formula "28") (term "0,1,0,1,1"))
            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,0,0,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,1,1"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,1,1"))
            (rule "polySimp_pullOutFactor0" (formula "28") (term "0,1,0,1,1"))
            (rule "add_literals" (formula "28") (term "1,0,1,0,1,1"))
            (rule "times_zero_1" (formula "28") (term "0,1,0,1,1"))
            (rule "leq_literals" (formula "28") (term "1,0,1,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,1,1"))
            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,1,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,1,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,1,1"))
            (rule "qeq_literals" (formula "28") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polyDiv_pullOut" (formula "28") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
            (rule "equal_literals" (formula "28") (term "0,0,1,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1"))
            (rule "polySimp_addComm0" (formula "28") (term "0,1,1"))
            (rule "inEqSimp_homoInEq1" (formula "28") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,1,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,1"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
            (rule "polyDiv_pullOut" (formula "28") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
            (rule "equal_literals" (formula "28") (term "0,0,0,0,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
            (rule "ifthenelse_split" (formula "3") (term "0"))
            (branch "src = dest TRUE"
               (rule "applyEqReverse" (formula "29") (term "3,0,1,1,0,1,0,0,0") (ifseqformula "4"))
               (rule "applyEqReverse" (formula "29") (term "3,0,0,1,0,0,1,0") (ifseqformula "4"))
               (rule "applyEqReverse" (formula "29") (term "3,0,0,1,0,1,0,0,0") (ifseqformula "4"))
               (rule "applyEqReverse" (formula "29") (term "3,0,0,1,0,1,0,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEq" (formula "28") (term "1,0,1,0,1,0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "6") (term "1,0,1,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
               (rule "applyEq" (formula "21") (term "1,3,0,0,1,0,1,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "21") (term "1,3,0,0,1,0,0,1,0") (ifseqformula "3"))
               (rule "ex_pull_out1" (formula "21") (term "0,0,0,0,1,0"))
               (rule "div_axiom" (formula "21") (term "0,1,1,1,0,0,0") (inst "quotient=quotient_1"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "equal_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "applyEqRigid" (formula "24") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
               (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0,0"))
               (rule "applyEq" (formula "24") (term "0,1,1,0,0,0,0,1,0,0") (ifseqformula "1"))
               (rule "polySimp_addComm1" (formula "24") (term "1,0,0,0,0,1,0,0"))
               (rule "applyEqRigid" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
               (rule "times_zero_1" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1"))
               (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0"))
               (rule "leq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "2") (term "0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "9"))
               (rule "leq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEqRigid" (formula "26") (term "0,1,1,0,0,0,0") (ifseqformula "8"))
               (rule "mul_literals" (formula "26") (term "1,1,0,0,0,0"))
               (rule "add_literals" (formula "26") (term "1,0,0,0,0"))
               (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "8"))
               (rule "mul_literals" (formula "3") (term "1,1"))
               (rule "add_literals" (formula "3") (term "1"))
               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "7"))
               (rule "mul_literals" (formula "2") (term "1,1"))
               (rule "add_literals" (formula "2") (term "1"))
               (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "7"))
               (rule "applyEq" (formula "24") (term "0,1,0,1,0,0,0,0,1,0,0") (ifseqformula "7"))
               (rule "mul_literals" (formula "24") (term "1,0,1,0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "24") (term "0,1,0,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "24") (term "1,0,0,0,0,1,0,0"))
               (rule "applyEq" (formula "24") (term "0,1,0,1,1,0,0,0") (ifseqformula "7"))
               (rule "mul_literals" (formula "24") (term "1,0,1,1,0,0,0"))
               (rule "add_literals" (formula "24") (term "0,1,1,0,0,0"))
               (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0") (ifseqformula "7"))
               (rule "leq_literals" (formula "23") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "div_axiom" (formula "23") (term "1,1,1") (inst "quotient=quotient_2"))
               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1"))
               (rule "equal_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
               (rule "add_literals" (formula "3") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
               (rule "applyEq" (formula "26") (term "1,1,1") (ifseqformula "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1"))
               (rule "polySimp_rightDist" (formula "26") (term "0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1"))
               (rule "mul_literals" (formula "26") (term "0,0,1,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
               (rule "times_zero_1" (formula "21") (term "0,0"))
               (rule "add_zero_left" (formula "21") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1"))
               (rule "polySimp_rightDist" (formula "21") (term "1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
               (rule "mul_literals" (formula "21") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
               (rule "mul_literals" (formula "8") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "times_zero_1" (formula "8") (term "1,0"))
               (rule "add_zero_right" (formula "8") (term "0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1"))
               (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0"))
               (rule "leq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
               (rule "times_zero_1" (formula "12") (term "0,0"))
               (rule "add_zero_left" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "9"))
               (rule "times_zero_2" (formula "2") (term "1,1"))
               (rule "add_zero_right" (formula "2") (term "1"))
               (rule "applyEqRigid" (formula "31") (term "1,1,1") (ifseqformula "9"))
               (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "9"))
               (rule "times_zero_2" (formula "25") (term "1,1"))
               (rule "add_zero_right" (formula "25") (term "1"))
               (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
               (rule "qeq_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "9"))
               (rule "leq_literals" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "9"))
               (rule "times_zero_2" (formula "3") (term "1,0,1"))
               (rule "add_zero_right" (formula "3") (term "0,1"))
               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "9"))
               (rule "times_zero_2" (formula "4") (term "1,0,1"))
               (rule "add_zero_right" (formula "4") (term "0,1"))
               (rule "applyEq" (formula "1") (term "1") (ifseqformula "9"))
               (rule "applyEq" (formula "29") (term "0,1,0,1,0,1") (ifseqformula "9"))
               (rule "times_zero_2" (formula "29") (term "1,0,1,0,1"))
               (rule "add_zero_right" (formula "29") (term "0,1,0,1"))
               (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "12"))
               (rule "leq_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "2"))
               (rule "times_zero_1" (formula "21") (term "0,0"))
               (rule "add_zero_left" (formula "21") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21"))
               (rule "mul_literals" (formula "21") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "10"))
               (rule "leq_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "div_axiom" (formula "26") (term "0,1") (inst "quotient=quotient_3"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "equal_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
               (rule "add_literals" (formula "3") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "3"))
               (rule "times_zero_1" (formula "24") (term "0,0"))
               (rule "add_zero_left" (formula "24") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24"))
               (rule "polySimp_mulComm0" (formula "24") (term "1"))
               (rule "polySimp_rightDist" (formula "24") (term "1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
               (rule "mul_literals" (formula "24") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "2") (term "0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "5"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "times_zero_1" (formula "13") (term "1,0"))
               (rule "add_zero_right" (formula "13") (term "0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "leq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
               (rule "times_zero_1" (formula "16") (term "0,0"))
               (rule "add_zero_left" (formula "16") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "16"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0"))
               (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
               (rule "neg_literal" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
               (rule "add_literals" (formula "16") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0"))
               (rule "qeq_literals" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "16"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "8"))
               (rule "polySimp_rightDist" (formula "27") (term "0,0"))
               (rule "mul_literals" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "add_literals" (formula "27") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27"))
               (rule "mul_literals" (formula "27") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "12"))
               (rule "times_zero_1" (formula "27") (term "1,1,0"))
               (rule "greater_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "leq_literals" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "15"))
               (rule "applyEqRigid" (formula "28") (term "0,1,1") (ifseqformula "12"))
               (rule "times_zero_2" (formula "28") (term "1,1"))
               (rule "add_zero_right" (formula "28") (term "1"))
               (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "12"))
               (rule "times_zero_2" (formula "2") (term "1,1"))
               (rule "add_zero_right" (formula "2") (term "1"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "12"))
               (rule "leq_literals" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
               (rule "qeq_literals" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "12"))
               (rule "times_zero_2" (formula "4") (term "1,0,1"))
               (rule "add_zero_right" (formula "4") (term "0,1"))
               (rule "applyEq" (formula "1") (term "1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "12"))
               (rule "times_zero_2" (formula "3") (term "1,0,1"))
               (rule "add_zero_right" (formula "3") (term "0,1"))
               (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "15"))
               (rule "leq_literals" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "qeq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "qeq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
               (rule "times_zero_1" (formula "23") (term "0,0"))
               (rule "add_zero_left" (formula "23") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "12"))
               (rule "leq_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "andRight" (formula "28"))
               (branch "Case 1"
                  (rule "allRight" (formula "28") (inst "sk=j_0"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "30"))
                  (rule "inEqSimp_geqRight" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "31"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "31"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "33"))
                  (rule "eqSymm" (formula "1") (term "0,0"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "22")))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "23"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "5"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "3"))
                  (rule "leq_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                  (rule "mul_literals" (formula "2") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "19"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "j_0 ≥ 0 TRUE"
                     (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "eqSymm" (formula "34"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "18"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "allLeft" (formula "19") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet000001_3" (formula "19") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000001_4" (formula "19") (term "0,1"))
                     (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "19") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "19") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1"))
                     (rule "leq_literals" (formula "19") (term "0,1"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "19"))
                     (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "qeq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "18"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "j_0 ≥ 0 FALSE"
                     (rule "close" (formula "35") (ifseqformula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "28") (inst "sk=f_0"))
                  (rule "allRight" (formula "28") (inst "sk=o_0"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "eqSymm" (formula "28") (term "0,0,1,0"))
                  (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "31"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "nnf_ex2all" (formula "30"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "1,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "1") (term "1,1,0,1,0"))
                  (rule "commute_or" (formula "1") (term "0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "cut_direct" (formula "1") (term "0,1,0"))
                  (branch "CUT: o_0 = dest TRUE"
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "notRight" (formula "32"))
                     (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                     (rule "allLeft" (formula "18") (inst "t=i_0"))
                     (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,1,0,0"))
                     (rule "qeq_literals" (formula "18") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "18") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "18") (term "0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnon" (formula "18"))
                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "33")) (ifInst ""  (formula "23")))
                     (rule "eqSymm" (formula "19"))
                     (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "hideAuxiliaryEq" (formula "19"))
                     (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                     (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "18"))
                     (rule "allLeft" (formula "2") (inst "t=i_0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "17"))
                     (rule "qeq_literals" (formula "2") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1"))
                     (rule "leq_literals" (formula "2") (term "0,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "notLeft" (formula "2"))
                     (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + length) ∧ ¬f_0 = java.lang.Object::<created> TRUE"
                        (rule "andLeft" (formula "3"))
                        (rule "notLeft" (formula "4"))
                        (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "eqSymm" (formula "3"))
                        (rule "eqSymm" (formula "36"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "3"))
                        (rule "narrowSelectArrayType" (formula "36") (term "0") (ifseqformula "21") (ifseqformula "35"))
                        (rule "eqSymm" (formula "36"))
                        (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "false_right" (formula "33"))
                        (rule "applyEq" (formula "2") (term "1,0,0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "3"))
                        (rule "narrowSelectArrayType" (formula "35") (term "0") (ifseqformula "22") (ifseqformula "34"))
                        (rule "eqSymm" (formula "35"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "24"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                        (rule "mul_literals" (formula "4") (term "0,0"))
                        (rule "add_zero_left" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "20"))
                        (rule "leq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "commute_or" (formula "2") (term "0,0"))
                        (rule "commute_or_2" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "leq_literals" (formula "2") (term "0,1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch " ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + length) ∧ ¬f_0 = java.lang.Object::<created> FALSE"
                        (rule "close" (formula "34") (ifseqformula "3"))
                     )
                  )
                  (branch "CUT: o_0 = dest FALSE"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "src = dest FALSE"
               (rule "applyEqReverse" (formula "29") (term "3,0,1,1,0,1,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "29") (term "3,0,0,1,0,0,1,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "29") (term "3,0,0,1,0,1,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "29") (term "3,0,0,1,0,1,0,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "ex_pull_out1" (formula "28") (term "0,0,0,0,1,0"))
               (rule "div_axiom" (formula "28") (term "0,1,1") (inst "quotient=quotient_1"))
               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1"))
               (rule "equal_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
               (rule "add_literals" (formula "3") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "1"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1"))
               (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "leq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "3"))
               (rule "times_zero_1" (formula "22") (term "0,0"))
               (rule "add_zero_left" (formula "22") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1"))
               (rule "polySimp_rightDist" (formula "22") (term "1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
               (rule "mul_literals" (formula "22") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
               (rule "polySimp_rightDist" (formula "23") (term "0,0"))
               (rule "mul_literals" (formula "23") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "8"))
               (rule "times_zero_1" (formula "23") (term "1,1,0"))
               (rule "greater_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "leq_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
               (rule "times_zero_1" (formula "10") (term "0,0"))
               (rule "add_zero_left" (formula "10") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
               (rule "neg_literal" (formula "10") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "qeq_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "10"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "applyEqRigid" (formula "35") (term "1,1,1") (ifseqformula "8"))
               (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "8"))
               (rule "times_zero_2" (formula "2") (term "1,1"))
               (rule "add_literals" (formula "2") (term "1"))
               (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "8"))
               (rule "times_zero_2" (formula "24") (term "1,1"))
               (rule "add_literals" (formula "24") (term "1"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
               (rule "leq_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
               (rule "times_zero_2" (formula "4") (term "1,0,1"))
               (rule "add_literals" (formula "4") (term "0,1"))
               (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "8"))
               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
               (rule "times_zero_2" (formula "3") (term "1,0,1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "qeq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "8"))
               (rule "leq_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "2"))
               (rule "times_zero_1" (formula "21") (term "0,0"))
               (rule "add_zero_left" (formula "21") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21"))
               (rule "mul_literals" (formula "21") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "8"))
               (rule "leq_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "commute_and" (formula "31") (term "1"))
               (rule "div_axiom" (formula "31") (term "0,0,0,0,0,0,0") (inst "quotient=quotient_2"))
               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1"))
               (rule "equal_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0"))
               (rule "applyEqRigid" (formula "34") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "polySimp_addComm1" (formula "34") (term "1,1,0,0,0,0"))
               (rule "applyEqRigid" (formula "34") (term "0,1,1,1,0,0,0,1,0,0,0") (ifseqformula "1"))
               (rule "polySimp_addComm1" (formula "34") (term "1,1,0,0,0,1,0,0,0"))
               (rule "applyEq" (formula "34") (term "0,1,1,0,0,0,0,1,0,0") (ifseqformula "1"))
               (rule "polySimp_addComm1" (formula "34") (term "1,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "2") (term "0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "4"))
               (rule "times_zero_1" (formula "12") (term "0,0"))
               (rule "add_zero_left" (formula "12") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "mul_literals" (formula "12") (term "1"))
               (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "leq_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "leq_literals" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "12"))
               (rule "mul_literals" (formula "3") (term "1,1"))
               (rule "add_literals" (formula "3") (term "1"))
               (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "12"))
               (rule "mul_literals" (formula "4") (term "1,1"))
               (rule "add_literals" (formula "4") (term "1"))
               (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "11"))
               (rule "leq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
               (rule "qeq_literals" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "applyEqRigid" (formula "34") (term "0,1,1,0,0,0,0,0") (ifseqformula "10"))
               (rule "mul_literals" (formula "34") (term "1,1,0,0,0,0,0"))
               (rule "add_literals" (formula "34") (term "1,0,0,0,0,0"))
               (rule "applyEqRigid" (formula "34") (term "0,1,0,1,1,0,0,0,0") (ifseqformula "10"))
               (rule "mul_literals" (formula "34") (term "1,0,1,1,0,0,0,0"))
               (rule "add_literals" (formula "34") (term "0,1,1,0,0,0,0"))
               (rule "replace_known_left" (formula "34") (term "1,0,0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "10"))
               (rule "applyEq" (formula "34") (term "0,1,0,1,0,0,0,0,1,0,0") (ifseqformula "10"))
               (rule "mul_literals" (formula "34") (term "1,0,1,0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "34") (term "0,1,0,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "34") (term "1,0,0,0,0,1,0,0"))
               (rule "applyEqRigid" (formula "34") (term "0,1,0,1,1,0,0,0,1,0,0,0") (ifseqformula "10"))
               (rule "mul_literals" (formula "34") (term "1,0,1,1,0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "34") (term "0,1,1,0,0,0,1,0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "34") (term "0,0,0,0") (ifseqformula "11"))
               (rule "leq_literals" (formula "34") (term "0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "div_axiom" (formula "33") (term "0,0,1,1") (inst "quotient=quotient_3"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
               (rule "equal_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
               (rule "add_literals" (formula "3") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "applyEq" (formula "36") (term "0,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "36") (term "0,0,1,1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "36") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1"))
               (rule "polySimp_addComm1" (formula "36") (term "0,1,1"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,1,1"))
               (rule "polySimp_rightDist" (formula "36") (term "1,1,1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1"))
               (rule "polySimp_rightDist" (formula "36") (term "0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,1"))
               (rule "mul_literals" (formula "36") (term "0,0,1,1,1"))
               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
               (rule "times_zero_1" (formula "26") (term "0,0"))
               (rule "add_zero_left" (formula "26") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1"))
               (rule "polySimp_rightDist" (formula "26") (term "1"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
               (rule "mul_literals" (formula "26") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
               (rule "mul_literals" (formula "11") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "times_zero_1" (formula "11") (term "1,0"))
               (rule "add_zero_right" (formula "11") (term "0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1"))
               (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
               (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0"))
               (rule "leq_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "replace_known_left" (formula "38") (term "0,1") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "polySimp_addLiterals" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "2") (term "0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "23"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "30") (term "0,1,1") (ifseqformula "13"))
               (rule "times_zero_2" (formula "30") (term "1,1"))
               (rule "add_literals" (formula "30") (term "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
               (rule "leq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
               (rule "qeq_literals" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "12"))
               (rule "times_zero_2" (formula "2") (term "1,1"))
               (rule "add_literals" (formula "2") (term "1"))
               (rule "applyEq" (formula "1") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "12"))
               (rule "times_zero_2" (formula "3") (term "1,0,1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "12"))
               (rule "mul_literals" (formula "4") (term "1,0,1"))
               (rule "add_literals" (formula "4") (term "0,1"))
               (rule "applyEqRigid" (formula "39") (term "0,1,0,1,1") (ifseqformula "12"))
               (rule "times_zero_2" (formula "39") (term "1,0,1,1"))
               (rule "add_zero_right" (formula "39") (term "0,1,1"))
               (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "14"))
               (rule "leq_literals" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "5"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "andRight" (formula "35"))
               (branch "Case 1"
                  (rule "andRight" (formula "35"))
                  (branch "Case 1"
                     (rule "allRight" (formula "35") (inst "sk=j_0"))
                     (rule "orRight" (formula "35"))
                     (rule "cutUpperBound" (formula "35") (ifseqformula "13"))
                     (branch "Case 1"
                        (rule "crossInst" (formula "14") (inst "sk=j_1") (ifseqformula "36"))
                        (rule "orRight" (formula "37"))
                        (rule "andLeft" (formula "14"))
                        (rule "orRight" (formula "39"))
                        (rule "orRight" (formula "38"))
                        (rule "inEqSimp_geqRight" (formula "40"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "41"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "41"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "41"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "5"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "applyEqRigid" (formula "42") (term "0,2,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_literals" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "Case 2"
                        (rule "crossInst" (formula "14") (inst "sk=j_1") (ifseqformula "36"))
                        (rule "orRight" (formula "37"))
                        (rule "notLeft" (formula "1"))
                        (rule "andLeft" (formula "13"))
                        (rule "orRight" (formula "38"))
                        (rule "orRight" (formula "40"))
                        (rule "inEqSimp_leqRight" (formula "38"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "40"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "41"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "applyEqRigid" (formula "18") (term "0,1,0") (ifseqformula "17"))
                        (rule "applyEqRigid" (formula "18") (term "0,2,0,1") (ifseqformula "17"))
                        (rule "applyEqRigid" (formula "18") (term "0,0,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "17"))
                        (rule "applyEqRigid" (formula "18") (term "0,2,1,1") (ifseqformula "17"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "38") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0"))
                        (rule "qeq_literals" (formula "38") (term "0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "false_right" (formula "38"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                        (rule "leq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "inEqSimp_contradInEq0" (formula "17") (term "0,0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "17") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "41"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "24")))
                        (rule "eqSymm" (formula "18") (term "1"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "18") (term "1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "41"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "pullOutSelect" (formula "18") (term "0,1") (inst "selectSK=arr_3"))
                        (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "18"))
                        (rule "simplifySelectOfAnon" (formula "18"))
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "40")) (ifInst ""  (formula "26")))
                        (rule "eqSymm" (formula "19") (term "1"))
                        (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                        (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                        (rule "mul_literals" (formula "4") (term "0,0"))
                        (rule "add_zero_left" (formula "4") (term "0"))
                        (rule "allLeft" (formula "22") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,1,0,0"))
                        (rule "qeq_literals" (formula "22") (term "1,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "22") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "22") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "22") (term "0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfAnon" (formula "22"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "42")) (ifInst ""  (formula "28")))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "elementOfArrayRangeConcrete" (formula "22") (term "0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                        (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "ifthenelse_split" (formula "18") (term "0"))
                        (branch "length ≥ 1 + j_0 TRUE"
                           (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                           (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "19"))
                           (rule "hideAuxiliaryEq" (formula "19"))
                           (rule "eqSymm" (formula "19") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "8"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                           (rule "mul_literals" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                           (rule "mul_literals" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "18"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: j_0 ≥ i_0 TRUE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "1,0"))
                              (rule "times_zero_1" (formula "19") (term "0"))
                              (rule "leq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEqRigid" (formula "42") (term "0,2,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "closeTrue" (formula "42"))
                           )
                           (branch "CUT: j_0 ≥ i_0 FALSE"
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_geqRight" (formula "40"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "20"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "length ≥ 1 + j_0 FALSE"
                           (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "18"))
                           (rule "hideAuxiliaryEq" (formula "18"))
                           (rule "inEqSimp_geqRight" (formula "39"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                           (rule "mul_literals" (formula "33") (term "0,0"))
                           (rule "add_zero_left" (formula "33") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                           (rule "mul_literals" (formula "15") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "15"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "2") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "14"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_literals" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "35") (inst "sk=j_0"))
                     (rule "orRight" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "orRight" (formula "37"))
                     (rule "inEqSimp_leqRight" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_geqRight" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "38"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_geqRight" (formula "38"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "40"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "24")))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "9"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "6"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                     (rule "mul_literals" (formula "2") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "19"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "j_0 ≥ 0 TRUE"
                        (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "eqSymm" (formula "41"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                        (rule "leq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "18"))
                        (rule "leq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "allLeft" (formula "20") (inst "t=j_0"))
                        (rule "replaceKnownSelect_taclet1010001_3" (formula "20") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01010001_4" (formula "20") (term "0,1"))
                        (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "20") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "20"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "j_0 ≥ 0 FALSE"
                        (rule "close" (formula "42") (ifseqformula "1"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "35") (inst "sk=f_0"))
                  (rule "allRight" (formula "35") (inst "sk=o_0"))
                  (rule "orRight" (formula "35"))
                  (rule "orRight" (formula "35"))
                  (rule "eqSymm" (formula "35") (term "0,0,1,0"))
                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "38"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "nnf_ex2all" (formula "37"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "1,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "1") (term "1,1,0,1,0"))
                  (rule "commute_or" (formula "1") (term "0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "cut_direct" (formula "1") (term "0,1,0"))
                  (branch "CUT: o_0 = dest TRUE"
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "39") (term "1,0,0,1") (ifseqformula "1"))
                     (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "false_right" (formula "39"))
                     (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                     (rule "allLeft" (formula "19") (inst "t=i_0"))
                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,1,0,0"))
                     (rule "qeq_literals" (formula "19") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "19") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "19") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "19") (term "0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnon" (formula "19"))
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "39")) (ifInst ""  (formula "25")))
                     (rule "eqSymm" (formula "20"))
                     (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "hideAuxiliaryEq" (formula "20"))
                     (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "allLeft" (formula "2") (inst "t=i_0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1"))
                     (rule "leq_literals" (formula "2") (term "0,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "17"))
                     (rule "qeq_literals" (formula "2") (term "0,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "notLeft" (formula "2"))
                     (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + length) ∧ ¬f_0 = java.lang.Object::<created> TRUE"
                        (rule "andLeft" (formula "3"))
                        (rule "notLeft" (formula "4"))
                        (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "eqSymm" (formula "3"))
                        (rule "eqSymm" (formula "43"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEqRigid" (formula "43") (term "2,0") (ifseqformula "3"))
                        (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "22") (ifseqformula "41"))
                        (rule "eqSymm" (formula "43"))
                        (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "false_right" (formula "38"))
                        (rule "applyEqRigid" (formula "2") (term "1,0,0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "applyEq" (formula "42") (term "2,0") (ifseqformula "3"))
                        (rule "narrowSelectArrayType" (formula "42") (term "0") (ifseqformula "23") (ifseqformula "40"))
                        (rule "eqSymm" (formula "42"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "27"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                        (rule "mul_literals" (formula "4") (term "0,0"))
                        (rule "add_zero_left" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "20"))
                        (rule "leq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "commute_or" (formula "2") (term "0,0"))
                        (rule "commute_or_2" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "2"))
                        (rule "andLeft" (formula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,1,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0"))
                        (rule "add_zero_right" (formula "7") (term "0"))
                        (rule "leq_literals" (formula "7"))
                        (rule "closeFalse" (formula "7"))
                     )
                     (branch " ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + length) ∧ ¬f_0 = java.lang.Object::<created> FALSE"
                        (rule "close" (formula "41") (ifseqformula "3"))
                     )
                  )
                  (branch "CUT: o_0 = dest FALSE"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch "Null Reference (x_arr = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr != null, but x_4 Out of Bounds!)"
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "mod_axiom" (formula "2") (term "1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
            (rule "applyEq" (formula "2") (term "0,1,0,1,0,0") (ifseqformula "9"))
            (rule "times_zero_2" (formula "2") (term "1,0,1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
            (rule "blockThrow" (formula "29") (term "1"))
            (rule "blockThrow" (formula "29") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
            (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "mul_literals" (formula "3") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
            (rule "polySimp_addComm0" (formula "22") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "22"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0"))
            (rule "polySimp_elimOne" (formula "22") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "22"))
            (rule "andLeft" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "5"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "times_zero_1" (formula "5") (term "1,0"))
            (rule "add_zero_right" (formula "5") (term "0"))
            (rule "leq_literals" (formula "5"))
            (rule "closeFalse" (formula "5"))
         )
      )
      (branch "Null Reference (_src = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_src != null, but i Out of Bounds!)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "blockThrow" (formula "27") (term "1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "blockThrow" (formula "27") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,0"))
         (rule "add_zero_right" (formula "5") (term "0,0"))
         (rule "qeq_literals" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
         (rule "times_zero_1" (formula "21") (term "0,0"))
         (rule "add_zero_left" (formula "21") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
         (rule "leq_literals" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
         (rule "polySimp_addComm0" (formula "23") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "23"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
         (rule "polySimp_elimOne" (formula "23") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "3"))
         (rule "andLeft" (formula "23"))
         (rule "inEqSimp_homoInEq1" (formula "23"))
         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
         (rule "add_literals" (formula "23") (term "1,1,0"))
         (rule "times_zero_1" (formula "23") (term "1,0"))
         (rule "add_zero_right" (formula "23") (term "0"))
         (rule "leq_literals" (formula "23"))
         (rule "closeFalse" (formula "23"))
      )
   )
   (branch "if x_2 false"
       (builtin "One Step Simplification" (formula "26"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
      (rule "applyEq" (formula "27") (term "1,0,1,2,1,0,1,0,1,0") (ifseqformula "4"))
      (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "4"))
      (rule "applyEq" (formula "27") (term "1,0,1,0,1,1,0") (ifseqformula "4"))
      (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,1,0,1,1,0"))
      (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,1,0"))
      (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "27") (term "0,1,0,1,1,0"))
      (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
      (rule "applyEq" (formula "6") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
      (rule "eqSymm" (formula "6") (term "1,0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "4"))
      (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "1,0"))
      (rule "times_zero_1" (formula "4") (term "0"))
      (rule "leq_literals" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "applyEq" (formula "23") (term "0,1,0,0,0,0") (ifseqformula "3"))
      (rule "applyEq" (formula "6") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
      (rule "applyEq" (formula "17") (term "1") (ifseqformula "3"))
      (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "3"))
      (rule "applyEq" (formula "20") (term "1") (ifseqformula "3"))
      (rule "mod_axiom" (formula "23") (term "1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0"))
      (rule "div_literals" (formula "23") (term "0,1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "23") (term "1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "23") (term "1,0,1,1,0"))
      (rule "add_literals" (formula "23") (term "0,1,1,0"))
      (rule "applyEq" (formula "4") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
      (rule "eqSymm" (formula "4") (term "1,0"))
      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
      (rule "polySimp_elimOne" (formula "17") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
      (rule "polySimp_elimOne" (formula "20") (term "0"))
      (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0,0"))
      (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0"))
      (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1,0,0"))
      (rule "add_literals" (formula "6") (term "1,0,1,0,0"))
      (rule "times_zero_1" (formula "6") (term "0,1,0,0"))
      (rule "leq_literals" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "blockBreak" (formula "22") (term "1"))
      (rule "lsBreak" (formula "22") (term "1"))
      (rule "assignment" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "methodCallEmpty" (formula "22") (term "1"))
      (rule "tryEmpty" (formula "22") (term "1"))
      (rule "emptyModality" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "eqSymm" (formula "22") (term "1,0,0,1"))
      (rule "applyEq" (formula "22") (term "1,0,1,1,1,0,1,0,0,0,0,1") (ifseqformula "3"))
      (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "3"))
      (rule "mod_axiom" (formula "22") (term "1,2,1,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,1,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,2,1,0,1,1,0,0"))
      (rule "applyEqRigid" (formula "22") (term "0,1,2,1,0,1,1,0,0") (ifseqformula "5"))
      (rule "times_zero_2" (formula "22") (term "1,2,1,0,1,1,0,0"))
      (rule "add_zero_right" (formula "22") (term "2,1,0,1,1,0,0"))
      (rule "mod_axiom" (formula "22") (term "1,2,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,1,0,0"))
      (rule "applyEqRigid" (formula "22") (term "0,1,2,1,0,0,1,0,0") (ifseqformula "5"))
      (rule "times_zero_2" (formula "22") (term "1,2,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "22") (term "2,1,0,0,1,0,0"))
      (rule "mod_axiom" (formula "22") (term "1,2,1,0,0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,1,0,0,1"))
      (rule "applyEq" (formula "22") (term "0,1,2,1,0,0,1,0,0,1") (ifseqformula "5"))
      (rule "times_zero_2" (formula "22") (term "1,2,1,0,0,1,0,0,1"))
      (rule "add_zero_right" (formula "22") (term "2,1,0,0,1,0,0,1"))
      (rule "mod_axiom" (formula "22") (term "1,1,1,0,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,1,0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,1,0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,1,1,0,1,0,0,0,0,1"))
      (rule "add_literals" (formula "22") (term "0,0,1,1,0,1,0,0,0,0,1"))
      (rule "applyEq" (formula "22") (term "0,1,1,1,0,1,0,0,0,0,1") (ifseqformula "5"))
      (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,0,0,0,0,1"))
      (rule "add_zero_right" (formula "22") (term "1,1,0,1,0,0,0,0,1"))
      (rule "andRight" (formula "22"))
      (branch "Case 1"
         (rule "allRight" (formula "22") (inst "sk=i_1"))
         (rule "orRight" (formula "22"))
         (rule "cutUpperBound" (formula "22") (ifseqformula "4"))
         (branch "Case 1"
            (rule "crossInst" (formula "5") (inst "sk=j_0") (ifseqformula "23"))
            (rule "orRight" (formula "24"))
            (rule "andLeft" (formula "5"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "27"))
            (rule "inEqSimp_geqRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "26"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "27"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_leqRight" (formula "28"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "5"))
            (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "5"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "5"))
            (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "4"))
            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
         (branch "Case 2"
            (rule "crossInst" (formula "5") (inst "sk=j_0") (ifseqformula "23"))
            (rule "orRight" (formula "24"))
            (rule "notLeft" (formula "1"))
            (rule "andLeft" (formula "4"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "25"))
            (rule "inEqSimp_leqRight" (formula "28"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_leqRight" (formula "27"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "9") (term "0,0,0,0") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "9") (term "0,2,0,1") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "9") (term "0,2,1,1") (ifseqformula "8"))
            (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "29"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
            (rule "add_literals" (formula "26") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0"))
            (rule "add_zero_right" (formula "26") (term "0,0"))
            (rule "qeq_literals" (formula "26") (term "0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "false_right" (formula "26"))
            (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "9") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
            (rule "leq_literals" (formula "4") (term "0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "3"))
            (rule "qeq_literals" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
            (rule "andLeft" (formula "8"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
            (rule "add_literals" (formula "8") (term "1,1,0"))
            (rule "times_zero_1" (formula "8") (term "1,0"))
            (rule "add_zero_right" (formula "8") (term "0"))
            (rule "leq_literals" (formula "8"))
            (rule "closeFalse" (formula "8"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "22") (inst "sk=f_0"))
         (rule "allRight" (formula "22") (inst "sk=o_0"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "eqSymm" (formula "22") (term "0,0,0,1"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
         (rule "eqSymm" (formula "25"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
         (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)
}
